/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dto;

import com.tsp.sct.dao.dao.*;
import com.tsp.sct.dao.factory.*;
import com.tsp.sct.dao.exceptions.*;
import java.io.Serializable;
import java.util.*;

public class TipoComprobante implements Serializable
{
	/** 
	 * This attribute maps to the column ID_TIPO_COMPROBANTE in the tipo_comprobante table.
	 */
	protected int idTipoComprobante;

	/** 
	 * This attribute maps to the column NOMBRE in the tipo_comprobante table.
	 */
	protected String nombre;

	/** 
	 * This attribute maps to the column DESCRIPCION in the tipo_comprobante table.
	 */
	protected String descripcion;

	/**
	 * Method 'TipoComprobante'
	 * 
	 */
	public TipoComprobante()
	{
	}

	/**
	 * Method 'getIdTipoComprobante'
	 * 
	 * @return int
	 */
	public int getIdTipoComprobante()
	{
		return idTipoComprobante;
	}

	/**
	 * Method 'setIdTipoComprobante'
	 * 
	 * @param idTipoComprobante
	 */
	public void setIdTipoComprobante(int idTipoComprobante)
	{
		this.idTipoComprobante = idTipoComprobante;
	}

	/**
	 * Method 'getNombre'
	 * 
	 * @return String
	 */
	public String getNombre()
	{
		return nombre;
	}

	/**
	 * Method 'setNombre'
	 * 
	 * @param nombre
	 */
	public void setNombre(String nombre)
	{
		this.nombre = nombre;
	}

	/**
	 * Method 'getDescripcion'
	 * 
	 * @return String
	 */
	public String getDescripcion()
	{
		return descripcion;
	}

	/**
	 * Method 'setDescripcion'
	 * 
	 * @param descripcion
	 */
	public void setDescripcion(String descripcion)
	{
		this.descripcion = descripcion;
	}

	/**
	 * Method 'equals'
	 * 
	 * @param _other
	 * @return boolean
	 */
	public boolean equals(Object _other)
	{
		if (_other == null) {
			return false;
		}
		
		if (_other == this) {
			return true;
		}
		
		if (!(_other instanceof TipoComprobante)) {
			return false;
		}
		
		final TipoComprobante _cast = (TipoComprobante) _other;
		if (idTipoComprobante != _cast.idTipoComprobante) {
			return false;
		}
		
		if (nombre == null ? _cast.nombre != nombre : !nombre.equals( _cast.nombre )) {
			return false;
		}
		
		if (descripcion == null ? _cast.descripcion != descripcion : !descripcion.equals( _cast.descripcion )) {
			return false;
		}
		
		return true;
	}

	/**
	 * Method 'hashCode'
	 * 
	 * @return int
	 */
	public int hashCode()
	{
		int _hashCode = 0;
		_hashCode = 29 * _hashCode + idTipoComprobante;
		if (nombre != null) {
			_hashCode = 29 * _hashCode + nombre.hashCode();
		}
		
		if (descripcion != null) {
			_hashCode = 29 * _hashCode + descripcion.hashCode();
		}
		
		return _hashCode;
	}

	/**
	 * Method 'createPk'
	 * 
	 * @return TipoComprobantePk
	 */
	public TipoComprobantePk createPk()
	{
		return new TipoComprobantePk(idTipoComprobante);
	}

	/**
	 * Method 'toString'
	 * 
	 * @return String
	 */
	public String toString()
	{
		StringBuffer ret = new StringBuffer();
		ret.append( "com.tsp.sct.dao.dto.TipoComprobante: " );
		ret.append( "idTipoComprobante=" + idTipoComprobante );
		ret.append( ", nombre=" + nombre );
		ret.append( ", descripcion=" + descripcion );
		return ret.toString();
	}

}
