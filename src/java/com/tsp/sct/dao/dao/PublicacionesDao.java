/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface PublicacionesDao
{
	/** 
	 * Inserts a new row in the publicaciones table.
	 */
	public PublicacionesPk insert(Publicaciones dto) throws PublicacionesDaoException;

	/** 
	 * Updates a single row in the publicaciones table.
	 */
	public void update(PublicacionesPk pk, Publicaciones dto) throws PublicacionesDaoException;

	/** 
	 * Deletes a single row in the publicaciones table.
	 */
	public void delete(PublicacionesPk pk) throws PublicacionesDaoException;

	/** 
	 * Returns the rows from the publicaciones table that matches the specified primary-key value.
	 */
	public Publicaciones findByPrimaryKey(PublicacionesPk pk) throws PublicacionesDaoException;

	/** 
	 * Returns all rows from the publicaciones table that match the criteria 'ID_PUBLICACIONES = :idPublicaciones'.
	 */
	public Publicaciones findByPrimaryKey(int idPublicaciones) throws PublicacionesDaoException;

	/** 
	 * Returns all rows from the publicaciones table that match the criteria ''.
	 */
	public Publicaciones[] findAll() throws PublicacionesDaoException;

	/** 
	 * Returns all rows from the publicaciones table that match the criteria 'ID_PUBLICACIONES = :idPublicaciones'.
	 */
	public Publicaciones[] findWhereIdPublicacionesEquals(int idPublicaciones) throws PublicacionesDaoException;

	/** 
	 * Returns all rows from the publicaciones table that match the criteria 'FECHA = :fecha'.
	 */
	public Publicaciones[] findWhereFechaEquals(String fecha) throws PublicacionesDaoException;

	/** 
	 * Returns all rows from the publicaciones table that match the criteria 'NOMBRE = :nombre'.
	 */
	public Publicaciones[] findWhereNombreEquals(String nombre) throws PublicacionesDaoException;

	/** 
	 * Returns all rows from the publicaciones table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public Publicaciones[] findWhereDescripcionEquals(String descripcion) throws PublicacionesDaoException;

	/** 
	 * Returns all rows from the publicaciones table that match the criteria 'FECHA_PUBLICACION = :fechaPublicacion'.
	 */
	public Publicaciones[] findWhereFechaPublicacionEquals(Date fechaPublicacion) throws PublicacionesDaoException;

	/** 
	 * Returns all rows from the publicaciones table that match the criteria 'FECHA_VENCIMIENTO = :fechaVencimiento'.
	 */
	public Publicaciones[] findWhereFechaVencimientoEquals(Date fechaVencimiento) throws PublicacionesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the publicaciones table that match the specified arbitrary SQL statement
	 */
	public Publicaciones[] findByDynamicSelect(String sql, Object[] sqlParams) throws PublicacionesDaoException;

	/** 
	 * Returns all rows from the publicaciones table that match the specified arbitrary SQL statement
	 */
	public Publicaciones[] findByDynamicWhere(String sql, Object[] sqlParams) throws PublicacionesDaoException;

}
