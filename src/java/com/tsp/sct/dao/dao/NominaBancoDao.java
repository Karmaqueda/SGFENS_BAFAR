/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface NominaBancoDao
{
	/** 
	 * Inserts a new row in the nomina_banco table.
	 */
	public NominaBancoPk insert(NominaBanco dto) throws NominaBancoDaoException;

	/** 
	 * Updates a single row in the nomina_banco table.
	 */
	public void update(NominaBancoPk pk, NominaBanco dto) throws NominaBancoDaoException;

	/** 
	 * Deletes a single row in the nomina_banco table.
	 */
	public void delete(NominaBancoPk pk) throws NominaBancoDaoException;

	/** 
	 * Returns the rows from the nomina_banco table that matches the specified primary-key value.
	 */
	public NominaBanco findByPrimaryKey(NominaBancoPk pk) throws NominaBancoDaoException;

	/** 
	 * Returns all rows from the nomina_banco table that match the criteria 'ID_BANCO = :idBanco'.
	 */
	public NominaBanco findByPrimaryKey(int idBanco) throws NominaBancoDaoException;

	/** 
	 * Returns all rows from the nomina_banco table that match the criteria ''.
	 */
	public NominaBanco[] findAll() throws NominaBancoDaoException;

	/** 
	 * Returns all rows from the nomina_banco table that match the criteria 'ID_BANCO = :idBanco'.
	 */
	public NominaBanco[] findWhereIdBancoEquals(int idBanco) throws NominaBancoDaoException;

	/** 
	 * Returns all rows from the nomina_banco table that match the criteria 'NOMBRE = :nombre'.
	 */
	public NominaBanco[] findWhereNombreEquals(String nombre) throws NominaBancoDaoException;

	/** 
	 * Returns all rows from the nomina_banco table that match the criteria 'NOMBRE_O_RAZON_SOCIAL = :nombreORazonSocial'.
	 */
	public NominaBanco[] findWhereNombreORazonSocialEquals(String nombreORazonSocial) throws NominaBancoDaoException;

	/** 
	 * Returns all rows from the nomina_banco table that match the criteria 'CLAVE = :clave'.
	 */
	public NominaBanco[] findWhereClaveEquals(String clave) throws NominaBancoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the nomina_banco table that match the specified arbitrary SQL statement
	 */
	public NominaBanco[] findByDynamicSelect(String sql, Object[] sqlParams) throws NominaBancoDaoException;

	/** 
	 * Returns all rows from the nomina_banco table that match the specified arbitrary SQL statement
	 */
	public NominaBanco[] findByDynamicWhere(String sql, Object[] sqlParams) throws NominaBancoDaoException;

}
