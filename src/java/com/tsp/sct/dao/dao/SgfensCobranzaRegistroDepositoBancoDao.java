/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface SgfensCobranzaRegistroDepositoBancoDao
{
	/** 
	 * Inserts a new row in the sgfens_cobranza_registro_deposito_banco table.
	 */
	public SgfensCobranzaRegistroDepositoBancoPk insert(SgfensCobranzaRegistroDepositoBanco dto) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Updates a single row in the sgfens_cobranza_registro_deposito_banco table.
	 */
	public void update(SgfensCobranzaRegistroDepositoBancoPk pk, SgfensCobranzaRegistroDepositoBanco dto) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Deletes a single row in the sgfens_cobranza_registro_deposito_banco table.
	 */
	public void delete(SgfensCobranzaRegistroDepositoBancoPk pk) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Returns the rows from the sgfens_cobranza_registro_deposito_banco table that matches the specified primary-key value.
	 */
	public SgfensCobranzaRegistroDepositoBanco findByPrimaryKey(SgfensCobranzaRegistroDepositoBancoPk pk) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_registro_deposito_banco table that match the criteria 'ID_DEPOSITO = :idDeposito'.
	 */
	public SgfensCobranzaRegistroDepositoBanco findByPrimaryKey(int idDeposito) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_registro_deposito_banco table that match the criteria ''.
	 */
	public SgfensCobranzaRegistroDepositoBanco[] findAll() throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_registro_deposito_banco table that match the criteria 'ID_DEPOSITO = :idDeposito'.
	 */
	public SgfensCobranzaRegistroDepositoBanco[] findWhereIdDepositoEquals(int idDeposito) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_registro_deposito_banco table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public SgfensCobranzaRegistroDepositoBanco[] findWhereIdEmpresaEquals(int idEmpresa) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_registro_deposito_banco table that match the criteria 'FOTO_BOUCHER = :fotoBoucher'.
	 */
	public SgfensCobranzaRegistroDepositoBanco[] findWhereFotoBoucherEquals(String fotoBoucher) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_registro_deposito_banco table that match the criteria 'NUM_REFERENCIA_BOUCHER = :numReferenciaBoucher'.
	 */
	public SgfensCobranzaRegistroDepositoBanco[] findWhereNumReferenciaBoucherEquals(String numReferenciaBoucher) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_registro_deposito_banco table that match the criteria 'MONTO = :monto'.
	 */
	public SgfensCobranzaRegistroDepositoBanco[] findWhereMontoEquals(double monto) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_registro_deposito_banco table that match the criteria 'LATITUD = :latitud'.
	 */
	public SgfensCobranzaRegistroDepositoBanco[] findWhereLatitudEquals(String latitud) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_registro_deposito_banco table that match the criteria 'LONGITUD = :longitud'.
	 */
	public SgfensCobranzaRegistroDepositoBanco[] findWhereLongitudEquals(String longitud) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_registro_deposito_banco table that match the criteria 'FECHA_DEPOSITO = :fechaDeposito'.
	 */
	public SgfensCobranzaRegistroDepositoBanco[] findWhereFechaDepositoEquals(Date fechaDeposito) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_registro_deposito_banco table that match the criteria 'ID_VENDEDOR = :idVendedor'.
	 */
	public SgfensCobranzaRegistroDepositoBanco[] findWhereIdVendedorEquals(int idVendedor) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_registro_deposito_banco table that match the criteria 'ID_BANCO = :idBanco'.
	 */
	public SgfensCobranzaRegistroDepositoBanco[] findWhereIdBancoEquals(int idBanco) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the sgfens_cobranza_registro_deposito_banco table that match the specified arbitrary SQL statement
	 */
	public SgfensCobranzaRegistroDepositoBanco[] findByDynamicSelect(String sql, Object[] sqlParams) throws SgfensCobranzaRegistroDepositoBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_registro_deposito_banco table that match the specified arbitrary SQL statement
	 */
	public SgfensCobranzaRegistroDepositoBanco[] findByDynamicWhere(String sql, Object[] sqlParams) throws SgfensCobranzaRegistroDepositoBancoDaoException;

}
