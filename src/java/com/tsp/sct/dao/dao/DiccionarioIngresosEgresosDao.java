/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface DiccionarioIngresosEgresosDao
{
	/** 
	 * Inserts a new row in the diccionario_ingresos_egresos table.
	 */
	public DiccionarioIngresosEgresosPk insert(DiccionarioIngresosEgresos dto) throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Updates a single row in the diccionario_ingresos_egresos table.
	 */
	public void update(DiccionarioIngresosEgresosPk pk, DiccionarioIngresosEgresos dto) throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Deletes a single row in the diccionario_ingresos_egresos table.
	 */
	public void delete(DiccionarioIngresosEgresosPk pk) throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Returns the rows from the diccionario_ingresos_egresos table that matches the specified primary-key value.
	 */
	public DiccionarioIngresosEgresos findByPrimaryKey(DiccionarioIngresosEgresosPk pk) throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Returns all rows from the diccionario_ingresos_egresos table that match the criteria 'id_diccionario_i_e = :idDiccionarioIE'.
	 */
	public DiccionarioIngresosEgresos findByPrimaryKey(int idDiccionarioIE) throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Returns all rows from the diccionario_ingresos_egresos table that match the criteria ''.
	 */
	public DiccionarioIngresosEgresos[] findAll() throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Returns all rows from the diccionario_ingresos_egresos table that match the criteria 'id_diccionario_i_e = :idDiccionarioIE'.
	 */
	public DiccionarioIngresosEgresos[] findWhereIdDiccionarioIEEquals(int idDiccionarioIE) throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Returns all rows from the diccionario_ingresos_egresos table that match the criteria 'es_general = :esGeneral'.
	 */
	public DiccionarioIngresosEgresos[] findWhereEsGeneralEquals(int esGeneral) throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Returns all rows from the diccionario_ingresos_egresos table that match the criteria 'id_empresa = :idEmpresa'.
	 */
	public DiccionarioIngresosEgresos[] findWhereIdEmpresaEquals(int idEmpresa) throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Returns all rows from the diccionario_ingresos_egresos table that match the criteria 'nombre = :nombre'.
	 */
	public DiccionarioIngresosEgresos[] findWhereNombreEquals(String nombre) throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Returns all rows from the diccionario_ingresos_egresos table that match the criteria 'descripcion = :descripcion'.
	 */
	public DiccionarioIngresosEgresos[] findWhereDescripcionEquals(String descripcion) throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Returns all rows from the diccionario_ingresos_egresos table that match the criteria 'es_ingreso = :esIngreso'.
	 */
	public DiccionarioIngresosEgresos[] findWhereEsIngresoEquals(int esIngreso) throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Returns all rows from the diccionario_ingresos_egresos table that match the criteria 'id_estatus = :idEstatus'.
	 */
	public DiccionarioIngresosEgresos[] findWhereIdEstatusEquals(int idEstatus) throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Returns all rows from the diccionario_ingresos_egresos table that match the criteria 'folio_movil = :folioMovil'.
	 */
	public DiccionarioIngresosEgresos[] findWhereFolioMovilEquals(String folioMovil) throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the diccionario_ingresos_egresos table that match the specified arbitrary SQL statement
	 */
	public DiccionarioIngresosEgresos[] findByDynamicSelect(String sql, Object[] sqlParams) throws DiccionarioIngresosEgresosDaoException;

	/** 
	 * Returns all rows from the diccionario_ingresos_egresos table that match the specified arbitrary SQL statement
	 */
	public DiccionarioIngresosEgresos[] findByDynamicWhere(String sql, Object[] sqlParams) throws DiccionarioIngresosEgresosDaoException;

}
