/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface TpvTipoServicioDao
{
	/** 
	 * Inserts a new row in the TPV_TIPO_SERVICIO table.
	 */
	public TpvTipoServicioPk insert(TpvTipoServicio dto) throws TpvTipoServicioDaoException;

	/** 
	 * Updates a single row in the TPV_TIPO_SERVICIO table.
	 */
	public void update(TpvTipoServicioPk pk, TpvTipoServicio dto) throws TpvTipoServicioDaoException;

	/** 
	 * Deletes a single row in the TPV_TIPO_SERVICIO table.
	 */
	public void delete(TpvTipoServicioPk pk) throws TpvTipoServicioDaoException;

	/** 
	 * Returns the rows from the TPV_TIPO_SERVICIO table that matches the specified primary-key value.
	 */
	public TpvTipoServicio findByPrimaryKey(TpvTipoServicioPk pk) throws TpvTipoServicioDaoException;

	/** 
	 * Returns all rows from the TPV_TIPO_SERVICIO table that match the criteria 'ID_TPV_TIPO_SERVICIO = :idTpvTipoServicio'.
	 */
	public TpvTipoServicio findByPrimaryKey(int idTpvTipoServicio) throws TpvTipoServicioDaoException;

	/** 
	 * Returns all rows from the TPV_TIPO_SERVICIO table that match the criteria ''.
	 */
	public TpvTipoServicio[] findAll() throws TpvTipoServicioDaoException;

	/** 
	 * Returns all rows from the TPV_TIPO_SERVICIO table that match the criteria 'ID_TPV_TIPO_SERVICIO = :idTpvTipoServicio'.
	 */
	public TpvTipoServicio[] findWhereIdTpvTipoServicioEquals(int idTpvTipoServicio) throws TpvTipoServicioDaoException;

	/** 
	 * Returns all rows from the TPV_TIPO_SERVICIO table that match the criteria 'NOMBRE_SERVICIO = :nombreServicio'.
	 */
	public TpvTipoServicio[] findWhereNombreServicioEquals(String nombreServicio) throws TpvTipoServicioDaoException;

	/** 
	 * Returns all rows from the TPV_TIPO_SERVICIO table that match the criteria 'DESCRIPCION_SERVICIO = :descripcionServicio'.
	 */
	public TpvTipoServicio[] findWhereDescripcionServicioEquals(String descripcionServicio) throws TpvTipoServicioDaoException;

	/** 
	 * Returns all rows from the TPV_TIPO_SERVICIO table that match the criteria 'MONTO_MAXIMO_COBRO_TDC = :montoMaximoCobroTdc'.
	 */
	public TpvTipoServicio[] findWhereMontoMaximoCobroTdcEquals(double montoMaximoCobroTdc) throws TpvTipoServicioDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the TPV_TIPO_SERVICIO table that match the specified arbitrary SQL statement
	 */
	public TpvTipoServicio[] findByDynamicSelect(String sql, Object[] sqlParams) throws TpvTipoServicioDaoException;

	/** 
	 * Returns all rows from the TPV_TIPO_SERVICIO table that match the specified arbitrary SQL statement
	 */
	public TpvTipoServicio[] findByDynamicWhere(String sql, Object[] sqlParams) throws TpvTipoServicioDaoException;

}
