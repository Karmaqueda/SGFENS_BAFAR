/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface GastosEvcDao
{
	/** 
	 * Inserts a new row in the gastos_evc table.
	 */
	public GastosEvcPk insert(GastosEvc dto) throws GastosEvcDaoException;

	/** 
	 * Updates a single row in the gastos_evc table.
	 */
	public void update(GastosEvcPk pk, GastosEvc dto) throws GastosEvcDaoException;

	/** 
	 * Deletes a single row in the gastos_evc table.
	 */
	public void delete(GastosEvcPk pk) throws GastosEvcDaoException;

	/** 
	 * Returns the rows from the gastos_evc table that matches the specified primary-key value.
	 */
	public GastosEvc findByPrimaryKey(GastosEvcPk pk) throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the criteria 'ID_GASTOS = :idGastos'.
	 */
	public GastosEvc findByPrimaryKey(int idGastos) throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the criteria ''.
	 */
	public GastosEvc[] findAll() throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the criteria 'ID_GASTOS = :idGastos'.
	 */
	public GastosEvc[] findWhereIdGastosEquals(int idGastos) throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the criteria 'ID_CONCEPTO = :idConcepto'.
	 */
	public GastosEvc[] findWhereIdConceptoEquals(int idConcepto) throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the criteria 'ID_EMPLEADO = :idEmpleado'.
	 */
	public GastosEvc[] findWhereIdEmpleadoEquals(int idEmpleado) throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the criteria 'COMENTARIO = :comentario'.
	 */
	public GastosEvc[] findWhereComentarioEquals(String comentario) throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the criteria 'FECHA = :fecha'.
	 */
	public GastosEvc[] findWhereFechaEquals(Date fecha) throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the criteria 'MONTO = :monto'.
	 */
	public GastosEvc[] findWhereMontoEquals(double monto) throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the criteria 'LATITUD = :latitud'.
	 */
	public GastosEvc[] findWhereLatitudEquals(double latitud) throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the criteria 'LONGITUD = :longitud'.
	 */
	public GastosEvc[] findWhereLongitudEquals(double longitud) throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public GastosEvc[] findWhereIdEstatusEquals(int idEstatus) throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the criteria 'REFERENCIA = :referencia'.
	 */
	public GastosEvc[] findWhereReferenciaEquals(String referencia) throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public GastosEvc[] findWhereIdEmpresaEquals(int idEmpresa) throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the criteria 'VALIDACION = :validacion'.
	 */
	public GastosEvc[] findWhereValidacionEquals(int validacion) throws GastosEvcDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the gastos_evc table that match the specified arbitrary SQL statement
	 */
	public GastosEvc[] findByDynamicSelect(String sql, Object[] sqlParams) throws GastosEvcDaoException;

	/** 
	 * Returns all rows from the gastos_evc table that match the specified arbitrary SQL statement
	 */
	public GastosEvc[] findByDynamicWhere(String sql, Object[] sqlParams) throws GastosEvcDaoException;

}
