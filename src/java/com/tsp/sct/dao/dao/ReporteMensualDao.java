/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface ReporteMensualDao
{
	/** 
	 * Inserts a new row in the reporte_mensual table.
	 */
	public ReporteMensualPk insert(ReporteMensual dto) throws ReporteMensualDaoException;

	/** 
	 * Updates a single row in the reporte_mensual table.
	 */
	public void update(ReporteMensualPk pk, ReporteMensual dto) throws ReporteMensualDaoException;

	/** 
	 * Deletes a single row in the reporte_mensual table.
	 */
	public void delete(ReporteMensualPk pk) throws ReporteMensualDaoException;

	/** 
	 * Returns the rows from the reporte_mensual table that matches the specified primary-key value.
	 */
	public ReporteMensual findByPrimaryKey(ReporteMensualPk pk) throws ReporteMensualDaoException;

	/** 
	 * Returns all rows from the reporte_mensual table that match the criteria 'ID_REPORTE_MENSUAL = :idReporteMensual'.
	 */
	public ReporteMensual findByPrimaryKey(int idReporteMensual) throws ReporteMensualDaoException;

	/** 
	 * Returns all rows from the reporte_mensual table that match the criteria ''.
	 */
	public ReporteMensual[] findAll() throws ReporteMensualDaoException;

	/** 
	 * Returns all rows from the reporte_mensual table that match the criteria 'ID_REPORTE_MENSUAL = :idReporteMensual'.
	 */
	public ReporteMensual[] findWhereIdReporteMensualEquals(int idReporteMensual) throws ReporteMensualDaoException;

	/** 
	 * Returns all rows from the reporte_mensual table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public ReporteMensual[] findWhereIdEmpresaEquals(int idEmpresa) throws ReporteMensualDaoException;

	/** 
	 * Returns all rows from the reporte_mensual table that match the criteria 'NOMBRE_ARCHIVO = :nombreArchivo'.
	 */
	public ReporteMensual[] findWhereNombreArchivoEquals(String nombreArchivo) throws ReporteMensualDaoException;

	/** 
	 * Returns all rows from the reporte_mensual table that match the criteria 'MES = :mes'.
	 */
	public ReporteMensual[] findWhereMesEquals(String mes) throws ReporteMensualDaoException;

	/** 
	 * Returns all rows from the reporte_mensual table that match the criteria 'ANIO = :anio'.
	 */
	public ReporteMensual[] findWhereAnioEquals(int anio) throws ReporteMensualDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the reporte_mensual table that match the specified arbitrary SQL statement
	 */
	public ReporteMensual[] findByDynamicSelect(String sql, Object[] sqlParams) throws ReporteMensualDaoException;

	/** 
	 * Returns all rows from the reporte_mensual table that match the specified arbitrary SQL statement
	 */
	public ReporteMensual[] findByDynamicWhere(String sql, Object[] sqlParams) throws ReporteMensualDaoException;

}
