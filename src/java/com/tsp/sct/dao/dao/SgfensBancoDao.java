/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface SgfensBancoDao
{
	/** 
	 * Inserts a new row in the sgfens_banco table.
	 */
	public SgfensBancoPk insert(SgfensBanco dto) throws SgfensBancoDaoException;

	/** 
	 * Updates a single row in the sgfens_banco table.
	 */
	public void update(SgfensBancoPk pk, SgfensBanco dto) throws SgfensBancoDaoException;

	/** 
	 * Deletes a single row in the sgfens_banco table.
	 */
	public void delete(SgfensBancoPk pk) throws SgfensBancoDaoException;

	/** 
	 * Returns the rows from the sgfens_banco table that matches the specified primary-key value.
	 */
	public SgfensBanco findByPrimaryKey(SgfensBancoPk pk) throws SgfensBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_banco table that match the criteria 'ID_BANCO = :idBanco'.
	 */
	public SgfensBanco findByPrimaryKey(int idBanco) throws SgfensBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_banco table that match the criteria ''.
	 */
	public SgfensBanco[] findAll() throws SgfensBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_banco table that match the criteria 'ID_BANCO = :idBanco'.
	 */
	public SgfensBanco[] findWhereIdBancoEquals(int idBanco) throws SgfensBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_banco table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public SgfensBanco[] findWhereIdEmpresaEquals(int idEmpresa) throws SgfensBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_banco table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public SgfensBanco[] findWhereIdEstatusEquals(int idEstatus) throws SgfensBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_banco table that match the criteria 'NOMBRE_BANCO = :nombreBanco'.
	 */
	public SgfensBanco[] findWhereNombreBancoEquals(String nombreBanco) throws SgfensBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_banco table that match the criteria 'NUMERO_SUCURSAL = :numeroSucursal'.
	 */
	public SgfensBanco[] findWhereNumeroSucursalEquals(String numeroSucursal) throws SgfensBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_banco table that match the criteria 'NUMERO_CUENTA = :numeroCuenta'.
	 */
	public SgfensBanco[] findWhereNumeroCuentaEquals(String numeroCuenta) throws SgfensBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_banco table that match the criteria 'CLABE = :clabe'.
	 */
	public SgfensBanco[] findWhereClabeEquals(String clabe) throws SgfensBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_banco table that match the criteria 'COMENTARIOS = :comentarios'.
	 */
	public SgfensBanco[] findWhereComentariosEquals(String comentarios) throws SgfensBancoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the sgfens_banco table that match the specified arbitrary SQL statement
	 */
	public SgfensBanco[] findByDynamicSelect(String sql, Object[] sqlParams) throws SgfensBancoDaoException;

	/** 
	 * Returns all rows from the sgfens_banco table that match the specified arbitrary SQL statement
	 */
	public SgfensBanco[] findByDynamicWhere(String sql, Object[] sqlParams) throws SgfensBancoDaoException;

}
