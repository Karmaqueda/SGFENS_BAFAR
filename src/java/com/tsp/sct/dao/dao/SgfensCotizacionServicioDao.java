/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface SgfensCotizacionServicioDao
{
	/** 
	 * Inserts a new row in the SGFENS_COTIZACION_SERVICIO table.
	 */
	public SgfensCotizacionServicioPk insert(SgfensCotizacionServicio dto) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Updates a single row in the SGFENS_COTIZACION_SERVICIO table.
	 */
	public void update(SgfensCotizacionServicioPk pk, SgfensCotizacionServicio dto) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Deletes a single row in the SGFENS_COTIZACION_SERVICIO table.
	 */
	public void delete(SgfensCotizacionServicioPk pk) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Returns the rows from the SGFENS_COTIZACION_SERVICIO table that matches the specified primary-key value.
	 */
	public SgfensCotizacionServicio findByPrimaryKey(SgfensCotizacionServicioPk pk) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_COTIZACION_SERVICIO table that match the criteria 'ID_COTIZACION = :idCotizacion AND ID_SERVICIO = :idServicio'.
	 */
	public SgfensCotizacionServicio findByPrimaryKey(int idCotizacion, int idServicio) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_COTIZACION_SERVICIO table that match the criteria ''.
	 */
	public SgfensCotizacionServicio[] findAll() throws SgfensCotizacionServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_COTIZACION_SERVICIO table that match the criteria 'ID_COTIZACION = :idCotizacion'.
	 */
	public SgfensCotizacionServicio[] findWhereIdCotizacionEquals(int idCotizacion) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_COTIZACION_SERVICIO table that match the criteria 'ID_SERVICIO = :idServicio'.
	 */
	public SgfensCotizacionServicio[] findWhereIdServicioEquals(int idServicio) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_COTIZACION_SERVICIO table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public SgfensCotizacionServicio[] findWhereDescripcionEquals(String descripcion) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_COTIZACION_SERVICIO table that match the criteria 'UNIDAD = :unidad'.
	 */
	public SgfensCotizacionServicio[] findWhereUnidadEquals(String unidad) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_COTIZACION_SERVICIO table that match the criteria 'IDENTIFICACION = :identificacion'.
	 */
	public SgfensCotizacionServicio[] findWhereIdentificacionEquals(String identificacion) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_COTIZACION_SERVICIO table that match the criteria 'CANTIDAD = :cantidad'.
	 */
	public SgfensCotizacionServicio[] findWhereCantidadEquals(double cantidad) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_COTIZACION_SERVICIO table that match the criteria 'PRECIO_UNITARIO = :precioUnitario'.
	 */
	public SgfensCotizacionServicio[] findWherePrecioUnitarioEquals(double precioUnitario) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_COTIZACION_SERVICIO table that match the criteria 'DESCUENTO_PORCENTAJE = :descuentoPorcentaje'.
	 */
	public SgfensCotizacionServicio[] findWhereDescuentoPorcentajeEquals(double descuentoPorcentaje) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_COTIZACION_SERVICIO table that match the criteria 'DESCUENTO_MONTO = :descuentoMonto'.
	 */
	public SgfensCotizacionServicio[] findWhereDescuentoMontoEquals(double descuentoMonto) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_COTIZACION_SERVICIO table that match the criteria 'SUBTOTAL = :subtotal'.
	 */
	public SgfensCotizacionServicio[] findWhereSubtotalEquals(double subtotal) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the SGFENS_COTIZACION_SERVICIO table that match the specified arbitrary SQL statement
	 */
	public SgfensCotizacionServicio[] findByDynamicSelect(String sql, Object[] sqlParams) throws SgfensCotizacionServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_COTIZACION_SERVICIO table that match the specified arbitrary SQL statement
	 */
	public SgfensCotizacionServicio[] findByDynamicWhere(String sql, Object[] sqlParams) throws SgfensCotizacionServicioDaoException;

}
