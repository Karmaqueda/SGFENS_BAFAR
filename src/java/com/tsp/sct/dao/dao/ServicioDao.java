/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface ServicioDao
{
	/** 
	 * Inserts a new row in the SERVICIO table.
	 */
	public ServicioPk insert(Servicio dto) throws ServicioDaoException;

	/** 
	 * Updates a single row in the SERVICIO table.
	 */
	public void update(ServicioPk pk, Servicio dto) throws ServicioDaoException;

	/** 
	 * Deletes a single row in the SERVICIO table.
	 */
	public void delete(ServicioPk pk) throws ServicioDaoException;

	/** 
	 * Returns the rows from the SERVICIO table that matches the specified primary-key value.
	 */
	public Servicio findByPrimaryKey(ServicioPk pk) throws ServicioDaoException;

	/** 
	 * Returns all rows from the SERVICIO table that match the criteria 'ID_SERVICIO = :idServicio'.
	 */
	public Servicio findByPrimaryKey(int idServicio) throws ServicioDaoException;

	/** 
	 * Returns all rows from the SERVICIO table that match the criteria ''.
	 */
	public Servicio[] findAll() throws ServicioDaoException;

	/** 
	 * Returns all rows from the SERVICIO table that match the criteria 'ID_SERVICIO = :idServicio'.
	 */
	public Servicio[] findWhereIdServicioEquals(int idServicio) throws ServicioDaoException;

	/** 
	 * Returns all rows from the SERVICIO table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public Servicio[] findWhereIdEmpresaEquals(int idEmpresa) throws ServicioDaoException;

	/** 
	 * Returns all rows from the SERVICIO table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public Servicio[] findWhereIdEstatusEquals(int idEstatus) throws ServicioDaoException;

	/** 
	 * Returns all rows from the SERVICIO table that match the criteria 'NOMBRE = :nombre'.
	 */
	public Servicio[] findWhereNombreEquals(String nombre) throws ServicioDaoException;

	/** 
	 * Returns all rows from the SERVICIO table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public Servicio[] findWhereDescripcionEquals(String descripcion) throws ServicioDaoException;

	/** 
	 * Returns all rows from the SERVICIO table that match the criteria 'UNIDAD = :unidad'.
	 */
	public Servicio[] findWhereUnidadEquals(String unidad) throws ServicioDaoException;

	/** 
	 * Returns all rows from the SERVICIO table that match the criteria 'PRECIO = :precio'.
	 */
	public Servicio[] findWherePrecioEquals(float precio) throws ServicioDaoException;

	/** 
	 * Returns all rows from the SERVICIO table that match the criteria 'SKU = :sku'.
	 */
	public Servicio[] findWhereSkuEquals(String sku) throws ServicioDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the SERVICIO table that match the specified arbitrary SQL statement
	 */
	public Servicio[] findByDynamicSelect(String sql, Object[] sqlParams) throws ServicioDaoException;

	/** 
	 * Returns all rows from the SERVICIO table that match the specified arbitrary SQL statement
	 */
	public Servicio[] findByDynamicWhere(String sql, Object[] sqlParams) throws ServicioDaoException;

}
