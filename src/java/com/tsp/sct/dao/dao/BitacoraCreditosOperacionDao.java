/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface BitacoraCreditosOperacionDao
{
	/** 
	 * Inserts a new row in the bitacora_creditos_operacion table.
	 */
	public BitacoraCreditosOperacionPk insert(BitacoraCreditosOperacion dto) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Updates a single row in the bitacora_creditos_operacion table.
	 */
	public void update(BitacoraCreditosOperacionPk pk, BitacoraCreditosOperacion dto) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Deletes a single row in the bitacora_creditos_operacion table.
	 */
	public void delete(BitacoraCreditosOperacionPk pk) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns the rows from the bitacora_creditos_operacion table that matches the specified primary-key value.
	 */
	public BitacoraCreditosOperacion findByPrimaryKey(BitacoraCreditosOperacionPk pk) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria 'ID_BITACORA_CREDITOS_OPERACION = :idBitacoraCreditosOperacion'.
	 */
	public BitacoraCreditosOperacion findByPrimaryKey(int idBitacoraCreditosOperacion) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria ''.
	 */
	public BitacoraCreditosOperacion[] findAll() throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria 'ID_BITACORA_CREDITOS_OPERACION = :idBitacoraCreditosOperacion'.
	 */
	public BitacoraCreditosOperacion[] findWhereIdBitacoraCreditosOperacionEquals(int idBitacoraCreditosOperacion) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public BitacoraCreditosOperacion[] findWhereIdEmpresaEquals(int idEmpresa) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public BitacoraCreditosOperacion[] findWhereIdEstatusEquals(int idEstatus) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria 'TIPO = :tipo'.
	 */
	public BitacoraCreditosOperacion[] findWhereTipoEquals(int tipo) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria 'ID_USER_REGISTRA = :idUserRegistra'.
	 */
	public BitacoraCreditosOperacion[] findWhereIdUserRegistraEquals(int idUserRegistra) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria 'CANTIDAD = :cantidad'.
	 */
	public BitacoraCreditosOperacion[] findWhereCantidadEquals(int cantidad) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria 'FECHA_HORA = :fechaHora'.
	 */
	public BitacoraCreditosOperacion[] findWhereFechaHoraEquals(Date fechaHora) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria 'ID_CLIENTE = :idCliente'.
	 */
	public BitacoraCreditosOperacion[] findWhereIdClienteEquals(int idCliente) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria 'ID_PROSPECTO = :idProspecto'.
	 */
	public BitacoraCreditosOperacion[] findWhereIdProspectoEquals(int idProspecto) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria 'MONTO_OPERACION = :montoOperacion'.
	 */
	public BitacoraCreditosOperacion[] findWhereMontoOperacionEquals(double montoOperacion) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria 'COMENTARIOS = :comentarios'.
	 */
	public BitacoraCreditosOperacion[] findWhereComentariosEquals(String comentarios) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria 'FOLIO_MOVIL = :folioMovil'.
	 */
	public BitacoraCreditosOperacion[] findWhereFolioMovilEquals(String folioMovil) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the criteria 'ID_OPERACION_BANCARIA = :idOperacionBancaria'.
	 */
	public BitacoraCreditosOperacion[] findWhereIdOperacionBancariaEquals(int idOperacionBancaria) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the specified arbitrary SQL statement
	 */
	public BitacoraCreditosOperacion[] findByDynamicSelect(String sql, Object[] sqlParams) throws BitacoraCreditosOperacionDaoException;

	/** 
	 * Returns all rows from the bitacora_creditos_operacion table that match the specified arbitrary SQL statement
	 */
	public BitacoraCreditosOperacion[] findByDynamicWhere(String sql, Object[] sqlParams) throws BitacoraCreditosOperacionDaoException;

}
