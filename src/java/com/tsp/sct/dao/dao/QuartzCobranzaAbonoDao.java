/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface QuartzCobranzaAbonoDao
{
	/** 
	 * Inserts a new row in the quartz_cobranza_abono table.
	 */
	public QuartzCobranzaAbonoPk insert(QuartzCobranzaAbono dto) throws QuartzCobranzaAbonoDaoException;

	/** 
	 * Updates a single row in the quartz_cobranza_abono table.
	 */
	public void update(QuartzCobranzaAbonoPk pk, QuartzCobranzaAbono dto) throws QuartzCobranzaAbonoDaoException;

	/** 
	 * Deletes a single row in the quartz_cobranza_abono table.
	 */
	public void delete(QuartzCobranzaAbonoPk pk) throws QuartzCobranzaAbonoDaoException;

	/** 
	 * Returns the rows from the quartz_cobranza_abono table that matches the specified primary-key value.
	 */
	public QuartzCobranzaAbono findByPrimaryKey(QuartzCobranzaAbonoPk pk) throws QuartzCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the quartz_cobranza_abono table that match the criteria 'ID_QUARTZ = :idQuartz'.
	 */
	public QuartzCobranzaAbono findByPrimaryKey(int idQuartz) throws QuartzCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the quartz_cobranza_abono table that match the criteria ''.
	 */
	public QuartzCobranzaAbono[] findAll() throws QuartzCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the quartz_cobranza_abono table that match the criteria 'ID_QUARTZ = :idQuartz'.
	 */
	public QuartzCobranzaAbono[] findWhereIdQuartzEquals(int idQuartz) throws QuartzCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the quartz_cobranza_abono table that match the criteria 'ID_COBRANZA_EVC = :idCobranzaEvc'.
	 */
	public QuartzCobranzaAbono[] findWhereIdCobranzaEvcEquals(int idCobranzaEvc) throws QuartzCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the quartz_cobranza_abono table that match the criteria 'ID_COBRANZA_SISTEM_TERCERO = :idCobranzaSistemTercero'.
	 */
	public QuartzCobranzaAbono[] findWhereIdCobranzaSistemTerceroEquals(int idCobranzaSistemTercero) throws QuartzCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the quartz_cobranza_abono table that match the criteria 'CLAVE = :clave'.
	 */
	public QuartzCobranzaAbono[] findWhereClaveEquals(String clave) throws QuartzCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the quartz_cobranza_abono table that match the criteria 'ID_SISTEMA_TERCERO = :idSistemaTercero'.
	 */
	public QuartzCobranzaAbono[] findWhereIdSistemaTerceroEquals(int idSistemaTercero) throws QuartzCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the quartz_cobranza_abono table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public QuartzCobranzaAbono[] findWhereIdEmpresaEquals(int idEmpresa) throws QuartzCobranzaAbonoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the quartz_cobranza_abono table that match the specified arbitrary SQL statement
	 */
	public QuartzCobranzaAbono[] findByDynamicSelect(String sql, Object[] sqlParams) throws QuartzCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the quartz_cobranza_abono table that match the specified arbitrary SQL statement
	 */
	public QuartzCobranzaAbono[] findByDynamicWhere(String sql, Object[] sqlParams) throws QuartzCobranzaAbonoDaoException;

}
