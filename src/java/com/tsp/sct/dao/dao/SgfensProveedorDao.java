/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface SgfensProveedorDao
{
	/** 
	 * Inserts a new row in the sgfens_proveedor table.
	 */
	public SgfensProveedorPk insert(SgfensProveedor dto) throws SgfensProveedorDaoException;

	/** 
	 * Updates a single row in the sgfens_proveedor table.
	 */
	public void update(SgfensProveedorPk pk, SgfensProveedor dto) throws SgfensProveedorDaoException;

	/** 
	 * Deletes a single row in the sgfens_proveedor table.
	 */
	public void delete(SgfensProveedorPk pk) throws SgfensProveedorDaoException;

	/** 
	 * Returns the rows from the sgfens_proveedor table that matches the specified primary-key value.
	 */
	public SgfensProveedor findByPrimaryKey(SgfensProveedorPk pk) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'ID_PROVEEDOR = :idProveedor'.
	 */
	public SgfensProveedor findByPrimaryKey(int idProveedor) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria ''.
	 */
	public SgfensProveedor[] findAll() throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'ID_PROVEEDOR = :idProveedor'.
	 */
	public SgfensProveedor[] findWhereIdProveedorEquals(int idProveedor) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public SgfensProveedor[] findWhereIdEmpresaEquals(int idEmpresa) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'NUMERO_PROVEEDOR = :numeroProveedor'.
	 */
	public SgfensProveedor[] findWhereNumeroProveedorEquals(String numeroProveedor) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'RFC = :rfc'.
	 */
	public SgfensProveedor[] findWhereRfcEquals(String rfc) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'RAZON_SOCIAL = :razonSocial'.
	 */
	public SgfensProveedor[] findWhereRazonSocialEquals(String razonSocial) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'CALLE = :calle'.
	 */
	public SgfensProveedor[] findWhereCalleEquals(String calle) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'NUMERO = :numero'.
	 */
	public SgfensProveedor[] findWhereNumeroEquals(String numero) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'NUMERO_INTERIOR = :numeroInterior'.
	 */
	public SgfensProveedor[] findWhereNumeroInteriorEquals(String numeroInterior) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'COLONIA = :colonia'.
	 */
	public SgfensProveedor[] findWhereColoniaEquals(String colonia) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'CODIGO_POSTAL = :codigoPostal'.
	 */
	public SgfensProveedor[] findWhereCodigoPostalEquals(String codigoPostal) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'PAIS = :pais'.
	 */
	public SgfensProveedor[] findWherePaisEquals(String pais) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'ESTADO = :estado'.
	 */
	public SgfensProveedor[] findWhereEstadoEquals(String estado) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'MUNICIPIO = :municipio'.
	 */
	public SgfensProveedor[] findWhereMunicipioEquals(String municipio) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'LADA = :lada'.
	 */
	public SgfensProveedor[] findWhereLadaEquals(String lada) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'TELEFONO = :telefono'.
	 */
	public SgfensProveedor[] findWhereTelefonoEquals(String telefono) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'EXTENSION = :extension'.
	 */
	public SgfensProveedor[] findWhereExtensionEquals(String extension) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'CELULAR = :celular'.
	 */
	public SgfensProveedor[] findWhereCelularEquals(String celular) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'CORREO = :correo'.
	 */
	public SgfensProveedor[] findWhereCorreoEquals(String correo) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'CONTACTO = :contacto'.
	 */
	public SgfensProveedor[] findWhereContactoEquals(String contacto) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public SgfensProveedor[] findWhereIdEstatusEquals(int idEstatus) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public SgfensProveedor[] findWhereDescripcionEquals(String descripcion) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'NOMBRE_EMPRESA = :nombreEmpresa'.
	 */
	public SgfensProveedor[] findWhereNombreEmpresaEquals(String nombreEmpresa) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'LATITUD = :latitud'.
	 */
	public SgfensProveedor[] findWhereLatitudEquals(String latitud) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'LONGITUD = :longitud'.
	 */
	public SgfensProveedor[] findWhereLongitudEquals(String longitud) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'ID_CATEGORIA_PROVEEDOR = :idCategoriaProveedor'.
	 */
	public SgfensProveedor[] findWhereIdCategoriaProveedorEquals(int idCategoriaProveedor) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the criteria 'NOMBRE_IMAGEN_PROVEEDOR = :nombreImagenProveedor'.
	 */
	public SgfensProveedor[] findWhereNombreImagenProveedorEquals(String nombreImagenProveedor) throws SgfensProveedorDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the specified arbitrary SQL statement
	 */
	public SgfensProveedor[] findByDynamicSelect(String sql, Object[] sqlParams) throws SgfensProveedorDaoException;

	/** 
	 * Returns all rows from the sgfens_proveedor table that match the specified arbitrary SQL statement
	 */
	public SgfensProveedor[] findByDynamicWhere(String sql, Object[] sqlParams) throws SgfensProveedorDaoException;

}
