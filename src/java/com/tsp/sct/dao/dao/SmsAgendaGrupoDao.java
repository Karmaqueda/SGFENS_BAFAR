/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface SmsAgendaGrupoDao
{
	/** 
	 * Inserts a new row in the sms_agenda_grupo table.
	 */
	public SmsAgendaGrupoPk insert(SmsAgendaGrupo dto) throws SmsAgendaGrupoDaoException;

	/** 
	 * Updates a single row in the sms_agenda_grupo table.
	 */
	public void update(SmsAgendaGrupoPk pk, SmsAgendaGrupo dto) throws SmsAgendaGrupoDaoException;

	/** 
	 * Deletes a single row in the sms_agenda_grupo table.
	 */
	public void delete(SmsAgendaGrupoPk pk) throws SmsAgendaGrupoDaoException;

	/** 
	 * Returns the rows from the sms_agenda_grupo table that matches the specified primary-key value.
	 */
	public SmsAgendaGrupo findByPrimaryKey(SmsAgendaGrupoPk pk) throws SmsAgendaGrupoDaoException;

	/** 
	 * Returns all rows from the sms_agenda_grupo table that match the criteria 'id_sms_agenda_grupo = :idSmsAgendaGrupo'.
	 */
	public SmsAgendaGrupo findByPrimaryKey(int idSmsAgendaGrupo) throws SmsAgendaGrupoDaoException;

	/** 
	 * Returns all rows from the sms_agenda_grupo table that match the criteria ''.
	 */
	public SmsAgendaGrupo[] findAll() throws SmsAgendaGrupoDaoException;

	/** 
	 * Returns all rows from the sms_agenda_grupo table that match the criteria 'id_sms_agenda_grupo = :idSmsAgendaGrupo'.
	 */
	public SmsAgendaGrupo[] findWhereIdSmsAgendaGrupoEquals(int idSmsAgendaGrupo) throws SmsAgendaGrupoDaoException;

	/** 
	 * Returns all rows from the sms_agenda_grupo table that match the criteria 'nombre_grupo = :nombreGrupo'.
	 */
	public SmsAgendaGrupo[] findWhereNombreGrupoEquals(String nombreGrupo) throws SmsAgendaGrupoDaoException;

	/** 
	 * Returns all rows from the sms_agenda_grupo table that match the criteria 'descripcion_grupo = :descripcionGrupo'.
	 */
	public SmsAgendaGrupo[] findWhereDescripcionGrupoEquals(String descripcionGrupo) throws SmsAgendaGrupoDaoException;

	/** 
	 * Returns all rows from the sms_agenda_grupo table that match the criteria 'id_empresa = :idEmpresa'.
	 */
	public SmsAgendaGrupo[] findWhereIdEmpresaEquals(int idEmpresa) throws SmsAgendaGrupoDaoException;

	/** 
	 * Returns all rows from the sms_agenda_grupo table that match the criteria 'id_estatus = :idEstatus'.
	 */
	public SmsAgendaGrupo[] findWhereIdEstatusEquals(int idEstatus) throws SmsAgendaGrupoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the sms_agenda_grupo table that match the specified arbitrary SQL statement
	 */
	public SmsAgendaGrupo[] findByDynamicSelect(String sql, Object[] sqlParams) throws SmsAgendaGrupoDaoException;

	/** 
	 * Returns all rows from the sms_agenda_grupo table that match the specified arbitrary SQL statement
	 */
	public SmsAgendaGrupo[] findByDynamicWhere(String sql, Object[] sqlParams) throws SmsAgendaGrupoDaoException;

}
