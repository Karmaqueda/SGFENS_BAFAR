/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface ExistenciaAlmacenDao
{
	/** 
	 * Inserts a new row in the existencia_almacen table.
	 */
	public ExistenciaAlmacenPk insert(ExistenciaAlmacen dto) throws ExistenciaAlmacenDaoException;

	/** 
	 * Updates a single row in the existencia_almacen table.
	 */
	public void update(ExistenciaAlmacenPk pk, ExistenciaAlmacen dto) throws ExistenciaAlmacenDaoException;

	/** 
	 * Deletes a single row in the existencia_almacen table.
	 */
	public void delete(ExistenciaAlmacenPk pk) throws ExistenciaAlmacenDaoException;

	/** 
	 * Returns the rows from the existencia_almacen table that matches the specified primary-key value.
	 */
	public ExistenciaAlmacen findByPrimaryKey(ExistenciaAlmacenPk pk) throws ExistenciaAlmacenDaoException;

	/** 
	 * Returns all rows from the existencia_almacen table that match the criteria 'ID_ALMACEN = :idAlmacen AND ID_CONCEPTO = :idConcepto'.
	 */
	public ExistenciaAlmacen findByPrimaryKey(int idAlmacen, int idConcepto) throws ExistenciaAlmacenDaoException;

	/** 
	 * Returns all rows from the existencia_almacen table that match the criteria ''.
	 */
	public ExistenciaAlmacen[] findAll() throws ExistenciaAlmacenDaoException;

	/** 
	 * Returns all rows from the existencia_almacen table that match the criteria 'ID_ALMACEN = :idAlmacen'.
	 */
	public ExistenciaAlmacen[] findWhereIdAlmacenEquals(int idAlmacen) throws ExistenciaAlmacenDaoException;

	/** 
	 * Returns all rows from the existencia_almacen table that match the criteria 'ID_CONCEPTO = :idConcepto'.
	 */
	public ExistenciaAlmacen[] findWhereIdConceptoEquals(int idConcepto) throws ExistenciaAlmacenDaoException;

	/** 
	 * Returns all rows from the existencia_almacen table that match the criteria 'EXISTENCIA = :existencia'.
	 */
	public ExistenciaAlmacen[] findWhereExistenciaEquals(double existencia) throws ExistenciaAlmacenDaoException;

	/** 
	 * Returns all rows from the existencia_almacen table that match the criteria 'ESTATUS = :estatus'.
	 */
	public ExistenciaAlmacen[] findWhereEstatusEquals(int estatus) throws ExistenciaAlmacenDaoException;

	/** 
	 * Returns all rows from the existencia_almacen table that match the criteria 'EXISTENCIA_PESO = :existenciaPeso'.
	 */
	public ExistenciaAlmacen[] findWhereExistenciaPesoEquals(double existenciaPeso) throws ExistenciaAlmacenDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the existencia_almacen table that match the specified arbitrary SQL statement
	 */
	public ExistenciaAlmacen[] findByDynamicSelect(String sql, Object[] sqlParams) throws ExistenciaAlmacenDaoException;

	/** 
	 * Returns all rows from the existencia_almacen table that match the specified arbitrary SQL statement
	 */
	public ExistenciaAlmacen[] findByDynamicWhere(String sql, Object[] sqlParams) throws ExistenciaAlmacenDaoException;

}
