/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface MtzSeguridadDao
{
	/** 
	 * Inserts a new row in the mtz_seguridad table.
	 */
	public MtzSeguridadPk insert(MtzSeguridad dto) throws MtzSeguridadDaoException;

	/** 
	 * Updates a single row in the mtz_seguridad table.
	 */
	public void update(MtzSeguridadPk pk, MtzSeguridad dto) throws MtzSeguridadDaoException;

	/** 
	 * Deletes a single row in the mtz_seguridad table.
	 */
	public void delete(MtzSeguridadPk pk) throws MtzSeguridadDaoException;

	/** 
	 * Returns the rows from the mtz_seguridad table that matches the specified primary-key value.
	 */
	public MtzSeguridad findByPrimaryKey(MtzSeguridadPk pk) throws MtzSeguridadDaoException;

	/** 
	 * Returns all rows from the mtz_seguridad table that match the criteria 'ID_MTZ_SEGURIDAD = :idMtzSeguridad'.
	 */
	public MtzSeguridad findByPrimaryKey(int idMtzSeguridad) throws MtzSeguridadDaoException;

	/** 
	 * Returns all rows from the mtz_seguridad table that match the criteria ''.
	 */
	public MtzSeguridad[] findAll() throws MtzSeguridadDaoException;

	/** 
	 * Returns all rows from the mtz_seguridad table that match the criteria 'ID_MTZ_SEGURIDAD = :idMtzSeguridad'.
	 */
	public MtzSeguridad[] findWhereIdMtzSeguridadEquals(int idMtzSeguridad) throws MtzSeguridadDaoException;

	/** 
	 * Returns all rows from the mtz_seguridad table that match the criteria 'ID_ROLES = :idRoles'.
	 */
	public MtzSeguridad[] findWhereIdRolesEquals(int idRoles) throws MtzSeguridadDaoException;

	/** 
	 * Returns all rows from the mtz_seguridad table that match the criteria 'ID_PERMISOS = :idPermisos'.
	 */
	public MtzSeguridad[] findWhereIdPermisosEquals(int idPermisos) throws MtzSeguridadDaoException;

	/** 
	 * Returns all rows from the mtz_seguridad table that match the criteria 'ID_APLICATIVO = :idAplicativo'.
	 */
	public MtzSeguridad[] findWhereIdAplicativoEquals(int idAplicativo) throws MtzSeguridadDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the mtz_seguridad table that match the specified arbitrary SQL statement
	 */
	public MtzSeguridad[] findByDynamicSelect(String sql, Object[] sqlParams) throws MtzSeguridadDaoException;

	/** 
	 * Returns all rows from the mtz_seguridad table that match the specified arbitrary SQL statement
	 */
	public MtzSeguridad[] findByDynamicWhere(String sql, Object[] sqlParams) throws MtzSeguridadDaoException;

}
