/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface FoliosDao
{
	/** 
	 * Inserts a new row in the folios table.
	 */
	public FoliosPk insert(Folios dto) throws FoliosDaoException;

	/** 
	 * Updates a single row in the folios table.
	 */
	public void update(FoliosPk pk, Folios dto) throws FoliosDaoException;

	/** 
	 * Deletes a single row in the folios table.
	 */
	public void delete(FoliosPk pk) throws FoliosDaoException;

	/** 
	 * Returns the rows from the folios table that matches the specified primary-key value.
	 */
	public Folios findByPrimaryKey(FoliosPk pk) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'ID_FOLIO = :idFolio'.
	 */
	public Folios findByPrimaryKey(int idFolio) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria ''.
	 */
	public Folios[] findAll() throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'ID_FOLIO = :idFolio'.
	 */
	public Folios[] findWhereIdFolioEquals(int idFolio) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public Folios[] findWhereIdEmpresaEquals(int idEmpresa) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'FOLIO_DESDE = :folioDesde'.
	 */
	public Folios[] findWhereFolioDesdeEquals(int folioDesde) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'FOLIO_HASTA = :folioHasta'.
	 */
	public Folios[] findWhereFolioHastaEquals(int folioHasta) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'ULTIMO_FOLIO = :ultimoFolio'.
	 */
	public Folios[] findWhereUltimoFolioEquals(int ultimoFolio) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'ID_TIPO_COMPROBANTE = :idTipoComprobante'.
	 */
	public Folios[] findWhereIdTipoComprobanteEquals(int idTipoComprobante) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'SERIE = :serie'.
	 */
	public Folios[] findWhereSerieEquals(String serie) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'NO_APROBACION = :noAprobacion'.
	 */
	public Folios[] findWhereNoAprobacionEquals(String noAprobacion) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'ANIO_APROBACION = :anioAprobacion'.
	 */
	public Folios[] findWhereAnioAprobacionEquals(String anioAprobacion) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public Folios[] findWhereIdEstatusEquals(int idEstatus) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'FECHA_GENERACION = :fechaGeneracion'.
	 */
	public Folios[] findWhereFechaGeneracionEquals(Date fechaGeneracion) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'FECHA_VIGENCIA = :fechaVigencia'.
	 */
	public Folios[] findWhereFechaVigenciaEquals(String fechaVigencia) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'SECOFI = :secofi'.
	 */
	public Folios[] findWhereSecofiEquals(String secofi) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'NUMERO_FACTURA = :numeroFactura'.
	 */
	public Folios[] findWhereNumeroFacturaEquals(String numeroFactura) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the criteria 'FACTURACION_MOVIL = :facturacionMovil'.
	 */
	public Folios[] findWhereFacturacionMovilEquals(int facturacionMovil) throws FoliosDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the folios table that match the specified arbitrary SQL statement
	 */
	public Folios[] findByDynamicSelect(String sql, Object[] sqlParams) throws FoliosDaoException;

	/** 
	 * Returns all rows from the folios table that match the specified arbitrary SQL statement
	 */
	public Folios[] findByDynamicWhere(String sql, Object[] sqlParams) throws FoliosDaoException;

}
