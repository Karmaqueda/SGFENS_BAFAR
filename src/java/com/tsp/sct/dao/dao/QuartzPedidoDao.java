/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface QuartzPedidoDao
{
	/** 
	 * Inserts a new row in the quartz_pedido table.
	 */
	public QuartzPedidoPk insert(QuartzPedido dto) throws QuartzPedidoDaoException;

	/** 
	 * Updates a single row in the quartz_pedido table.
	 */
	public void update(QuartzPedidoPk pk, QuartzPedido dto) throws QuartzPedidoDaoException;

	/** 
	 * Deletes a single row in the quartz_pedido table.
	 */
	public void delete(QuartzPedidoPk pk) throws QuartzPedidoDaoException;

	/** 
	 * Returns the rows from the quartz_pedido table that matches the specified primary-key value.
	 */
	public QuartzPedido findByPrimaryKey(QuartzPedidoPk pk) throws QuartzPedidoDaoException;

	/** 
	 * Returns all rows from the quartz_pedido table that match the criteria 'ID_QUARTZ = :idQuartz'.
	 */
	public QuartzPedido findByPrimaryKey(int idQuartz) throws QuartzPedidoDaoException;

	/** 
	 * Returns all rows from the quartz_pedido table that match the criteria ''.
	 */
	public QuartzPedido[] findAll() throws QuartzPedidoDaoException;

	/** 
	 * Returns all rows from the quartz_pedido table that match the criteria 'ID_QUARTZ = :idQuartz'.
	 */
	public QuartzPedido[] findWhereIdQuartzEquals(int idQuartz) throws QuartzPedidoDaoException;

	/** 
	 * Returns all rows from the quartz_pedido table that match the criteria 'ID_PEDIDO_EVC = :idPedidoEvc'.
	 */
	public QuartzPedido[] findWhereIdPedidoEvcEquals(int idPedidoEvc) throws QuartzPedidoDaoException;

	/** 
	 * Returns all rows from the quartz_pedido table that match the criteria 'ID_PEDIDO_SISTEM_TERCERO = :idPedidoSistemTercero'.
	 */
	public QuartzPedido[] findWhereIdPedidoSistemTerceroEquals(int idPedidoSistemTercero) throws QuartzPedidoDaoException;

	/** 
	 * Returns all rows from the quartz_pedido table that match the criteria 'CLAVE = :clave'.
	 */
	public QuartzPedido[] findWhereClaveEquals(String clave) throws QuartzPedidoDaoException;

	/** 
	 * Returns all rows from the quartz_pedido table that match the criteria 'ID_SISTEMA_TERCERO = :idSistemaTercero'.
	 */
	public QuartzPedido[] findWhereIdSistemaTerceroEquals(int idSistemaTercero) throws QuartzPedidoDaoException;

	/** 
	 * Returns all rows from the quartz_pedido table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public QuartzPedido[] findWhereIdEmpresaEquals(int idEmpresa) throws QuartzPedidoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the quartz_pedido table that match the specified arbitrary SQL statement
	 */
	public QuartzPedido[] findByDynamicSelect(String sql, Object[] sqlParams) throws QuartzPedidoDaoException;

	/** 
	 * Returns all rows from the quartz_pedido table that match the specified arbitrary SQL statement
	 */
	public QuartzPedido[] findByDynamicWhere(String sql, Object[] sqlParams) throws QuartzPedidoDaoException;

}
