/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface SmsDispositivoMovilDao
{
	/** 
	 * Inserts a new row in the sms_dispositivo_movil table.
	 */
	public SmsDispositivoMovilPk insert(SmsDispositivoMovil dto) throws SmsDispositivoMovilDaoException;

	/** 
	 * Updates a single row in the sms_dispositivo_movil table.
	 */
	public void update(SmsDispositivoMovilPk pk, SmsDispositivoMovil dto) throws SmsDispositivoMovilDaoException;

	/** 
	 * Deletes a single row in the sms_dispositivo_movil table.
	 */
	public void delete(SmsDispositivoMovilPk pk) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns the rows from the sms_dispositivo_movil table that matches the specified primary-key value.
	 */
	public SmsDispositivoMovil findByPrimaryKey(SmsDispositivoMovilPk pk) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'id_sms_dispositivo_movil = :idSmsDispositivoMovil'.
	 */
	public SmsDispositivoMovil findByPrimaryKey(int idSmsDispositivoMovil) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria ''.
	 */
	public SmsDispositivoMovil[] findAll() throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'id_sms_dispositivo_movil = :idSmsDispositivoMovil'.
	 */
	public SmsDispositivoMovil[] findWhereIdSmsDispositivoMovilEquals(int idSmsDispositivoMovil) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'id_estatus = :idEstatus'.
	 */
	public SmsDispositivoMovil[] findWhereIdEstatusEquals(int idEstatus) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'alias = :alias'.
	 */
	public SmsDispositivoMovil[] findWhereAliasEquals(String alias) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'numero_celular = :numeroCelular'.
	 */
	public SmsDispositivoMovil[] findWhereNumeroCelularEquals(String numeroCelular) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'imei = :imei'.
	 */
	public SmsDispositivoMovil[] findWhereImeiEquals(String imei) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'marca = :marca'.
	 */
	public SmsDispositivoMovil[] findWhereMarcaEquals(String marca) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'modelo = :modelo'.
	 */
	public SmsDispositivoMovil[] findWhereModeloEquals(String modelo) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'pct_pila = :pctPila'.
	 */
	public SmsDispositivoMovil[] findWherePctPilaEquals(double pctPila) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'fecha_hr_ultima_com = :fechaHrUltimaCom'.
	 */
	public SmsDispositivoMovil[] findWhereFechaHrUltimaComEquals(Date fechaHrUltimaCom) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'fecha_hr_ultimo_envio = :fechaHrUltimoEnvio'.
	 */
	public SmsDispositivoMovil[] findWhereFechaHrUltimoEnvioEquals(Date fechaHrUltimoEnvio) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'is_ocupado = :isOcupado'.
	 */
	public SmsDispositivoMovil[] findWhereIsOcupadoEquals(int isOcupado) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'id_sms_envio_lote_actual = :idSmsEnvioLoteActual'.
	 */
	public SmsDispositivoMovil[] findWhereIdSmsEnvioLoteActualEquals(int idSmsEnvioLoteActual) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'usuario = :usuario'.
	 */
	public SmsDispositivoMovil[] findWhereUsuarioEquals(String usuario) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the criteria 'password = :password'.
	 */
	public SmsDispositivoMovil[] findWherePasswordEquals(String password) throws SmsDispositivoMovilDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the specified arbitrary SQL statement
	 */
	public SmsDispositivoMovil[] findByDynamicSelect(String sql, Object[] sqlParams) throws SmsDispositivoMovilDaoException;

	/** 
	 * Returns all rows from the sms_dispositivo_movil table that match the specified arbitrary SQL statement
	 */
	public SmsDispositivoMovil[] findByDynamicWhere(String sql, Object[] sqlParams) throws SmsDispositivoMovilDaoException;

}
