/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface SgfensPedidoImpuestoDao
{
	/** 
	 * Inserts a new row in the SGFENS_PEDIDO_IMPUESTO table.
	 */
	public SgfensPedidoImpuestoPk insert(SgfensPedidoImpuesto dto) throws SgfensPedidoImpuestoDaoException;

	/** 
	 * Updates a single row in the SGFENS_PEDIDO_IMPUESTO table.
	 */
	public void update(SgfensPedidoImpuestoPk pk, SgfensPedidoImpuesto dto) throws SgfensPedidoImpuestoDaoException;

	/** 
	 * Deletes a single row in the SGFENS_PEDIDO_IMPUESTO table.
	 */
	public void delete(SgfensPedidoImpuestoPk pk) throws SgfensPedidoImpuestoDaoException;

	/** 
	 * Returns the rows from the SGFENS_PEDIDO_IMPUESTO table that matches the specified primary-key value.
	 */
	public SgfensPedidoImpuesto findByPrimaryKey(SgfensPedidoImpuestoPk pk) throws SgfensPedidoImpuestoDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_IMPUESTO table that match the criteria 'ID_PEDIDO = :idPedido AND ID_IMPUESTO = :idImpuesto'.
	 */
	public SgfensPedidoImpuesto findByPrimaryKey(int idPedido, int idImpuesto) throws SgfensPedidoImpuestoDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_IMPUESTO table that match the criteria ''.
	 */
	public SgfensPedidoImpuesto[] findAll() throws SgfensPedidoImpuestoDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_IMPUESTO table that match the criteria 'ID_PEDIDO = :idPedido'.
	 */
	public SgfensPedidoImpuesto[] findWhereIdPedidoEquals(int idPedido) throws SgfensPedidoImpuestoDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_IMPUESTO table that match the criteria 'ID_IMPUESTO = :idImpuesto'.
	 */
	public SgfensPedidoImpuesto[] findWhereIdImpuestoEquals(int idImpuesto) throws SgfensPedidoImpuestoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_IMPUESTO table that match the specified arbitrary SQL statement
	 */
	public SgfensPedidoImpuesto[] findByDynamicSelect(String sql, Object[] sqlParams) throws SgfensPedidoImpuestoDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_IMPUESTO table that match the specified arbitrary SQL statement
	 */
	public SgfensPedidoImpuesto[] findByDynamicWhere(String sql, Object[] sqlParams) throws SgfensPedidoImpuestoDaoException;

}
