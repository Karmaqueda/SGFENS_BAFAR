/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface SarClienteEntregaDao
{
	/** 
	 * Inserts a new row in the sar_cliente_entrega table.
	 */
	public SarClienteEntregaPk insert(SarClienteEntrega dto) throws SarClienteEntregaDaoException;

	/** 
	 * Updates a single row in the sar_cliente_entrega table.
	 */
	public void update(SarClienteEntregaPk pk, SarClienteEntrega dto) throws SarClienteEntregaDaoException;

	/** 
	 * Deletes a single row in the sar_cliente_entrega table.
	 */
	public void delete(SarClienteEntregaPk pk) throws SarClienteEntregaDaoException;

	/** 
	 * Returns the rows from the sar_cliente_entrega table that matches the specified primary-key value.
	 */
	public SarClienteEntrega findByPrimaryKey(SarClienteEntregaPk pk) throws SarClienteEntregaDaoException;

	/** 
	 * Returns all rows from the sar_cliente_entrega table that match the criteria 'ID_SAR_USUARIO = :idSarUsuario'.
	 */
	public SarClienteEntrega findByPrimaryKey(int idSarUsuario) throws SarClienteEntregaDaoException;

	/** 
	 * Returns all rows from the sar_cliente_entrega table that match the criteria ''.
	 */
	public SarClienteEntrega[] findAll() throws SarClienteEntregaDaoException;

	/** 
	 * Returns all rows from the sar_cliente_entrega table that match the criteria 'ID_SAR_USUARIO = :idSarUsuario'.
	 */
	public SarClienteEntrega[] findWhereIdSarUsuarioEquals(int idSarUsuario) throws SarClienteEntregaDaoException;

	/** 
	 * Returns all rows from the sar_cliente_entrega table that match the criteria 'EXT_SAR_ID_CLIENTE = :extSarIdCliente'.
	 */
	public SarClienteEntrega[] findWhereExtSarIdClienteEquals(int extSarIdCliente) throws SarClienteEntregaDaoException;

	/** 
	 * Returns all rows from the sar_cliente_entrega table that match the criteria 'EXT_SAR_RFC = :extSarRfc'.
	 */
	public SarClienteEntrega[] findWhereExtSarRfcEquals(String extSarRfc) throws SarClienteEntregaDaoException;

	/** 
	 * Returns all rows from the sar_cliente_entrega table that match the criteria 'EXT_SAR_RAZON_SOCIAL = :extSarRazonSocial'.
	 */
	public SarClienteEntrega[] findWhereExtSarRazonSocialEquals(String extSarRazonSocial) throws SarClienteEntregaDaoException;

	/** 
	 * Returns all rows from the sar_cliente_entrega table that match the criteria 'EXT_SAR_RELACION_CODPROV_AREA = :extSarRelacionCodprovArea'.
	 */
	public SarClienteEntrega[] findWhereExtSarRelacionCodprovAreaEquals(int extSarRelacionCodprovArea) throws SarClienteEntregaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the sar_cliente_entrega table that match the specified arbitrary SQL statement
	 */
	public SarClienteEntrega[] findByDynamicSelect(String sql, Object[] sqlParams) throws SarClienteEntregaDaoException;

	/** 
	 * Returns all rows from the sar_cliente_entrega table that match the specified arbitrary SQL statement
	 */
	public SarClienteEntrega[] findByDynamicWhere(String sql, Object[] sqlParams) throws SarClienteEntregaDaoException;

}
