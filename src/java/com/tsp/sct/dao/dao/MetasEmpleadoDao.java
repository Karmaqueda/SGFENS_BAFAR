/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface MetasEmpleadoDao
{
	/** 
	 * Inserts a new row in the metas_empleado table.
	 */
	public MetasEmpleadoPk insert(MetasEmpleado dto) throws MetasEmpleadoDaoException;

	/** 
	 * Updates a single row in the metas_empleado table.
	 */
	public void update(MetasEmpleadoPk pk, MetasEmpleado dto) throws MetasEmpleadoDaoException;

	/** 
	 * Deletes a single row in the metas_empleado table.
	 */
	public void delete(MetasEmpleadoPk pk) throws MetasEmpleadoDaoException;

	/** 
	 * Returns the rows from the metas_empleado table that matches the specified primary-key value.
	 */
	public MetasEmpleado findByPrimaryKey(MetasEmpleadoPk pk) throws MetasEmpleadoDaoException;

	/** 
	 * Returns all rows from the metas_empleado table that match the criteria 'ID_META_EMPLEADO = :idMetaEmpleado'.
	 */
	public MetasEmpleado findByPrimaryKey(int idMetaEmpleado) throws MetasEmpleadoDaoException;

	/** 
	 * Returns all rows from the metas_empleado table that match the criteria ''.
	 */
	public MetasEmpleado[] findAll() throws MetasEmpleadoDaoException;

	/** 
	 * Returns all rows from the metas_empleado table that match the criteria 'ID_META_VENTA = :idMetaVenta'.
	 */
	public MetasEmpleado[] findWhereIdMetaVentaEquals(int idMetaVenta) throws MetasEmpleadoDaoException;

	/** 
	 * Returns all rows from the metas_empleado table that match the criteria 'ID_EMPLEADO = :idEmpleado'.
	 */
	public MetasEmpleado[] findWhereIdEmpleadoEquals(int idEmpleado) throws MetasEmpleadoDaoException;

	/** 
	 * Returns all rows from the metas_empleado table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public MetasEmpleado[] findWhereIdEstatusEquals(int idEstatus) throws MetasEmpleadoDaoException;

	/** 
	 * Returns all rows from the metas_empleado table that match the criteria 'OBJETIVO_META = :objetivoMeta'.
	 */
	public MetasEmpleado[] findWhereObjetivoMetaEquals(double objetivoMeta) throws MetasEmpleadoDaoException;

	/** 
	 * Returns all rows from the metas_empleado table that match the criteria 'CICLO_META_EMPLEADO = :cicloMetaEmpleado'.
	 */
	public MetasEmpleado[] findWhereCicloMetaEmpleadoEquals(int cicloMetaEmpleado) throws MetasEmpleadoDaoException;

	/** 
	 * Returns all rows from the metas_empleado table that match the criteria 'FECHA_INICIO = :fechaInicio'.
	 */
	public MetasEmpleado[] findWhereFechaInicioEquals(Date fechaInicio) throws MetasEmpleadoDaoException;

	/** 
	 * Returns all rows from the metas_empleado table that match the criteria 'FECHA_FIN = :fechaFin'.
	 */
	public MetasEmpleado[] findWhereFechaFinEquals(Date fechaFin) throws MetasEmpleadoDaoException;

	/** 
	 * Returns all rows from the metas_empleado table that match the criteria 'ID_META_EMPLEADO = :idMetaEmpleado'.
	 */
	public MetasEmpleado[] findWhereIdMetaEmpleadoEquals(int idMetaEmpleado) throws MetasEmpleadoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the metas_empleado table that match the specified arbitrary SQL statement
	 */
	public MetasEmpleado[] findByDynamicSelect(String sql, Object[] sqlParams) throws MetasEmpleadoDaoException;

	/** 
	 * Returns all rows from the metas_empleado table that match the specified arbitrary SQL statement
	 */
	public MetasEmpleado[] findByDynamicWhere(String sql, Object[] sqlParams) throws MetasEmpleadoDaoException;

}
