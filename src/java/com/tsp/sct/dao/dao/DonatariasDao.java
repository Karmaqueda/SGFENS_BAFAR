/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface DonatariasDao
{
	/** 
	 * Inserts a new row in the donatarias table.
	 */
	public DonatariasPk insert(Donatarias dto) throws DonatariasDaoException;

	/** 
	 * Updates a single row in the donatarias table.
	 */
	public void update(DonatariasPk pk, Donatarias dto) throws DonatariasDaoException;

	/** 
	 * Deletes a single row in the donatarias table.
	 */
	public void delete(DonatariasPk pk) throws DonatariasDaoException;

	/** 
	 * Returns the rows from the donatarias table that matches the specified primary-key value.
	 */
	public Donatarias findByPrimaryKey(DonatariasPk pk) throws DonatariasDaoException;

	/** 
	 * Returns all rows from the donatarias table that match the criteria 'ID_DONATARIA = :idDonataria'.
	 */
	public Donatarias findByPrimaryKey(int idDonataria) throws DonatariasDaoException;

	/** 
	 * Returns all rows from the donatarias table that match the criteria ''.
	 */
	public Donatarias[] findAll() throws DonatariasDaoException;

	/** 
	 * Returns all rows from the donatarias table that match the criteria 'ID_DONATARIA = :idDonataria'.
	 */
	public Donatarias[] findWhereIdDonatariaEquals(int idDonataria) throws DonatariasDaoException;

	/** 
	 * Returns all rows from the donatarias table that match the criteria 'NO_AUTORIZACION = :noAutorizacion'.
	 */
	public Donatarias[] findWhereNoAutorizacionEquals(String noAutorizacion) throws DonatariasDaoException;

	/** 
	 * Returns all rows from the donatarias table that match the criteria 'FECHA_AUTORIZACION = :fechaAutorizacion'.
	 */
	public Donatarias[] findWhereFechaAutorizacionEquals(Date fechaAutorizacion) throws DonatariasDaoException;

	/** 
	 * Returns all rows from the donatarias table that match the criteria 'ID_COMPROBANTE_FISCAL = :idComprobanteFiscal'.
	 */
	public Donatarias[] findWhereIdComprobanteFiscalEquals(int idComprobanteFiscal) throws DonatariasDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the donatarias table that match the specified arbitrary SQL statement
	 */
	public Donatarias[] findByDynamicSelect(String sql, Object[] sqlParams) throws DonatariasDaoException;

	/** 
	 * Returns all rows from the donatarias table that match the specified arbitrary SQL statement
	 */
	public Donatarias[] findByDynamicWhere(String sql, Object[] sqlParams) throws DonatariasDaoException;

}
