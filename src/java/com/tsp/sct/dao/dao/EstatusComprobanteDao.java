/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface EstatusComprobanteDao
{
	/** 
	 * Inserts a new row in the estatus_comprobante table.
	 */
	public EstatusComprobantePk insert(EstatusComprobante dto) throws EstatusComprobanteDaoException;

	/** 
	 * Updates a single row in the estatus_comprobante table.
	 */
	public void update(EstatusComprobantePk pk, EstatusComprobante dto) throws EstatusComprobanteDaoException;

	/** 
	 * Deletes a single row in the estatus_comprobante table.
	 */
	public void delete(EstatusComprobantePk pk) throws EstatusComprobanteDaoException;

	/** 
	 * Returns the rows from the estatus_comprobante table that matches the specified primary-key value.
	 */
	public EstatusComprobante findByPrimaryKey(EstatusComprobantePk pk) throws EstatusComprobanteDaoException;

	/** 
	 * Returns all rows from the estatus_comprobante table that match the criteria 'ID_ESTATUS_COMPROBANTE = :idEstatusComprobante'.
	 */
	public EstatusComprobante findByPrimaryKey(int idEstatusComprobante) throws EstatusComprobanteDaoException;

	/** 
	 * Returns all rows from the estatus_comprobante table that match the criteria ''.
	 */
	public EstatusComprobante[] findAll() throws EstatusComprobanteDaoException;

	/** 
	 * Returns all rows from the estatus_comprobante table that match the criteria 'ID_ESTATUS_COMPROBANTE = :idEstatusComprobante'.
	 */
	public EstatusComprobante[] findWhereIdEstatusComprobanteEquals(int idEstatusComprobante) throws EstatusComprobanteDaoException;

	/** 
	 * Returns all rows from the estatus_comprobante table that match the criteria 'NOMBRE = :nombre'.
	 */
	public EstatusComprobante[] findWhereNombreEquals(String nombre) throws EstatusComprobanteDaoException;

	/** 
	 * Returns all rows from the estatus_comprobante table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public EstatusComprobante[] findWhereDescripcionEquals(String descripcion) throws EstatusComprobanteDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the estatus_comprobante table that match the specified arbitrary SQL statement
	 */
	public EstatusComprobante[] findByDynamicSelect(String sql, Object[] sqlParams) throws EstatusComprobanteDaoException;

	/** 
	 * Returns all rows from the estatus_comprobante table that match the specified arbitrary SQL statement
	 */
	public EstatusComprobante[] findByDynamicWhere(String sql, Object[] sqlParams) throws EstatusComprobanteDaoException;

}
