/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface VentaDetalleDao
{
	/** 
	 * Inserts a new row in the venta_detalle table.
	 */
	public void insert(VentaDetalle dto) throws VentaDetalleDaoException;

	/** 
	 * Returns all rows from the venta_detalle table that match the criteria ''.
	 */
	public VentaDetalle[] findAll() throws VentaDetalleDaoException;

	/** 
	 * Returns all rows from the venta_detalle table that match the criteria 'ID_VENTA = :idVenta'.
	 */
	public VentaDetalle[] findWhereIdVentaEquals(int idVenta) throws VentaDetalleDaoException;

	/** 
	 * Returns all rows from the venta_detalle table that match the criteria 'ID_CONCEPTO = :idConcepto'.
	 */
	public VentaDetalle[] findWhereIdConceptoEquals(int idConcepto) throws VentaDetalleDaoException;

	/** 
	 * Returns all rows from the venta_detalle table that match the criteria 'CANTIDAD = :cantidad'.
	 */
	public VentaDetalle[] findWhereCantidadEquals(double cantidad) throws VentaDetalleDaoException;

	/** 
	 * Returns all rows from the venta_detalle table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public VentaDetalle[] findWhereDescripcionEquals(String descripcion) throws VentaDetalleDaoException;

	/** 
	 * Returns all rows from the venta_detalle table that match the criteria 'PRECIO_UNITARIO = :precioUnitario'.
	 */
	public VentaDetalle[] findWherePrecioUnitarioEquals(double precioUnitario) throws VentaDetalleDaoException;

	/** 
	 * Returns all rows from the venta_detalle table that match the criteria 'UNIDAD = :unidad'.
	 */
	public VentaDetalle[] findWhereUnidadEquals(String unidad) throws VentaDetalleDaoException;

	/** 
	 * Returns all rows from the venta_detalle table that match the criteria 'IDENTIFICACION = :identificacion'.
	 */
	public VentaDetalle[] findWhereIdentificacionEquals(String identificacion) throws VentaDetalleDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the venta_detalle table that match the specified arbitrary SQL statement
	 */
	public VentaDetalle[] findByDynamicSelect(String sql, Object[] sqlParams) throws VentaDetalleDaoException;

	/** 
	 * Returns all rows from the venta_detalle table that match the specified arbitrary SQL statement
	 */
	public VentaDetalle[] findByDynamicWhere(String sql, Object[] sqlParams) throws VentaDetalleDaoException;

}
