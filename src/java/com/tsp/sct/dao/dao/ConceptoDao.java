/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface ConceptoDao
{
	/** 
	 * Inserts a new row in the concepto table.
	 */
	public ConceptoPk insert(Concepto dto) throws ConceptoDaoException;

	/** 
	 * Updates a single row in the concepto table.
	 */
	public void update(ConceptoPk pk, Concepto dto) throws ConceptoDaoException;

	/** 
	 * Deletes a single row in the concepto table.
	 */
	public void delete(ConceptoPk pk) throws ConceptoDaoException;

	/** 
	 * Returns the rows from the concepto table that matches the specified primary-key value.
	 */
	public Concepto findByPrimaryKey(ConceptoPk pk) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'ID_CONCEPTO = :idConcepto'.
	 */
	public Concepto findByPrimaryKey(int idConcepto) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria ''.
	 */
	public Concepto[] findAll() throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'ID_CONCEPTO = :idConcepto'.
	 */
	public Concepto[] findWhereIdConceptoEquals(int idConcepto) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public Concepto[] findWhereIdEmpresaEquals(int idEmpresa) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'NOMBRE = :nombre'.
	 */
	public Concepto[] findWhereNombreEquals(String nombre) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public Concepto[] findWhereDescripcionEquals(String descripcion) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'PRECIO = :precio'.
	 */
	public Concepto[] findWherePrecioEquals(float precio) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public Concepto[] findWhereIdEstatusEquals(int idEstatus) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'IDENTIFICACION = :identificacion'.
	 */
	public Concepto[] findWhereIdentificacionEquals(String identificacion) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'id_categoria = :idCategoria'.
	 */
	public Concepto[] findWhereIdCategoriaEquals(int idCategoria) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'ID_MARCA = :idMarca'.
	 */
	public Concepto[] findWhereIdMarcaEquals(int idMarca) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'ID_SUBCATEGORIA = :idSubcategoria'.
	 */
	public Concepto[] findWhereIdSubcategoriaEquals(int idSubcategoria) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'ID_EMBALAJE = :idEmbalaje'.
	 */
	public Concepto[] findWhereIdEmbalajeEquals(int idEmbalaje) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'ID_IMPUESTO = :idImpuesto'.
	 */
	public Concepto[] findWhereIdImpuestoEquals(int idImpuesto) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'PRECIO_COMPRA = :precioCompra'.
	 */
	public Concepto[] findWherePrecioCompraEquals(float precioCompra) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'NUMERO_LOTE = :numeroLote'.
	 */
	public Concepto[] findWhereNumeroLoteEquals(String numeroLote) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'FECHA_CADUCIDAD = :fechaCaducidad'.
	 */
	public Concepto[] findWhereFechaCaducidadEquals(Date fechaCaducidad) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'NUM_ARTICULOS_DISPONIBLES = :numArticulosDisponibles'.
	 */
	public Concepto[] findWhereNumArticulosDisponiblesEquals(double numArticulosDisponibles) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'GENERICO = :generico'.
	 */
	public Concepto[] findWhereGenericoEquals(int generico) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'IMAGEN_CARPETA_ARCHIVO = :imagenCarpetaArchivo'.
	 */
	public Concepto[] findWhereImagenCarpetaArchivoEquals(String imagenCarpetaArchivo) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'IMAGEN_NOMBRE_ARCHIVO = :imagenNombreArchivo'.
	 */
	public Concepto[] findWhereImagenNombreArchivoEquals(String imagenNombreArchivo) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'DESCRIPCION_CORTA = :descripcionCorta'.
	 */
	public Concepto[] findWhereDescripcionCortaEquals(String descripcionCorta) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'ID_ALMACEN = :idAlmacen'.
	 */
	public Concepto[] findWhereIdAlmacenEquals(int idAlmacen) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'STOCK_MINIMO = :stockMinimo'.
	 */
	public Concepto[] findWhereStockMinimoEquals(double stockMinimo) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'STOCK_AVISO_MIN = :stockAvisoMin'.
	 */
	public Concepto[] findWhereStockAvisoMinEquals(short stockAvisoMin) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'DETALLE = :detalle'.
	 */
	public Concepto[] findWhereDetalleEquals(String detalle) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'FECHA_ALTA = :fechaAlta'.
	 */
	public Concepto[] findWhereFechaAltaEquals(Date fechaAlta) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'VOLUMEN = :volumen'.
	 */
	public Concepto[] findWhereVolumenEquals(double volumen) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'PESO = :peso'.
	 */
	public Concepto[] findWherePesoEquals(double peso) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'OBSERVACIONES = :observaciones'.
	 */
	public Concepto[] findWhereObservacionesEquals(String observaciones) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'PRECIO_DOCENA = :precioDocena'.
	 */
	public Concepto[] findWherePrecioDocenaEquals(double precioDocena) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'PRECIO_MAYOREO = :precioMayoreo'.
	 */
	public Concepto[] findWherePrecioMayoreoEquals(double precioMayoreo) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'PRECIO_ESPECIAL = :precioEspecial'.
	 */
	public Concepto[] findWherePrecioEspecialEquals(double precioEspecial) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'IMPUESTO_X_CONCEPTO = :impuestoXConcepto'.
	 */
	public Concepto[] findWhereImpuestoXConceptoEquals(int impuestoXConcepto) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'DESCUENTO_PORCENTAJE = :descuentoPorcentaje'.
	 */
	public Concepto[] findWhereDescuentoPorcentajeEquals(double descuentoPorcentaje) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'DESCUENTO_MONTO = :descuentoMonto'.
	 */
	public Concepto[] findWhereDescuentoMontoEquals(double descuentoMonto) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'CLAVEART_SAE = :claveartSae'.
	 */
	public Concepto[] findWhereClaveartSaeEquals(String claveartSae) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'PRECIO_MEDIO_MAYOREO = :precioMedioMayoreo'.
	 */
	public Concepto[] findWherePrecioMedioMayoreoEquals(double precioMedioMayoreo) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'MAX_MENUDEO = :maxMenudeo'.
	 */
	public Concepto[] findWhereMaxMenudeoEquals(double maxMenudeo) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'MIN_MEDIO_MAYOREO = :minMedioMayoreo'.
	 */
	public Concepto[] findWhereMinMedioMayoreoEquals(double minMedioMayoreo) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'MAX_MEDIO_MAYOREO = :maxMedioMayoreo'.
	 */
	public Concepto[] findWhereMaxMedioMayoreoEquals(double maxMedioMayoreo) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'MIN_MAYOREO = :minMayoreo'.
	 */
	public Concepto[] findWhereMinMayoreoEquals(double minMayoreo) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'ID_SUBCATEGORIA2 = :idSubcategoria2'.
	 */
	public Concepto[] findWhereIdSubcategoria2Equals(int idSubcategoria2) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'ID_SUBCATEGORIA3 = :idSubcategoria3'.
	 */
	public Concepto[] findWhereIdSubcategoria3Equals(int idSubcategoria3) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'ID_SUBCATEGORIA4 = :idSubcategoria4'.
	 */
	public Concepto[] findWhereIdSubcategoria4Equals(int idSubcategoria4) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'PRECIO_MINIMO_VENTA = :precioMinimoVenta'.
	 */
	public Concepto[] findWherePrecioMinimoVentaEquals(double precioMinimoVenta) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'NOMBRE_DESENCRIPTADO = :nombreDesencriptado'.
	 */
	public Concepto[] findWhereNombreDesencriptadoEquals(String nombreDesencriptado) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'RUTA_IMAGEN = :rutaImagen'.
	 */
	public Concepto[] findWhereRutaImagenEquals(String rutaImagen) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'RUTA_VIDEO = :rutaVideo'.
	 */
	public Concepto[] findWhereRutaVideoEquals(String rutaVideo) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'CARACTERISTISCAS = :caracteristiscas'.
	 */
	public Concepto[] findWhereCaracteristiscasEquals(String caracteristiscas) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'COMISION_PORCENTAJE = :comisionPorcentaje'.
	 */
	public Concepto[] findWhereComisionPorcentajeEquals(double comisionPorcentaje) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'COMISION_MONTO = :comisionMonto'.
	 */
	public Concepto[] findWhereComisionMontoEquals(double comisionMonto) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'SINCRONIZACION_MICROSIP = :sincronizacionMicrosip'.
	 */
	public Concepto[] findWhereSincronizacionMicrosipEquals(int sincronizacionMicrosip) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'CLAVE = :clave'.
	 */
	public Concepto[] findWhereClaveEquals(String clave) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'DESGLOSE_PIEZAS = :desglosePiezas'.
	 */
	public Concepto[] findWhereDesglosePiezasEquals(double desglosePiezas) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'FOLIO_CONCEPTO_MOVIL = :folioConceptoMovil'.
	 */
	public Concepto[] findWhereFolioConceptoMovilEquals(String folioConceptoMovil) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'PRECIO_UNITARIO_GRANEL = :precioUnitarioGranel'.
	 */
	public Concepto[] findWherePrecioUnitarioGranelEquals(double precioUnitarioGranel) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'PRECIO_MEDIO_GRANEL = :precioMedioGranel'.
	 */
	public Concepto[] findWherePrecioMedioGranelEquals(double precioMedioGranel) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'PRECIO_MAYOREO_GRANEL = :precioMayoreoGranel'.
	 */
	public Concepto[] findWherePrecioMayoreoGranelEquals(double precioMayoreoGranel) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'PRECIO_ESPECIAL_GRANEL = :precioEspecialGranel'.
	 */
	public Concepto[] findWherePrecioEspecialGranelEquals(double precioEspecialGranel) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'ID_CONCEPTO_PADRE = :idConceptoPadre'.
	 */
	public Concepto[] findWhereIdConceptoPadreEquals(int idConceptoPadre) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the criteria 'MATERIA_PRIMA = :materiaPrima'.
	 */
	public Concepto[] findWhereMateriaPrimaEquals(int materiaPrima) throws ConceptoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the concepto table that match the specified arbitrary SQL statement
	 */
	public Concepto[] findByDynamicSelect(String sql, Object[] sqlParams) throws ConceptoDaoException;

	/** 
	 * Returns all rows from the concepto table that match the specified arbitrary SQL statement
	 */
	public Concepto[] findByDynamicWhere(String sql, Object[] sqlParams) throws ConceptoDaoException;

}
