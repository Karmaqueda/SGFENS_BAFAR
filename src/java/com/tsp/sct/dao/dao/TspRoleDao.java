/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface TspRoleDao
{
	/** 
	 * Inserts a new row in the tsp_role table.
	 */
	public TspRolePk insert(TspRole dto) throws TspRoleDaoException;

	/** 
	 * Updates a single row in the tsp_role table.
	 */
	public void update(TspRolePk pk, TspRole dto) throws TspRoleDaoException;

	/** 
	 * Deletes a single row in the tsp_role table.
	 */
	public void delete(TspRolePk pk) throws TspRoleDaoException;

	/** 
	 * Returns the rows from the tsp_role table that matches the specified primary-key value.
	 */
	public TspRole findByPrimaryKey(TspRolePk pk) throws TspRoleDaoException;

	/** 
	 * Returns all rows from the tsp_role table that match the criteria 'ID_ROLE = :idRole'.
	 */
	public TspRole findByPrimaryKey(int idRole) throws TspRoleDaoException;

	/** 
	 * Returns all rows from the tsp_role table that match the criteria ''.
	 */
	public TspRole[] findAll() throws TspRoleDaoException;

	/** 
	 * Returns all rows from the tsp_role table that match the criteria 'ID_ROLE = :idRole'.
	 */
	public TspRole[] findWhereIdRoleEquals(int idRole) throws TspRoleDaoException;

	/** 
	 * Returns all rows from the tsp_role table that match the criteria 'NAME_ROLE = :nameRole'.
	 */
	public TspRole[] findWhereNameRoleEquals(String nameRole) throws TspRoleDaoException;

	/** 
	 * Returns all rows from the tsp_role table that match the criteria 'DESCRIPCION_ROLE = :descripcionRole'.
	 */
	public TspRole[] findWhereDescripcionRoleEquals(String descripcionRole) throws TspRoleDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the tsp_role table that match the specified arbitrary SQL statement
	 */
	public TspRole[] findByDynamicSelect(String sql, Object[] sqlParams) throws TspRoleDaoException;

	/** 
	 * Returns all rows from the tsp_role table that match the specified arbitrary SQL statement
	 */
	public TspRole[] findByDynamicWhere(String sql, Object[] sqlParams) throws TspRoleDaoException;

}
