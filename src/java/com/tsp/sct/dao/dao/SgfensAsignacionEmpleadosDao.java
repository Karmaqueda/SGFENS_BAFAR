/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface SgfensAsignacionEmpleadosDao
{
	/** 
	 * Inserts a new row in the sgfens_asignacion_empleados table.
	 */
	public SgfensAsignacionEmpleadosPk insert(SgfensAsignacionEmpleados dto) throws SgfensAsignacionEmpleadosDaoException;

	/** 
	 * Updates a single row in the sgfens_asignacion_empleados table.
	 */
	public void update(SgfensAsignacionEmpleadosPk pk, SgfensAsignacionEmpleados dto) throws SgfensAsignacionEmpleadosDaoException;

	/** 
	 * Deletes a single row in the sgfens_asignacion_empleados table.
	 */
	public void delete(SgfensAsignacionEmpleadosPk pk) throws SgfensAsignacionEmpleadosDaoException;

	/** 
	 * Returns the rows from the sgfens_asignacion_empleados table that matches the specified primary-key value.
	 */
	public SgfensAsignacionEmpleados findByPrimaryKey(SgfensAsignacionEmpleadosPk pk) throws SgfensAsignacionEmpleadosDaoException;

	/** 
	 * Returns all rows from the sgfens_asignacion_empleados table that match the criteria 'ID_ASIGNACION = :idAsignacion'.
	 */
	public SgfensAsignacionEmpleados findByPrimaryKey(int idAsignacion) throws SgfensAsignacionEmpleadosDaoException;

	/** 
	 * Returns all rows from the sgfens_asignacion_empleados table that match the criteria ''.
	 */
	public SgfensAsignacionEmpleados[] findAll() throws SgfensAsignacionEmpleadosDaoException;

	/** 
	 * Returns all rows from the sgfens_asignacion_empleados table that match the criteria 'ID_ASIGNACION = :idAsignacion'.
	 */
	public SgfensAsignacionEmpleados[] findWhereIdAsignacionEquals(int idAsignacion) throws SgfensAsignacionEmpleadosDaoException;

	/** 
	 * Returns all rows from the sgfens_asignacion_empleados table that match the criteria 'ID_USUARIO_EMPLEADO = :idUsuarioEmpleado'.
	 */
	public SgfensAsignacionEmpleados[] findWhereIdUsuarioEmpleadoEquals(int idUsuarioEmpleado) throws SgfensAsignacionEmpleadosDaoException;

	/** 
	 * Returns all rows from the sgfens_asignacion_empleados table that match the criteria 'ID_USUARIO_EMPLEADO_ASIGNADO = :idUsuarioEmpleadoAsignado'.
	 */
	public SgfensAsignacionEmpleados[] findWhereIdUsuarioEmpleadoAsignadoEquals(int idUsuarioEmpleadoAsignado) throws SgfensAsignacionEmpleadosDaoException;

	/** 
	 * Returns all rows from the sgfens_asignacion_empleados table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public SgfensAsignacionEmpleados[] findWhereIdEstatusEquals(int idEstatus) throws SgfensAsignacionEmpleadosDaoException;

	/** 
	 * Returns all rows from the sgfens_asignacion_empleados table that match the criteria 'FECHA_LIMITE_ASIGANCION = :fechaLimiteAsigancion'.
	 */
	public SgfensAsignacionEmpleados[] findWhereFechaLimiteAsigancionEquals(Date fechaLimiteAsigancion) throws SgfensAsignacionEmpleadosDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the sgfens_asignacion_empleados table that match the specified arbitrary SQL statement
	 */
	public SgfensAsignacionEmpleados[] findByDynamicSelect(String sql, Object[] sqlParams) throws SgfensAsignacionEmpleadosDaoException;

	/** 
	 * Returns all rows from the sgfens_asignacion_empleados table that match the specified arbitrary SQL statement
	 */
	public SgfensAsignacionEmpleados[] findByDynamicWhere(String sql, Object[] sqlParams) throws SgfensAsignacionEmpleadosDaoException;

}
