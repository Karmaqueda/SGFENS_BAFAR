/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface ImpuestoPorConceptoDao
{
	/** 
	 * Inserts a new row in the impuesto_por_concepto table.
	 */
	public ImpuestoPorConceptoPk insert(ImpuestoPorConcepto dto) throws ImpuestoPorConceptoDaoException;

	/** 
	 * Updates a single row in the impuesto_por_concepto table.
	 */
	public void update(ImpuestoPorConceptoPk pk, ImpuestoPorConcepto dto) throws ImpuestoPorConceptoDaoException;

	/** 
	 * Deletes a single row in the impuesto_por_concepto table.
	 */
	public void delete(ImpuestoPorConceptoPk pk) throws ImpuestoPorConceptoDaoException;

	/** 
	 * Returns the rows from the impuesto_por_concepto table that matches the specified primary-key value.
	 */
	public ImpuestoPorConcepto findByPrimaryKey(ImpuestoPorConceptoPk pk) throws ImpuestoPorConceptoDaoException;

	/** 
	 * Returns all rows from the impuesto_por_concepto table that match the criteria 'ID_IMPUESTO_POR_CONCEPTO = :idImpuestoPorConcepto'.
	 */
	public ImpuestoPorConcepto findByPrimaryKey(int idImpuestoPorConcepto) throws ImpuestoPorConceptoDaoException;

	/** 
	 * Returns all rows from the impuesto_por_concepto table that match the criteria ''.
	 */
	public ImpuestoPorConcepto[] findAll() throws ImpuestoPorConceptoDaoException;

	/** 
	 * Returns all rows from the impuesto_por_concepto table that match the criteria 'ID_IMPUESTO_POR_CONCEPTO = :idImpuestoPorConcepto'.
	 */
	public ImpuestoPorConcepto[] findWhereIdImpuestoPorConceptoEquals(int idImpuestoPorConcepto) throws ImpuestoPorConceptoDaoException;

	/** 
	 * Returns all rows from the impuesto_por_concepto table that match the criteria 'ID_CONCEPTO = :idConcepto'.
	 */
	public ImpuestoPorConcepto[] findWhereIdConceptoEquals(int idConcepto) throws ImpuestoPorConceptoDaoException;

	/** 
	 * Returns all rows from the impuesto_por_concepto table that match the criteria 'ID_IMPUESTO = :idImpuesto'.
	 */
	public ImpuestoPorConcepto[] findWhereIdImpuestoEquals(int idImpuesto) throws ImpuestoPorConceptoDaoException;

	/** 
	 * Returns all rows from the impuesto_por_concepto table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public ImpuestoPorConcepto[] findWhereIdEstatusEquals(int idEstatus) throws ImpuestoPorConceptoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the impuesto_por_concepto table that match the specified arbitrary SQL statement
	 */
	public ImpuestoPorConcepto[] findByDynamicSelect(String sql, Object[] sqlParams) throws ImpuestoPorConceptoDaoException;

	/** 
	 * Returns all rows from the impuesto_por_concepto table that match the specified arbitrary SQL statement
	 */
	public ImpuestoPorConcepto[] findByDynamicWhere(String sql, Object[] sqlParams) throws ImpuestoPorConceptoDaoException;

}
