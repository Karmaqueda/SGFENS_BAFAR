/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface PermisosDao
{
	/** 
	 * Inserts a new row in the permisos table.
	 */
	public PermisosPk insert(Permisos dto) throws PermisosDaoException;

	/** 
	 * Updates a single row in the permisos table.
	 */
	public void update(PermisosPk pk, Permisos dto) throws PermisosDaoException;

	/** 
	 * Deletes a single row in the permisos table.
	 */
	public void delete(PermisosPk pk) throws PermisosDaoException;

	/** 
	 * Returns the rows from the permisos table that matches the specified primary-key value.
	 */
	public Permisos findByPrimaryKey(PermisosPk pk) throws PermisosDaoException;

	/** 
	 * Returns all rows from the permisos table that match the criteria 'ID_PERMISOS = :idPermisos'.
	 */
	public Permisos findByPrimaryKey(int idPermisos) throws PermisosDaoException;

	/** 
	 * Returns all rows from the permisos table that match the criteria ''.
	 */
	public Permisos[] findAll() throws PermisosDaoException;

	/** 
	 * Returns all rows from the permisos table that match the criteria 'ID_PERMISOS = :idPermisos'.
	 */
	public Permisos[] findWhereIdPermisosEquals(int idPermisos) throws PermisosDaoException;

	/** 
	 * Returns all rows from the permisos table that match the criteria 'NOMBRE = :nombre'.
	 */
	public Permisos[] findWhereNombreEquals(String nombre) throws PermisosDaoException;

	/** 
	 * Returns all rows from the permisos table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public Permisos[] findWhereDescripcionEquals(String descripcion) throws PermisosDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the permisos table that match the specified arbitrary SQL statement
	 */
	public Permisos[] findByDynamicSelect(String sql, Object[] sqlParams) throws PermisosDaoException;

	/** 
	 * Returns all rows from the permisos table that match the specified arbitrary SQL statement
	 */
	public Permisos[] findByDynamicWhere(String sql, Object[] sqlParams) throws PermisosDaoException;

}
