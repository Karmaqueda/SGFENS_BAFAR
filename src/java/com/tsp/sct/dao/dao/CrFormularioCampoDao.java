/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface CrFormularioCampoDao
{
	/** 
	 * Inserts a new row in the cr_formulario_campo table.
	 */
	public CrFormularioCampoPk insert(CrFormularioCampo dto) throws CrFormularioCampoDaoException;

	/** 
	 * Updates a single row in the cr_formulario_campo table.
	 */
	public void update(CrFormularioCampoPk pk, CrFormularioCampo dto) throws CrFormularioCampoDaoException;

	/** 
	 * Deletes a single row in the cr_formulario_campo table.
	 */
	public void delete(CrFormularioCampoPk pk) throws CrFormularioCampoDaoException;

	/** 
	 * Returns the rows from the cr_formulario_campo table that matches the specified primary-key value.
	 */
	public CrFormularioCampo findByPrimaryKey(CrFormularioCampoPk pk) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'id_formulario_campo = :idFormularioCampo'.
	 */
	public CrFormularioCampo findByPrimaryKey(int idFormularioCampo) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria ''.
	 */
	public CrFormularioCampo[] findAll() throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'id_formulario_campo = :idFormularioCampo'.
	 */
	public CrFormularioCampo[] findWhereIdFormularioCampoEquals(int idFormularioCampo) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'id_formulario = :idFormulario'.
	 */
	public CrFormularioCampo[] findWhereIdFormularioEquals(int idFormulario) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'id_tipo_campo = :idTipoCampo'.
	 */
	public CrFormularioCampo[] findWhereIdTipoCampoEquals(int idTipoCampo) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'orden_formulario = :ordenFormulario'.
	 */
	public CrFormularioCampo[] findWhereOrdenFormularioEquals(int ordenFormulario) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'no_seccion = :noSeccion'.
	 */
	public CrFormularioCampo[] findWhereNoSeccionEquals(int noSeccion) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'etiqueta = :etiqueta'.
	 */
	public CrFormularioCampo[] findWhereEtiquetaEquals(String etiqueta) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'descripcion = :descripcion'.
	 */
	public CrFormularioCampo[] findWhereDescripcionEquals(String descripcion) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'valor_defecto = :valorDefecto'.
	 */
	public CrFormularioCampo[] findWhereValorDefectoEquals(String valorDefecto) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'valor_sugerencia = :valorSugerencia'.
	 */
	public CrFormularioCampo[] findWhereValorSugerenciaEquals(String valorSugerencia) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'opciones = :opciones'.
	 */
	public CrFormularioCampo[] findWhereOpcionesEquals(String opciones) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'is_requerido = :isRequerido'.
	 */
	public CrFormularioCampo[] findWhereIsRequeridoEquals(int isRequerido) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'id_formulario_validacion = :idFormularioValidacion'.
	 */
	public CrFormularioCampo[] findWhereIdFormularioValidacionEquals(int idFormularioValidacion) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'variable_formula = :variableFormula'.
	 */
	public CrFormularioCampo[] findWhereVariableFormulaEquals(String variableFormula) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'id_estatus = :idEstatus'.
	 */
	public CrFormularioCampo[] findWhereIdEstatusEquals(int idEstatus) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the criteria 'id_empresa = :idEmpresa'.
	 */
	public CrFormularioCampo[] findWhereIdEmpresaEquals(int idEmpresa) throws CrFormularioCampoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the specified arbitrary SQL statement
	 */
	public CrFormularioCampo[] findByDynamicSelect(String sql, Object[] sqlParams) throws CrFormularioCampoDaoException;

	/** 
	 * Returns all rows from the cr_formulario_campo table that match the specified arbitrary SQL statement
	 */
	public CrFormularioCampo[] findByDynamicWhere(String sql, Object[] sqlParams) throws CrFormularioCampoDaoException;

}
