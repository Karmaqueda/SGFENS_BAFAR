/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface ComprobanteImpuestoXConceptoDao
{
	/** 
	 * Inserts a new row in the comprobante_impuesto_x_concepto table.
	 */
	public ComprobanteImpuestoXConceptoPk insert(ComprobanteImpuestoXConcepto dto) throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Updates a single row in the comprobante_impuesto_x_concepto table.
	 */
	public void update(ComprobanteImpuestoXConceptoPk pk, ComprobanteImpuestoXConcepto dto) throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Deletes a single row in the comprobante_impuesto_x_concepto table.
	 */
	public void delete(ComprobanteImpuestoXConceptoPk pk) throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Returns the rows from the comprobante_impuesto_x_concepto table that matches the specified primary-key value.
	 */
	public ComprobanteImpuestoXConcepto findByPrimaryKey(ComprobanteImpuestoXConceptoPk pk) throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Returns all rows from the comprobante_impuesto_x_concepto table that match the criteria 'ID_COMPROBANTE_IMPUESTO = :idComprobanteImpuesto'.
	 */
	public ComprobanteImpuestoXConcepto findByPrimaryKey(int idComprobanteImpuesto) throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Returns all rows from the comprobante_impuesto_x_concepto table that match the criteria ''.
	 */
	public ComprobanteImpuestoXConcepto[] findAll() throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Returns all rows from the comprobante_impuesto_x_concepto table that match the criteria 'ID_COMPROBANTE_IMPUESTO = :idComprobanteImpuesto'.
	 */
	public ComprobanteImpuestoXConcepto[] findWhereIdComprobanteImpuestoEquals(int idComprobanteImpuesto) throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Returns all rows from the comprobante_impuesto_x_concepto table that match the criteria 'ID_COMPROBANTE_FISCAL = :idComprobanteFiscal'.
	 */
	public ComprobanteImpuestoXConcepto[] findWhereIdComprobanteFiscalEquals(int idComprobanteFiscal) throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Returns all rows from the comprobante_impuesto_x_concepto table that match the criteria 'ID_IMPUESTO = :idImpuesto'.
	 */
	public ComprobanteImpuestoXConcepto[] findWhereIdImpuestoEquals(int idImpuesto) throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Returns all rows from the comprobante_impuesto_x_concepto table that match the criteria 'NOMBRE = :nombre'.
	 */
	public ComprobanteImpuestoXConcepto[] findWhereNombreEquals(String nombre) throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Returns all rows from the comprobante_impuesto_x_concepto table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public ComprobanteImpuestoXConcepto[] findWhereDescripcionEquals(String descripcion) throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Returns all rows from the comprobante_impuesto_x_concepto table that match the criteria 'PORCENTAJE = :porcentaje'.
	 */
	public ComprobanteImpuestoXConcepto[] findWherePorcentajeEquals(float porcentaje) throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Returns all rows from the comprobante_impuesto_x_concepto table that match the criteria 'TRASLADADO = :trasladado'.
	 */
	public ComprobanteImpuestoXConcepto[] findWhereTrasladadoEquals(short trasladado) throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Returns all rows from the comprobante_impuesto_x_concepto table that match the criteria 'IMPUESTO_LOCAL = :impuestoLocal'.
	 */
	public ComprobanteImpuestoXConcepto[] findWhereImpuestoLocalEquals(short impuestoLocal) throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the comprobante_impuesto_x_concepto table that match the specified arbitrary SQL statement
	 */
	public ComprobanteImpuestoXConcepto[] findByDynamicSelect(String sql, Object[] sqlParams) throws ComprobanteImpuestoXConceptoDaoException;

	/** 
	 * Returns all rows from the comprobante_impuesto_x_concepto table that match the specified arbitrary SQL statement
	 */
	public ComprobanteImpuestoXConcepto[] findByDynamicWhere(String sql, Object[] sqlParams) throws ComprobanteImpuestoXConceptoDaoException;

}
