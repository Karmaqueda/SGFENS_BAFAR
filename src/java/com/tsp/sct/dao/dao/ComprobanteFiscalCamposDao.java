/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface ComprobanteFiscalCamposDao
{
	/** 
	 * Inserts a new row in the comprobante_fiscal_campos table.
	 */
	public void insert(ComprobanteFiscalCampos dto) throws ComprobanteFiscalCamposDaoException;

	/** 
	 * Returns all rows from the comprobante_fiscal_campos table that match the criteria ''.
	 */
	public ComprobanteFiscalCampos[] findAll() throws ComprobanteFiscalCamposDaoException;

	/** 
	 * Returns all rows from the comprobante_fiscal_campos table that match the criteria 'ID_COMPROBANTE_FISCAL = :idComprobanteFiscal'.
	 */
	public ComprobanteFiscalCampos[] findWhereIdComprobanteFiscalEquals(int idComprobanteFiscal) throws ComprobanteFiscalCamposDaoException;

	/** 
	 * Returns all rows from the comprobante_fiscal_campos table that match the criteria 'ID_CAMPO = :idCampo'.
	 */
	public ComprobanteFiscalCampos[] findWhereIdCampoEquals(int idCampo) throws ComprobanteFiscalCamposDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the comprobante_fiscal_campos table that match the specified arbitrary SQL statement
	 */
	public ComprobanteFiscalCampos[] findByDynamicSelect(String sql, Object[] sqlParams) throws ComprobanteFiscalCamposDaoException;

	/** 
	 * Returns all rows from the comprobante_fiscal_campos table that match the specified arbitrary SQL statement
	 */
	public ComprobanteFiscalCampos[] findByDynamicWhere(String sql, Object[] sqlParams) throws ComprobanteFiscalCamposDaoException;

}
