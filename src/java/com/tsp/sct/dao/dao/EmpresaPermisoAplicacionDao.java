/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface EmpresaPermisoAplicacionDao
{
	/** 
	 * Inserts a new row in the empresa_permiso_aplicacion table.
	 */
	public EmpresaPermisoAplicacionPk insert(EmpresaPermisoAplicacion dto) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Updates a single row in the empresa_permiso_aplicacion table.
	 */
	public void update(EmpresaPermisoAplicacionPk pk, EmpresaPermisoAplicacion dto) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Deletes a single row in the empresa_permiso_aplicacion table.
	 */
	public void delete(EmpresaPermisoAplicacionPk pk) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns the rows from the empresa_permiso_aplicacion table that matches the specified primary-key value.
	 */
	public EmpresaPermisoAplicacion findByPrimaryKey(EmpresaPermisoAplicacionPk pk) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public EmpresaPermisoAplicacion findByPrimaryKey(int idEmpresa) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria ''.
	 */
	public EmpresaPermisoAplicacion[] findAll() throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public EmpresaPermisoAplicacion[] findWhereIdEmpresaEquals(int idEmpresa) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ACCESO_SGFENS_PRETORIANO = :accesoSgfensPretoriano'.
	 */
	public EmpresaPermisoAplicacion[] findWhereAccesoSgfensPretorianoEquals(short accesoSgfensPretoriano) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ID_TPV_TIPO_SERVICIO = :idTpvTipoServicio'.
	 */
	public EmpresaPermisoAplicacion[] findWhereIdTpvTipoServicioEquals(int idTpvTipoServicio) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ID_PRETO_CARACTERISTICA_PRODUCTO_ADQUIRIDO = :idPretoCaracteristicaProductoAdquirido'.
	 */
	public EmpresaPermisoAplicacion[] findWhereIdPretoCaracteristicaProductoAdquiridoEquals(int idPretoCaracteristicaProductoAdquirido) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'REVISION_CANTIDAD_PRODUCTO = :revisionCantidadProducto'.
	 */
	public EmpresaPermisoAplicacion[] findWhereRevisionCantidadProductoEquals(int revisionCantidadProducto) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ACCESO_SGFENS_NOMINA = :accesoSgfensNomina'.
	 */
	public EmpresaPermisoAplicacion[] findWhereAccesoSgfensNominaEquals(int accesoSgfensNomina) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ACCESO_SGFENS_CBB = :accesoSgfensCbb'.
	 */
	public EmpresaPermisoAplicacion[] findWhereAccesoSgfensCbbEquals(int accesoSgfensCbb) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ACCESO_SGFENS_FACTURACION = :accesoSgfensFacturacion'.
	 */
	public EmpresaPermisoAplicacion[] findWhereAccesoSgfensFacturacionEquals(int accesoSgfensFacturacion) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ACCESO_SGFENS_COBROTARJETA = :accesoSgfensCobrotarjeta'.
	 */
	public EmpresaPermisoAplicacion[] findWhereAccesoSgfensCobrotarjetaEquals(int accesoSgfensCobrotarjeta) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ACCESO_SGFENS_PRETOMOVIL = :accesoSgfensPretomovil'.
	 */
	public EmpresaPermisoAplicacion[] findWhereAccesoSgfensPretomovilEquals(int accesoSgfensPretomovil) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ACCESO_SGFENS_VALIDACIONXML = :accesoSgfensValidacionxml'.
	 */
	public EmpresaPermisoAplicacion[] findWhereAccesoSgfensValidacionxmlEquals(int accesoSgfensValidacionxml) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ACCESO_SGFENS_NUM_LICENCIAS_MOVILES = :accesoSgfensNumLicenciasMoviles'.
	 */
	public EmpresaPermisoAplicacion[] findWhereAccesoSgfensNumLicenciasMovilesEquals(int accesoSgfensNumLicenciasMoviles) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ACCESO_CREDITOS_EMERGENCIA = :accesoCreditosEmergencia'.
	 */
	public EmpresaPermisoAplicacion[] findWhereAccesoCreditosEmergenciaEquals(int accesoCreditosEmergencia) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'CREDITOS_EMERGENCIA_X_PAGAR = :creditosEmergenciaXPagar'.
	 */
	public EmpresaPermisoAplicacion[] findWhereCreditosEmergenciaXPagarEquals(int creditosEmergenciaXPagar) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ACCESO_MODULO_SAR = :accesoModuloSar'.
	 */
	public EmpresaPermisoAplicacion[] findWhereAccesoModuloSarEquals(int accesoModuloSar) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'TIPO_CONSUMO_SERVICIO = :tipoConsumoServicio'.
	 */
	public EmpresaPermisoAplicacion[] findWhereTipoConsumoServicioEquals(int tipoConsumoServicio) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ID_PRETO_LICENCIA = :idPretoLicencia'.
	 */
	public EmpresaPermisoAplicacion[] findWhereIdPretoLicenciaEquals(int idPretoLicencia) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'MAX_NUM_USUARIOS = :maxNumUsuarios'.
	 */
	public EmpresaPermisoAplicacion[] findWhereMaxNumUsuariosEquals(int maxNumUsuarios) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'WS_SINCRONIZACION_ACCESO = :wsSincronizacionAcceso'.
	 */
	public EmpresaPermisoAplicacion[] findWhereWsSincronizacionAccesoEquals(int wsSincronizacionAcceso) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'WS_SINCRONIZACION_TOKEN = :wsSincronizacionToken'.
	 */
	public EmpresaPermisoAplicacion[] findWhereWsSincronizacionTokenEquals(String wsSincronizacionToken) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'RFC_POR_NIP_CODIGO = :rfcPorNipCodigo'.
	 */
	public EmpresaPermisoAplicacion[] findWhereRfcPorNipCodigoEquals(int rfcPorNipCodigo) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'MOSTRAR_GUIA = :mostrarGuia'.
	 */
	public EmpresaPermisoAplicacion[] findWhereMostrarGuiaEquals(int mostrarGuia) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ACCESO_MODULO_SMS = :accesoModuloSms'.
	 */
	public EmpresaPermisoAplicacion[] findWhereAccesoModuloSmsEquals(int accesoModuloSms) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the criteria 'ACCESO_MODULO_COMODATO = :accesoModuloComodato'.
	 */
	public EmpresaPermisoAplicacion[] findWhereAccesoModuloComodatoEquals(int accesoModuloComodato) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the specified arbitrary SQL statement
	 */
	public EmpresaPermisoAplicacion[] findByDynamicSelect(String sql, Object[] sqlParams) throws EmpresaPermisoAplicacionDaoException;

	/** 
	 * Returns all rows from the empresa_permiso_aplicacion table that match the specified arbitrary SQL statement
	 */
	public EmpresaPermisoAplicacion[] findByDynamicWhere(String sql, Object[] sqlParams) throws EmpresaPermisoAplicacionDaoException;

}
