/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface PuntosInteresDao
{
	/** 
	 * Inserts a new row in the puntos_interes table.
	 */
	public PuntosInteresPk insert(PuntosInteres dto) throws PuntosInteresDaoException;

	/** 
	 * Updates a single row in the puntos_interes table.
	 */
	public void update(PuntosInteresPk pk, PuntosInteres dto) throws PuntosInteresDaoException;

	/** 
	 * Deletes a single row in the puntos_interes table.
	 */
	public void delete(PuntosInteresPk pk) throws PuntosInteresDaoException;

	/** 
	 * Returns the rows from the puntos_interes table that matches the specified primary-key value.
	 */
	public PuntosInteres findByPrimaryKey(PuntosInteresPk pk) throws PuntosInteresDaoException;

	/** 
	 * Returns all rows from the puntos_interes table that match the criteria 'ID_PUNTO = :idPunto'.
	 */
	public PuntosInteres findByPrimaryKey(int idPunto) throws PuntosInteresDaoException;

	/** 
	 * Returns all rows from the puntos_interes table that match the criteria ''.
	 */
	public PuntosInteres[] findAll() throws PuntosInteresDaoException;

	/** 
	 * Returns all rows from the puntos_interes table that match the criteria 'ID_PUNTO = :idPunto'.
	 */
	public PuntosInteres[] findWhereIdPuntoEquals(int idPunto) throws PuntosInteresDaoException;

	/** 
	 * Returns all rows from the puntos_interes table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public PuntosInteres[] findWhereIdEmpresaEquals(int idEmpresa) throws PuntosInteresDaoException;

	/** 
	 * Returns all rows from the puntos_interes table that match the criteria 'NOMBRE = :nombre'.
	 */
	public PuntosInteres[] findWhereNombreEquals(String nombre) throws PuntosInteresDaoException;

	/** 
	 * Returns all rows from the puntos_interes table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public PuntosInteres[] findWhereDescripcionEquals(String descripcion) throws PuntosInteresDaoException;

	/** 
	 * Returns all rows from the puntos_interes table that match the criteria 'LATITUD = :latitud'.
	 */
	public PuntosInteres[] findWhereLatitudEquals(String latitud) throws PuntosInteresDaoException;

	/** 
	 * Returns all rows from the puntos_interes table that match the criteria 'LONGITUD = :longitud'.
	 */
	public PuntosInteres[] findWhereLongitudEquals(String longitud) throws PuntosInteresDaoException;

	/** 
	 * Returns all rows from the puntos_interes table that match the criteria 'ID_TIPO_PUNTO = :idTipoPunto'.
	 */
	public PuntosInteres[] findWhereIdTipoPuntoEquals(int idTipoPunto) throws PuntosInteresDaoException;

	/** 
	 * Returns all rows from the puntos_interes table that match the criteria 'DIRECCION = :direccion'.
	 */
	public PuntosInteres[] findWhereDireccionEquals(String direccion) throws PuntosInteresDaoException;

	/** 
	 * Returns all rows from the puntos_interes table that match the criteria 'IMAGEN = :imagen'.
	 */
	public PuntosInteres[] findWhereImagenEquals(String imagen) throws PuntosInteresDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the puntos_interes table that match the specified arbitrary SQL statement
	 */
	public PuntosInteres[] findByDynamicSelect(String sql, Object[] sqlParams) throws PuntosInteresDaoException;

	/** 
	 * Returns all rows from the puntos_interes table that match the specified arbitrary SQL statement
	 */
	public PuntosInteres[] findByDynamicWhere(String sql, Object[] sqlParams) throws PuntosInteresDaoException;

}
