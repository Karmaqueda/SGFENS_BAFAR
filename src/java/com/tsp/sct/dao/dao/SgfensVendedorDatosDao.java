/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface SgfensVendedorDatosDao
{
	/** 
	 * Inserts a new row in the SGFENS_VENDEDOR_DATOS table.
	 */
	public SgfensVendedorDatosPk insert(SgfensVendedorDatos dto) throws SgfensVendedorDatosDaoException;

	/** 
	 * Updates a single row in the SGFENS_VENDEDOR_DATOS table.
	 */
	public void update(SgfensVendedorDatosPk pk, SgfensVendedorDatos dto) throws SgfensVendedorDatosDaoException;

	/** 
	 * Deletes a single row in the SGFENS_VENDEDOR_DATOS table.
	 */
	public void delete(SgfensVendedorDatosPk pk) throws SgfensVendedorDatosDaoException;

	/** 
	 * Returns the rows from the SGFENS_VENDEDOR_DATOS table that matches the specified primary-key value.
	 */
	public SgfensVendedorDatos findByPrimaryKey(SgfensVendedorDatosPk pk) throws SgfensVendedorDatosDaoException;

	/** 
	 * Returns all rows from the SGFENS_VENDEDOR_DATOS table that match the criteria 'ID_USUARIO = :idUsuario'.
	 */
	public SgfensVendedorDatos findByPrimaryKey(int idUsuario) throws SgfensVendedorDatosDaoException;

	/** 
	 * Returns all rows from the SGFENS_VENDEDOR_DATOS table that match the criteria ''.
	 */
	public SgfensVendedorDatos[] findAll() throws SgfensVendedorDatosDaoException;

	/** 
	 * Returns all rows from the SGFENS_VENDEDOR_DATOS table that match the criteria 'ID_USUARIO = :idUsuario'.
	 */
	public SgfensVendedorDatos[] findWhereIdUsuarioEquals(int idUsuario) throws SgfensVendedorDatosDaoException;

	/** 
	 * Returns all rows from the SGFENS_VENDEDOR_DATOS table that match the criteria 'SUELDO_MENSUAL = :sueldoMensual'.
	 */
	public SgfensVendedorDatos[] findWhereSueldoMensualEquals(double sueldoMensual) throws SgfensVendedorDatosDaoException;

	/** 
	 * Returns all rows from the SGFENS_VENDEDOR_DATOS table that match the criteria 'PORCENTAJE_COMISIONES = :porcentajeComisiones'.
	 */
	public SgfensVendedorDatos[] findWherePorcentajeComisionesEquals(double porcentajeComisiones) throws SgfensVendedorDatosDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the SGFENS_VENDEDOR_DATOS table that match the specified arbitrary SQL statement
	 */
	public SgfensVendedorDatos[] findByDynamicSelect(String sql, Object[] sqlParams) throws SgfensVendedorDatosDaoException;

	/** 
	 * Returns all rows from the SGFENS_VENDEDOR_DATOS table that match the specified arbitrary SQL statement
	 */
	public SgfensVendedorDatos[] findByDynamicWhere(String sql, Object[] sqlParams) throws SgfensVendedorDatosDaoException;

}
