/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface DivisasDao
{
	/** 
	 * Inserts a new row in the divisas table.
	 */
	public DivisasPk insert(Divisas dto) throws DivisasDaoException;

	/** 
	 * Updates a single row in the divisas table.
	 */
	public void update(DivisasPk pk, Divisas dto) throws DivisasDaoException;

	/** 
	 * Deletes a single row in the divisas table.
	 */
	public void delete(DivisasPk pk) throws DivisasDaoException;

	/** 
	 * Returns the rows from the divisas table that matches the specified primary-key value.
	 */
	public Divisas findByPrimaryKey(DivisasPk pk) throws DivisasDaoException;

	/** 
	 * Returns all rows from the divisas table that match the criteria 'ID_DIVISAS = :idDivisas'.
	 */
	public Divisas findByPrimaryKey(int idDivisas) throws DivisasDaoException;

	/** 
	 * Returns all rows from the divisas table that match the criteria ''.
	 */
	public Divisas[] findAll() throws DivisasDaoException;

	/** 
	 * Returns all rows from the divisas table that match the criteria 'ID_DIVISAS = :idDivisas'.
	 */
	public Divisas[] findWhereIdDivisasEquals(int idDivisas) throws DivisasDaoException;

	/** 
	 * Returns all rows from the divisas table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public Divisas[] findWhereDescripcionEquals(String descripcion) throws DivisasDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the divisas table that match the specified arbitrary SQL statement
	 */
	public Divisas[] findByDynamicSelect(String sql, Object[] sqlParams) throws DivisasDaoException;

	/** 
	 * Returns all rows from the divisas table that match the specified arbitrary SQL statement
	 */
	public Divisas[] findByDynamicWhere(String sql, Object[] sqlParams) throws DivisasDaoException;

}
