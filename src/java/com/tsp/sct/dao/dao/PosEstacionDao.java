/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface PosEstacionDao
{
	/** 
	 * Inserts a new row in the pos_estacion table.
	 */
	public PosEstacionPk insert(PosEstacion dto) throws PosEstacionDaoException;

	/** 
	 * Updates a single row in the pos_estacion table.
	 */
	public void update(PosEstacionPk pk, PosEstacion dto) throws PosEstacionDaoException;

	/** 
	 * Deletes a single row in the pos_estacion table.
	 */
	public void delete(PosEstacionPk pk) throws PosEstacionDaoException;

	/** 
	 * Returns the rows from the pos_estacion table that matches the specified primary-key value.
	 */
	public PosEstacion findByPrimaryKey(PosEstacionPk pk) throws PosEstacionDaoException;

	/** 
	 * Returns all rows from the pos_estacion table that match the criteria 'id_pos_estacion = :idPosEstacion'.
	 */
	public PosEstacion findByPrimaryKey(int idPosEstacion) throws PosEstacionDaoException;

	/** 
	 * Returns all rows from the pos_estacion table that match the criteria ''.
	 */
	public PosEstacion[] findAll() throws PosEstacionDaoException;

	/** 
	 * Returns all rows from the pos_estacion table that match the criteria 'id_pos_estacion = :idPosEstacion'.
	 */
	public PosEstacion[] findWhereIdPosEstacionEquals(int idPosEstacion) throws PosEstacionDaoException;

	/** 
	 * Returns all rows from the pos_estacion table that match the criteria 'id_empresa = :idEmpresa'.
	 */
	public PosEstacion[] findWhereIdEmpresaEquals(int idEmpresa) throws PosEstacionDaoException;

	/** 
	 * Returns all rows from the pos_estacion table that match the criteria 'identificacion = :identificacion'.
	 */
	public PosEstacion[] findWhereIdentificacionEquals(String identificacion) throws PosEstacionDaoException;

	/** 
	 * Returns all rows from the pos_estacion table that match the criteria 'nombre = :nombre'.
	 */
	public PosEstacion[] findWhereNombreEquals(String nombre) throws PosEstacionDaoException;

	/** 
	 * Returns all rows from the pos_estacion table that match the criteria 'id_estatus = :idEstatus'.
	 */
	public PosEstacion[] findWhereIdEstatusEquals(int idEstatus) throws PosEstacionDaoException;

	/** 
	 * Returns all rows from the pos_estacion table that match the criteria 'fecha_hr_ultima_conexion = :fechaHrUltimaConexion'.
	 */
	public PosEstacion[] findWhereFechaHrUltimaConexionEquals(Date fechaHrUltimaConexion) throws PosEstacionDaoException;

	/** 
	 * Returns all rows from the pos_estacion table that match the criteria 'folio_movil = :folioMovil'.
	 */
	public PosEstacion[] findWhereFolioMovilEquals(String folioMovil) throws PosEstacionDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the pos_estacion table that match the specified arbitrary SQL statement
	 */
	public PosEstacion[] findByDynamicSelect(String sql, Object[] sqlParams) throws PosEstacionDaoException;

	/** 
	 * Returns all rows from the pos_estacion table that match the specified arbitrary SQL statement
	 */
	public PosEstacion[] findByDynamicWhere(String sql, Object[] sqlParams) throws PosEstacionDaoException;

}
