/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface QuartzAlmacenDao
{
	/** 
	 * Inserts a new row in the quartz_almacen table.
	 */
	public QuartzAlmacenPk insert(QuartzAlmacen dto) throws QuartzAlmacenDaoException;

	/** 
	 * Updates a single row in the quartz_almacen table.
	 */
	public void update(QuartzAlmacenPk pk, QuartzAlmacen dto) throws QuartzAlmacenDaoException;

	/** 
	 * Deletes a single row in the quartz_almacen table.
	 */
	public void delete(QuartzAlmacenPk pk) throws QuartzAlmacenDaoException;

	/** 
	 * Returns the rows from the quartz_almacen table that matches the specified primary-key value.
	 */
	public QuartzAlmacen findByPrimaryKey(QuartzAlmacenPk pk) throws QuartzAlmacenDaoException;

	/** 
	 * Returns all rows from the quartz_almacen table that match the criteria 'ID_QUARTZ = :idQuartz'.
	 */
	public QuartzAlmacen findByPrimaryKey(int idQuartz) throws QuartzAlmacenDaoException;

	/** 
	 * Returns all rows from the quartz_almacen table that match the criteria ''.
	 */
	public QuartzAlmacen[] findAll() throws QuartzAlmacenDaoException;

	/** 
	 * Returns all rows from the quartz_almacen table that match the criteria 'ID_QUARTZ = :idQuartz'.
	 */
	public QuartzAlmacen[] findWhereIdQuartzEquals(int idQuartz) throws QuartzAlmacenDaoException;

	/** 
	 * Returns all rows from the quartz_almacen table that match the criteria 'ID_ALMACEN_EVC = :idAlmacenEvc'.
	 */
	public QuartzAlmacen[] findWhereIdAlmacenEvcEquals(int idAlmacenEvc) throws QuartzAlmacenDaoException;

	/** 
	 * Returns all rows from the quartz_almacen table that match the criteria 'ID_ALMACEN_SISTEM_TERCERO = :idAlmacenSistemTercero'.
	 */
	public QuartzAlmacen[] findWhereIdAlmacenSistemTerceroEquals(int idAlmacenSistemTercero) throws QuartzAlmacenDaoException;

	/** 
	 * Returns all rows from the quartz_almacen table that match the criteria 'CLAVE = :clave'.
	 */
	public QuartzAlmacen[] findWhereClaveEquals(String clave) throws QuartzAlmacenDaoException;

	/** 
	 * Returns all rows from the quartz_almacen table that match the criteria 'ID_SISTEMA_TERCERO = :idSistemaTercero'.
	 */
	public QuartzAlmacen[] findWhereIdSistemaTerceroEquals(int idSistemaTercero) throws QuartzAlmacenDaoException;

	/** 
	 * Returns all rows from the quartz_almacen table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public QuartzAlmacen[] findWhereIdEmpresaEquals(int idEmpresa) throws QuartzAlmacenDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the quartz_almacen table that match the specified arbitrary SQL statement
	 */
	public QuartzAlmacen[] findByDynamicSelect(String sql, Object[] sqlParams) throws QuartzAlmacenDaoException;

	/** 
	 * Returns all rows from the quartz_almacen table that match the specified arbitrary SQL statement
	 */
	public QuartzAlmacen[] findByDynamicWhere(String sql, Object[] sqlParams) throws QuartzAlmacenDaoException;

}
