/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface TipoUnidadDao
{
	/** 
	 * Inserts a new row in the tipo_unidad table.
	 */
	public TipoUnidadPk insert(TipoUnidad dto) throws TipoUnidadDaoException;

	/** 
	 * Updates a single row in the tipo_unidad table.
	 */
	public void update(TipoUnidadPk pk, TipoUnidad dto) throws TipoUnidadDaoException;

	/** 
	 * Deletes a single row in the tipo_unidad table.
	 */
	public void delete(TipoUnidadPk pk) throws TipoUnidadDaoException;

	/** 
	 * Returns the rows from the tipo_unidad table that matches the specified primary-key value.
	 */
	public TipoUnidad findByPrimaryKey(TipoUnidadPk pk) throws TipoUnidadDaoException;

	/** 
	 * Returns all rows from the tipo_unidad table that match the criteria 'ID_TIPO_UNIDAD = :idTipoUnidad'.
	 */
	public TipoUnidad findByPrimaryKey(int idTipoUnidad) throws TipoUnidadDaoException;

	/** 
	 * Returns all rows from the tipo_unidad table that match the criteria ''.
	 */
	public TipoUnidad[] findAll() throws TipoUnidadDaoException;

	/** 
	 * Returns all rows from the tipo_unidad table that match the criteria 'ID_TIPO_UNIDAD = :idTipoUnidad'.
	 */
	public TipoUnidad[] findWhereIdTipoUnidadEquals(int idTipoUnidad) throws TipoUnidadDaoException;

	/** 
	 * Returns all rows from the tipo_unidad table that match the criteria 'DESC_TIPO_UNIDAD = :descTipoUnidad'.
	 */
	public TipoUnidad[] findWhereDescTipoUnidadEquals(String descTipoUnidad) throws TipoUnidadDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the tipo_unidad table that match the specified arbitrary SQL statement
	 */
	public TipoUnidad[] findByDynamicSelect(String sql, Object[] sqlParams) throws TipoUnidadDaoException;

	/** 
	 * Returns all rows from the tipo_unidad table that match the specified arbitrary SQL statement
	 */
	public TipoUnidad[] findByDynamicWhere(String sql, Object[] sqlParams) throws TipoUnidadDaoException;

}
