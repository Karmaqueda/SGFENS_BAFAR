/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface SgfensPedidoServicioDao
{
	/** 
	 * Inserts a new row in the SGFENS_PEDIDO_SERVICIO table.
	 */
	public SgfensPedidoServicioPk insert(SgfensPedidoServicio dto) throws SgfensPedidoServicioDaoException;

	/** 
	 * Updates a single row in the SGFENS_PEDIDO_SERVICIO table.
	 */
	public void update(SgfensPedidoServicioPk pk, SgfensPedidoServicio dto) throws SgfensPedidoServicioDaoException;

	/** 
	 * Deletes a single row in the SGFENS_PEDIDO_SERVICIO table.
	 */
	public void delete(SgfensPedidoServicioPk pk) throws SgfensPedidoServicioDaoException;

	/** 
	 * Returns the rows from the SGFENS_PEDIDO_SERVICIO table that matches the specified primary-key value.
	 */
	public SgfensPedidoServicio findByPrimaryKey(SgfensPedidoServicioPk pk) throws SgfensPedidoServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_SERVICIO table that match the criteria 'ID_PEDIDO = :idPedido AND ID_SERVICIO = :idServicio'.
	 */
	public SgfensPedidoServicio findByPrimaryKey(int idPedido, int idServicio) throws SgfensPedidoServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_SERVICIO table that match the criteria ''.
	 */
	public SgfensPedidoServicio[] findAll() throws SgfensPedidoServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_SERVICIO table that match the criteria 'ID_PEDIDO = :idPedido'.
	 */
	public SgfensPedidoServicio[] findWhereIdPedidoEquals(int idPedido) throws SgfensPedidoServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_SERVICIO table that match the criteria 'ID_SERVICIO = :idServicio'.
	 */
	public SgfensPedidoServicio[] findWhereIdServicioEquals(int idServicio) throws SgfensPedidoServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_SERVICIO table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public SgfensPedidoServicio[] findWhereDescripcionEquals(String descripcion) throws SgfensPedidoServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_SERVICIO table that match the criteria 'UNIDAD = :unidad'.
	 */
	public SgfensPedidoServicio[] findWhereUnidadEquals(String unidad) throws SgfensPedidoServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_SERVICIO table that match the criteria 'IDENTIFICACION = :identificacion'.
	 */
	public SgfensPedidoServicio[] findWhereIdentificacionEquals(String identificacion) throws SgfensPedidoServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_SERVICIO table that match the criteria 'CANTIDAD = :cantidad'.
	 */
	public SgfensPedidoServicio[] findWhereCantidadEquals(double cantidad) throws SgfensPedidoServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_SERVICIO table that match the criteria 'PRECIO_UNITARIO = :precioUnitario'.
	 */
	public SgfensPedidoServicio[] findWherePrecioUnitarioEquals(double precioUnitario) throws SgfensPedidoServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_SERVICIO table that match the criteria 'DESCUENTO_PORCENTAJE = :descuentoPorcentaje'.
	 */
	public SgfensPedidoServicio[] findWhereDescuentoPorcentajeEquals(double descuentoPorcentaje) throws SgfensPedidoServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_SERVICIO table that match the criteria 'DESCUENTO_MONTO = :descuentoMonto'.
	 */
	public SgfensPedidoServicio[] findWhereDescuentoMontoEquals(double descuentoMonto) throws SgfensPedidoServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_SERVICIO table that match the criteria 'SUBTOTAL = :subtotal'.
	 */
	public SgfensPedidoServicio[] findWhereSubtotalEquals(double subtotal) throws SgfensPedidoServicioDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_SERVICIO table that match the specified arbitrary SQL statement
	 */
	public SgfensPedidoServicio[] findByDynamicSelect(String sql, Object[] sqlParams) throws SgfensPedidoServicioDaoException;

	/** 
	 * Returns all rows from the SGFENS_PEDIDO_SERVICIO table that match the specified arbitrary SQL statement
	 */
	public SgfensPedidoServicio[] findByDynamicWhere(String sql, Object[] sqlParams) throws SgfensPedidoServicioDaoException;

}
