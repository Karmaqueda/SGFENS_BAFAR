/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface HorarioDetalleDao
{
	/** 
	 * Inserts a new row in the horario_detalle table.
	 */
	public HorarioDetallePk insert(HorarioDetalle dto) throws HorarioDetalleDaoException;

	/** 
	 * Updates a single row in the horario_detalle table.
	 */
	public void update(HorarioDetallePk pk, HorarioDetalle dto) throws HorarioDetalleDaoException;

	/** 
	 * Deletes a single row in the horario_detalle table.
	 */
	public void delete(HorarioDetallePk pk) throws HorarioDetalleDaoException;

	/** 
	 * Returns the rows from the horario_detalle table that matches the specified primary-key value.
	 */
	public HorarioDetalle findByPrimaryKey(HorarioDetallePk pk) throws HorarioDetalleDaoException;

	/** 
	 * Returns all rows from the horario_detalle table that match the criteria 'ID_DETALLE_HORARIO = :idDetalleHorario'.
	 */
	public HorarioDetalle findByPrimaryKey(int idDetalleHorario) throws HorarioDetalleDaoException;

	/** 
	 * Returns all rows from the horario_detalle table that match the criteria ''.
	 */
	public HorarioDetalle[] findAll() throws HorarioDetalleDaoException;

	/** 
	 * Returns all rows from the horario_detalle table that match the criteria 'ID_DETALLE_HORARIO = :idDetalleHorario'.
	 */
	public HorarioDetalle[] findWhereIdDetalleHorarioEquals(int idDetalleHorario) throws HorarioDetalleDaoException;

	/** 
	 * Returns all rows from the horario_detalle table that match the criteria 'ID_HORARIO = :idHorario'.
	 */
	public HorarioDetalle[] findWhereIdHorarioEquals(int idHorario) throws HorarioDetalleDaoException;

	/** 
	 * Returns all rows from the horario_detalle table that match the criteria 'DIA = :dia'.
	 */
	public HorarioDetalle[] findWhereDiaEquals(String dia) throws HorarioDetalleDaoException;

	/** 
	 * Returns all rows from the horario_detalle table that match the criteria 'HORA_ENTRADA = :horaEntrada'.
	 */
	public HorarioDetalle[] findWhereHoraEntradaEquals(Date horaEntrada) throws HorarioDetalleDaoException;

	/** 
	 * Returns all rows from the horario_detalle table that match the criteria 'HORA_SALIDA = :horaSalida'.
	 */
	public HorarioDetalle[] findWhereHoraSalidaEquals(Date horaSalida) throws HorarioDetalleDaoException;

	/** 
	 * Returns all rows from the horario_detalle table that match the criteria 'DIA_DESCANSO = :diaDescanso'.
	 */
	public HorarioDetalle[] findWhereDiaDescansoEquals(int diaDescanso) throws HorarioDetalleDaoException;

	/** 
	 * Returns all rows from the horario_detalle table that match the criteria 'COMIDA_SALIDA = :comidaSalida'.
	 */
	public HorarioDetalle[] findWhereComidaSalidaEquals(Date comidaSalida) throws HorarioDetalleDaoException;

	/** 
	 * Returns all rows from the horario_detalle table that match the criteria 'COMIDA_ENTRADA = :comidaEntrada'.
	 */
	public HorarioDetalle[] findWhereComidaEntradaEquals(Date comidaEntrada) throws HorarioDetalleDaoException;

	/** 
	 * Returns all rows from the horario_detalle table that match the criteria 'PERIODO_COMIDA = :periodoComida'.
	 */
	public HorarioDetalle[] findWherePeriodoComidaEquals(int periodoComida) throws HorarioDetalleDaoException;

	/** 
	 * Returns all rows from the horario_detalle table that match the criteria 'TOLERANCIA = :tolerancia'.
	 */
	public HorarioDetalle[] findWhereToleranciaEquals(int tolerancia) throws HorarioDetalleDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the horario_detalle table that match the specified arbitrary SQL statement
	 */
	public HorarioDetalle[] findByDynamicSelect(String sql, Object[] sqlParams) throws HorarioDetalleDaoException;

	/** 
	 * Returns all rows from the horario_detalle table that match the specified arbitrary SQL statement
	 */
	public HorarioDetalle[] findByDynamicWhere(String sql, Object[] sqlParams) throws HorarioDetalleDaoException;

}
