/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface QuartzEmpleadoDao
{
	/** 
	 * Inserts a new row in the quartz_empleado table.
	 */
	public QuartzEmpleadoPk insert(QuartzEmpleado dto) throws QuartzEmpleadoDaoException;

	/** 
	 * Updates a single row in the quartz_empleado table.
	 */
	public void update(QuartzEmpleadoPk pk, QuartzEmpleado dto) throws QuartzEmpleadoDaoException;

	/** 
	 * Deletes a single row in the quartz_empleado table.
	 */
	public void delete(QuartzEmpleadoPk pk) throws QuartzEmpleadoDaoException;

	/** 
	 * Returns the rows from the quartz_empleado table that matches the specified primary-key value.
	 */
	public QuartzEmpleado findByPrimaryKey(QuartzEmpleadoPk pk) throws QuartzEmpleadoDaoException;

	/** 
	 * Returns all rows from the quartz_empleado table that match the criteria 'ID_QUARTZ = :idQuartz'.
	 */
	public QuartzEmpleado findByPrimaryKey(int idQuartz) throws QuartzEmpleadoDaoException;

	/** 
	 * Returns all rows from the quartz_empleado table that match the criteria ''.
	 */
	public QuartzEmpleado[] findAll() throws QuartzEmpleadoDaoException;

	/** 
	 * Returns all rows from the quartz_empleado table that match the criteria 'ID_QUARTZ = :idQuartz'.
	 */
	public QuartzEmpleado[] findWhereIdQuartzEquals(int idQuartz) throws QuartzEmpleadoDaoException;

	/** 
	 * Returns all rows from the quartz_empleado table that match the criteria 'ID_EMPLEADO_EVC = :idEmpleadoEvc'.
	 */
	public QuartzEmpleado[] findWhereIdEmpleadoEvcEquals(int idEmpleadoEvc) throws QuartzEmpleadoDaoException;

	/** 
	 * Returns all rows from the quartz_empleado table that match the criteria 'ID_EMPLEADO_SISTEM_TERCERO = :idEmpleadoSistemTercero'.
	 */
	public QuartzEmpleado[] findWhereIdEmpleadoSistemTerceroEquals(int idEmpleadoSistemTercero) throws QuartzEmpleadoDaoException;

	/** 
	 * Returns all rows from the quartz_empleado table that match the criteria 'CLAVE = :clave'.
	 */
	public QuartzEmpleado[] findWhereClaveEquals(String clave) throws QuartzEmpleadoDaoException;

	/** 
	 * Returns all rows from the quartz_empleado table that match the criteria 'ID_SISTEMA_TERCERO = :idSistemaTercero'.
	 */
	public QuartzEmpleado[] findWhereIdSistemaTerceroEquals(int idSistemaTercero) throws QuartzEmpleadoDaoException;

	/** 
	 * Returns all rows from the quartz_empleado table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public QuartzEmpleado[] findWhereIdEmpresaEquals(int idEmpresa) throws QuartzEmpleadoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the quartz_empleado table that match the specified arbitrary SQL statement
	 */
	public QuartzEmpleado[] findByDynamicSelect(String sql, Object[] sqlParams) throws QuartzEmpleadoDaoException;

	/** 
	 * Returns all rows from the quartz_empleado table that match the specified arbitrary SQL statement
	 */
	public QuartzEmpleado[] findByDynamicWhere(String sql, Object[] sqlParams) throws QuartzEmpleadoDaoException;

}
