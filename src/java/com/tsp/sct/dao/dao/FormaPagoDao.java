/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface FormaPagoDao
{
	/** 
	 * Inserts a new row in the forma_pago table.
	 */
	public FormaPagoPk insert(FormaPago dto) throws FormaPagoDaoException;

	/** 
	 * Updates a single row in the forma_pago table.
	 */
	public void update(FormaPagoPk pk, FormaPago dto) throws FormaPagoDaoException;

	/** 
	 * Deletes a single row in the forma_pago table.
	 */
	public void delete(FormaPagoPk pk) throws FormaPagoDaoException;

	/** 
	 * Returns the rows from the forma_pago table that matches the specified primary-key value.
	 */
	public FormaPago findByPrimaryKey(FormaPagoPk pk) throws FormaPagoDaoException;

	/** 
	 * Returns all rows from the forma_pago table that match the criteria 'ID_FORMA_PAGO = :idFormaPago'.
	 */
	public FormaPago findByPrimaryKey(int idFormaPago) throws FormaPagoDaoException;

	/** 
	 * Returns all rows from the forma_pago table that match the criteria ''.
	 */
	public FormaPago[] findAll() throws FormaPagoDaoException;

	/** 
	 * Returns all rows from the forma_pago table that match the criteria 'ID_FORMA_PAGO = :idFormaPago'.
	 */
	public FormaPago[] findWhereIdFormaPagoEquals(int idFormaPago) throws FormaPagoDaoException;

	/** 
	 * Returns all rows from the forma_pago table that match the criteria 'DESC_FORMA_PAGO = :descFormaPago'.
	 */
	public FormaPago[] findWhereDescFormaPagoEquals(String descFormaPago) throws FormaPagoDaoException;

	/** 
	 * Returns all rows from the forma_pago table that match the criteria 'PARCIALIDAD = :parcialidad'.
	 */
	public FormaPago[] findWhereParcialidadEquals(short parcialidad) throws FormaPagoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the forma_pago table that match the specified arbitrary SQL statement
	 */
	public FormaPago[] findByDynamicSelect(String sql, Object[] sqlParams) throws FormaPagoDaoException;

	/** 
	 * Returns all rows from the forma_pago table that match the specified arbitrary SQL statement
	 */
	public FormaPago[] findByDynamicWhere(String sql, Object[] sqlParams) throws FormaPagoDaoException;

}
