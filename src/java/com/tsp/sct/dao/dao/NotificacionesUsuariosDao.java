/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface NotificacionesUsuariosDao
{
	/** 
	 * Inserts a new row in the notificaciones_usuarios table.
	 */
	public NotificacionesUsuariosPk insert(NotificacionesUsuarios dto) throws NotificacionesUsuariosDaoException;

	/** 
	 * Updates a single row in the notificaciones_usuarios table.
	 */
	public void update(NotificacionesUsuariosPk pk, NotificacionesUsuarios dto) throws NotificacionesUsuariosDaoException;

	/** 
	 * Deletes a single row in the notificaciones_usuarios table.
	 */
	public void delete(NotificacionesUsuariosPk pk) throws NotificacionesUsuariosDaoException;

	/** 
	 * Returns the rows from the notificaciones_usuarios table that matches the specified primary-key value.
	 */
	public NotificacionesUsuarios findByPrimaryKey(NotificacionesUsuariosPk pk) throws NotificacionesUsuariosDaoException;

	/** 
	 * Returns all rows from the notificaciones_usuarios table that match the criteria 'ID_NOTIFICACION = :idNotificacion'.
	 */
	public NotificacionesUsuarios findByPrimaryKey(int idNotificacion) throws NotificacionesUsuariosDaoException;

	/** 
	 * Returns all rows from the notificaciones_usuarios table that match the criteria ''.
	 */
	public NotificacionesUsuarios[] findAll() throws NotificacionesUsuariosDaoException;

	/** 
	 * Returns all rows from the notificaciones_usuarios table that match the criteria 'ID_NOTIFICACION = :idNotificacion'.
	 */
	public NotificacionesUsuarios[] findWhereIdNotificacionEquals(int idNotificacion) throws NotificacionesUsuariosDaoException;

	/** 
	 * Returns all rows from the notificaciones_usuarios table that match the criteria 'ID_USUARIO = :idUsuario'.
	 */
	public NotificacionesUsuarios[] findWhereIdUsuarioEquals(int idUsuario) throws NotificacionesUsuariosDaoException;

	/** 
	 * Returns all rows from the notificaciones_usuarios table that match the criteria 'TITULO = :titulo'.
	 */
	public NotificacionesUsuarios[] findWhereTituloEquals(String titulo) throws NotificacionesUsuariosDaoException;

	/** 
	 * Returns all rows from the notificaciones_usuarios table that match the criteria 'MENSAJE = :mensaje'.
	 */
	public NotificacionesUsuarios[] findWhereMensajeEquals(String mensaje) throws NotificacionesUsuariosDaoException;

	/** 
	 * Returns all rows from the notificaciones_usuarios table that match the criteria 'IMAGEN = :imagen'.
	 */
	public NotificacionesUsuarios[] findWhereImagenEquals(String imagen) throws NotificacionesUsuariosDaoException;

	/** 
	 * Returns all rows from the notificaciones_usuarios table that match the criteria 'FECHA = :fecha'.
	 */
	public NotificacionesUsuarios[] findWhereFechaEquals(Date fecha) throws NotificacionesUsuariosDaoException;

	/** 
	 * Returns all rows from the notificaciones_usuarios table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public NotificacionesUsuarios[] findWhereIdEstatusEquals(int idEstatus) throws NotificacionesUsuariosDaoException;

	/** 
	 * Returns all rows from the notificaciones_usuarios table that match the criteria 'ID_ACTUALIZACION = :idActualizacion'.
	 */
	public NotificacionesUsuarios[] findWhereIdActualizacionEquals(int idActualizacion) throws NotificacionesUsuariosDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the notificaciones_usuarios table that match the specified arbitrary SQL statement
	 */
	public NotificacionesUsuarios[] findByDynamicSelect(String sql, Object[] sqlParams) throws NotificacionesUsuariosDaoException;

	/** 
	 * Returns all rows from the notificaciones_usuarios table that match the specified arbitrary SQL statement
	 */
	public NotificacionesUsuarios[] findByDynamicWhere(String sql, Object[] sqlParams) throws NotificacionesUsuariosDaoException;

}
