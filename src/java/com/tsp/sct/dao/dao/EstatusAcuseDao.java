/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface EstatusAcuseDao
{
	/** 
	 * Inserts a new row in the estatus_acuse table.
	 */
	public EstatusAcusePk insert(EstatusAcuse dto) throws EstatusAcuseDaoException;

	/** 
	 * Updates a single row in the estatus_acuse table.
	 */
	public void update(EstatusAcusePk pk, EstatusAcuse dto) throws EstatusAcuseDaoException;

	/** 
	 * Deletes a single row in the estatus_acuse table.
	 */
	public void delete(EstatusAcusePk pk) throws EstatusAcuseDaoException;

	/** 
	 * Returns the rows from the estatus_acuse table that matches the specified primary-key value.
	 */
	public EstatusAcuse findByPrimaryKey(EstatusAcusePk pk) throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the criteria 'ID_ACUSE = :idAcuse'.
	 */
	public EstatusAcuse findByPrimaryKey(int idAcuse) throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the criteria ''.
	 */
	public EstatusAcuse[] findAll() throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the criteria 'ID_ACUSE = :idAcuse'.
	 */
	public EstatusAcuse[] findWhereIdAcuseEquals(int idAcuse) throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the criteria 'TIPO_TIMBRADO = :tipoTimbrado'.
	 */
	public EstatusAcuse[] findWhereTipoTimbradoEquals(String tipoTimbrado) throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the criteria 'FECHA_EMISION = :fechaEmision'.
	 */
	public EstatusAcuse[] findWhereFechaEmisionEquals(String fechaEmision) throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the criteria 'MONTO_FACTURA = :montoFactura'.
	 */
	public EstatusAcuse[] findWhereMontoFacturaEquals(String montoFactura) throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the criteria 'UUID = :uuid'.
	 */
	public EstatusAcuse[] findWhereUuidEquals(String uuid) throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the criteria 'RFC_EMISOR = :rfcEmisor'.
	 */
	public EstatusAcuse[] findWhereRfcEmisorEquals(String rfcEmisor) throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the criteria 'RFC_RECEPTOR = :rfcReceptor'.
	 */
	public EstatusAcuse[] findWhereRfcReceptorEquals(String rfcReceptor) throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the criteria 'FECHA_TIMBRADO = :fechaTimbrado'.
	 */
	public EstatusAcuse[] findWhereFechaTimbradoEquals(String fechaTimbrado) throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the criteria 'CODIGO = :codigo'.
	 */
	public EstatusAcuse[] findWhereCodigoEquals(String codigo) throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public EstatusAcuse[] findWhereDescripcionEquals(String descripcion) throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the criteria 'TIPO = :tipo'.
	 */
	public EstatusAcuse[] findWhereTipoEquals(String tipo) throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the criteria 'FECHA_ACUSE = :fechaAcuse'.
	 */
	public EstatusAcuse[] findWhereFechaAcuseEquals(String fechaAcuse) throws EstatusAcuseDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the estatus_acuse table that match the specified arbitrary SQL statement
	 */
	public EstatusAcuse[] findByDynamicSelect(String sql, Object[] sqlParams) throws EstatusAcuseDaoException;

	/** 
	 * Returns all rows from the estatus_acuse table that match the specified arbitrary SQL statement
	 */
	public EstatusAcuse[] findByDynamicWhere(String sql, Object[] sqlParams) throws EstatusAcuseDaoException;

}
