/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface ClienteCampoAdicionalDao
{
	/** 
	 * Inserts a new row in the cliente_campo_adicional table.
	 */
	public ClienteCampoAdicionalPk insert(ClienteCampoAdicional dto) throws ClienteCampoAdicionalDaoException;

	/** 
	 * Updates a single row in the cliente_campo_adicional table.
	 */
	public void update(ClienteCampoAdicionalPk pk, ClienteCampoAdicional dto) throws ClienteCampoAdicionalDaoException;

	/** 
	 * Deletes a single row in the cliente_campo_adicional table.
	 */
	public void delete(ClienteCampoAdicionalPk pk) throws ClienteCampoAdicionalDaoException;

	/** 
	 * Returns the rows from the cliente_campo_adicional table that matches the specified primary-key value.
	 */
	public ClienteCampoAdicional findByPrimaryKey(ClienteCampoAdicionalPk pk) throws ClienteCampoAdicionalDaoException;

	/** 
	 * Returns all rows from the cliente_campo_adicional table that match the criteria 'ID_CLIENTE_CAMPO = :idClienteCampo'.
	 */
	public ClienteCampoAdicional findByPrimaryKey(int idClienteCampo) throws ClienteCampoAdicionalDaoException;

	/** 
	 * Returns all rows from the cliente_campo_adicional table that match the criteria ''.
	 */
	public ClienteCampoAdicional[] findAll() throws ClienteCampoAdicionalDaoException;

	/** 
	 * Returns all rows from the cliente_campo_adicional table that match the criteria 'ID_CLIENTE_CAMPO = :idClienteCampo'.
	 */
	public ClienteCampoAdicional[] findWhereIdClienteCampoEquals(int idClienteCampo) throws ClienteCampoAdicionalDaoException;

	/** 
	 * Returns all rows from the cliente_campo_adicional table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public ClienteCampoAdicional[] findWhereIdEmpresaEquals(int idEmpresa) throws ClienteCampoAdicionalDaoException;

	/** 
	 * Returns all rows from the cliente_campo_adicional table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public ClienteCampoAdicional[] findWhereIdEstatusEquals(int idEstatus) throws ClienteCampoAdicionalDaoException;

	/** 
	 * Returns all rows from the cliente_campo_adicional table that match the criteria 'LABEL_NOMBRE = :labelNombre'.
	 */
	public ClienteCampoAdicional[] findWhereLabelNombreEquals(String labelNombre) throws ClienteCampoAdicionalDaoException;

	/** 
	 * Returns all rows from the cliente_campo_adicional table that match the criteria 'TIPO_LABEL = :tipoLabel'.
	 */
	public ClienteCampoAdicional[] findWhereTipoLabelEquals(int tipoLabel) throws ClienteCampoAdicionalDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the cliente_campo_adicional table that match the specified arbitrary SQL statement
	 */
	public ClienteCampoAdicional[] findByDynamicSelect(String sql, Object[] sqlParams) throws ClienteCampoAdicionalDaoException;

	/** 
	 * Returns all rows from the cliente_campo_adicional table that match the specified arbitrary SQL statement
	 */
	public ClienteCampoAdicional[] findByDynamicWhere(String sql, Object[] sqlParams) throws ClienteCampoAdicionalDaoException;

}
