/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface MarcaDao
{
	/** 
	 * Inserts a new row in the marca table.
	 */
	public MarcaPk insert(Marca dto) throws MarcaDaoException;

	/** 
	 * Updates a single row in the marca table.
	 */
	public void update(MarcaPk pk, Marca dto) throws MarcaDaoException;

	/** 
	 * Deletes a single row in the marca table.
	 */
	public void delete(MarcaPk pk) throws MarcaDaoException;

	/** 
	 * Returns the rows from the marca table that matches the specified primary-key value.
	 */
	public Marca findByPrimaryKey(MarcaPk pk) throws MarcaDaoException;

	/** 
	 * Returns all rows from the marca table that match the criteria 'ID_MARCA = :idMarca'.
	 */
	public Marca findByPrimaryKey(int idMarca) throws MarcaDaoException;

	/** 
	 * Returns all rows from the marca table that match the criteria ''.
	 */
	public Marca[] findAll() throws MarcaDaoException;

	/** 
	 * Returns all rows from the marca table that match the criteria 'ID_MARCA = :idMarca'.
	 */
	public Marca[] findWhereIdMarcaEquals(int idMarca) throws MarcaDaoException;

	/** 
	 * Returns all rows from the marca table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public Marca[] findWhereIdEmpresaEquals(int idEmpresa) throws MarcaDaoException;

	/** 
	 * Returns all rows from the marca table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public Marca[] findWhereIdEstatusEquals(int idEstatus) throws MarcaDaoException;

	/** 
	 * Returns all rows from the marca table that match the criteria 'NOMBRE = :nombre'.
	 */
	public Marca[] findWhereNombreEquals(String nombre) throws MarcaDaoException;

	/** 
	 * Returns all rows from the marca table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public Marca[] findWhereDescripcionEquals(String descripcion) throws MarcaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the marca table that match the specified arbitrary SQL statement
	 */
	public Marca[] findByDynamicSelect(String sql, Object[] sqlParams) throws MarcaDaoException;

	/** 
	 * Returns all rows from the marca table that match the specified arbitrary SQL statement
	 */
	public Marca[] findByDynamicWhere(String sql, Object[] sqlParams) throws MarcaDaoException;

}
