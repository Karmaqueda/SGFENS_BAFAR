/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface RolesDao
{
	/** 
	 * Inserts a new row in the roles table.
	 */
	public RolesPk insert(Roles dto) throws RolesDaoException;

	/** 
	 * Updates a single row in the roles table.
	 */
	public void update(RolesPk pk, Roles dto) throws RolesDaoException;

	/** 
	 * Deletes a single row in the roles table.
	 */
	public void delete(RolesPk pk) throws RolesDaoException;

	/** 
	 * Returns the rows from the roles table that matches the specified primary-key value.
	 */
	public Roles findByPrimaryKey(RolesPk pk) throws RolesDaoException;

	/** 
	 * Returns all rows from the roles table that match the criteria 'ID_ROLES = :idRoles'.
	 */
	public Roles findByPrimaryKey(int idRoles) throws RolesDaoException;

	/** 
	 * Returns all rows from the roles table that match the criteria ''.
	 */
	public Roles[] findAll() throws RolesDaoException;

	/** 
	 * Returns all rows from the roles table that match the criteria 'ID_ROLES = :idRoles'.
	 */
	public Roles[] findWhereIdRolesEquals(int idRoles) throws RolesDaoException;

	/** 
	 * Returns all rows from the roles table that match the criteria 'NOMBRE = :nombre'.
	 */
	public Roles[] findWhereNombreEquals(String nombre) throws RolesDaoException;

	/** 
	 * Returns all rows from the roles table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public Roles[] findWhereDescripcionEquals(String descripcion) throws RolesDaoException;

	/** 
	 * Returns all rows from the roles table that match the criteria 'OCULTO = :oculto'.
	 */
	public Roles[] findWhereOcultoEquals(short oculto) throws RolesDaoException;

	/** 
	 * Returns all rows from the roles table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public Roles[] findWhereIdEmpresaEquals(int idEmpresa) throws RolesDaoException;

	/** 
	 * Returns all rows from the roles table that match the criteria 'MOSTRAR_PRETORIANO = :mostrarPretoriano'.
	 */
	public Roles[] findWhereMostrarPretorianoEquals(int mostrarPretoriano) throws RolesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the roles table that match the specified arbitrary SQL statement
	 */
	public Roles[] findByDynamicSelect(String sql, Object[] sqlParams) throws RolesDaoException;

	/** 
	 * Returns all rows from the roles table that match the specified arbitrary SQL statement
	 */
	public Roles[] findByDynamicWhere(String sql, Object[] sqlParams) throws RolesDaoException;

}
