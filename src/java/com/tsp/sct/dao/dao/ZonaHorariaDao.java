/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface ZonaHorariaDao
{
	/** 
	 * Inserts a new row in the zona_horaria table.
	 */
	public ZonaHorariaPk insert(ZonaHoraria dto) throws ZonaHorariaDaoException;

	/** 
	 * Updates a single row in the zona_horaria table.
	 */
	public void update(ZonaHorariaPk pk, ZonaHoraria dto) throws ZonaHorariaDaoException;

	/** 
	 * Deletes a single row in the zona_horaria table.
	 */
	public void delete(ZonaHorariaPk pk) throws ZonaHorariaDaoException;

	/** 
	 * Returns the rows from the zona_horaria table that matches the specified primary-key value.
	 */
	public ZonaHoraria findByPrimaryKey(ZonaHorariaPk pk) throws ZonaHorariaDaoException;

	/** 
	 * Returns all rows from the zona_horaria table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public ZonaHoraria findByPrimaryKey(int idEmpresa) throws ZonaHorariaDaoException;

	/** 
	 * Returns all rows from the zona_horaria table that match the criteria ''.
	 */
	public ZonaHoraria[] findAll() throws ZonaHorariaDaoException;

	/** 
	 * Returns all rows from the zona_horaria table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public ZonaHoraria[] findWhereIdEmpresaEquals(int idEmpresa) throws ZonaHorariaDaoException;

	/** 
	 * Returns all rows from the zona_horaria table that match the criteria 'ID_ZONA_HORARIA_CATALOGO = :idZonaHorariaCatalogo'.
	 */
	public ZonaHoraria[] findWhereIdZonaHorariaCatalogoEquals(int idZonaHorariaCatalogo) throws ZonaHorariaDaoException;

	/** 
	 * Returns all rows from the zona_horaria table that match the criteria 'FECHA = :fecha'.
	 */
	public ZonaHoraria[] findWhereFechaEquals(Date fecha) throws ZonaHorariaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the zona_horaria table that match the specified arbitrary SQL statement
	 */
	public ZonaHoraria[] findByDynamicSelect(String sql, Object[] sqlParams) throws ZonaHorariaDaoException;

	/** 
	 * Returns all rows from the zona_horaria table that match the specified arbitrary SQL statement
	 */
	public ZonaHoraria[] findByDynamicWhere(String sql, Object[] sqlParams) throws ZonaHorariaDaoException;

}
