/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface FoliosMovilEmpleadoDao
{
	/** 
	 * Inserts a new row in the folios_movil_empleado table.
	 */
	public FoliosMovilEmpleadoPk insert(FoliosMovilEmpleado dto) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Updates a single row in the folios_movil_empleado table.
	 */
	public void update(FoliosMovilEmpleadoPk pk, FoliosMovilEmpleado dto) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Deletes a single row in the folios_movil_empleado table.
	 */
	public void delete(FoliosMovilEmpleadoPk pk) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Returns the rows from the folios_movil_empleado table that matches the specified primary-key value.
	 */
	public FoliosMovilEmpleado findByPrimaryKey(FoliosMovilEmpleadoPk pk) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Returns all rows from the folios_movil_empleado table that match the criteria 'ID_FOLIO_MOVIL_EMPLEADO = :idFolioMovilEmpleado'.
	 */
	public FoliosMovilEmpleado findByPrimaryKey(int idFolioMovilEmpleado) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Returns all rows from the folios_movil_empleado table that match the criteria ''.
	 */
	public FoliosMovilEmpleado[] findAll() throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Returns all rows from the folios_movil_empleado table that match the criteria 'ID_FOLIO_MOVIL_EMPLEADO = :idFolioMovilEmpleado'.
	 */
	public FoliosMovilEmpleado[] findWhereIdFolioMovilEmpleadoEquals(int idFolioMovilEmpleado) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Returns all rows from the folios_movil_empleado table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public FoliosMovilEmpleado[] findWhereIdEmpresaEquals(int idEmpresa) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Returns all rows from the folios_movil_empleado table that match the criteria 'FOLIO_DESDE = :folioDesde'.
	 */
	public FoliosMovilEmpleado[] findWhereFolioDesdeEquals(int folioDesde) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Returns all rows from the folios_movil_empleado table that match the criteria 'FOLIO_HASTA = :folioHasta'.
	 */
	public FoliosMovilEmpleado[] findWhereFolioHastaEquals(int folioHasta) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Returns all rows from the folios_movil_empleado table that match the criteria 'ULTIMO_FOLIO = :ultimoFolio'.
	 */
	public FoliosMovilEmpleado[] findWhereUltimoFolioEquals(int ultimoFolio) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Returns all rows from the folios_movil_empleado table that match the criteria 'SERIE = :serie'.
	 */
	public FoliosMovilEmpleado[] findWhereSerieEquals(String serie) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Returns all rows from the folios_movil_empleado table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public FoliosMovilEmpleado[] findWhereIdEstatusEquals(int idEstatus) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Returns all rows from the folios_movil_empleado table that match the criteria 'FECHA_GENERACION = :fechaGeneracion'.
	 */
	public FoliosMovilEmpleado[] findWhereFechaGeneracionEquals(Date fechaGeneracion) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Returns all rows from the folios_movil_empleado table that match the criteria 'TIPO_FOLIO_MOVIL = :tipoFolioMovil'.
	 */
	public FoliosMovilEmpleado[] findWhereTipoFolioMovilEquals(int tipoFolioMovil) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the folios_movil_empleado table that match the specified arbitrary SQL statement
	 */
	public FoliosMovilEmpleado[] findByDynamicSelect(String sql, Object[] sqlParams) throws FoliosMovilEmpleadoDaoException;

	/** 
	 * Returns all rows from the folios_movil_empleado table that match the specified arbitrary SQL statement
	 */
	public FoliosMovilEmpleado[] findByDynamicWhere(String sql, Object[] sqlParams) throws FoliosMovilEmpleadoDaoException;

}
