/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface UsuariosdemoDao
{
	/** 
	 * Inserts a new row in the usuariosdemo table.
	 */
	public UsuariosdemoPk insert(Usuariosdemo dto) throws UsuariosdemoDaoException;

	/** 
	 * Updates a single row in the usuariosdemo table.
	 */
	public void update(UsuariosdemoPk pk, Usuariosdemo dto) throws UsuariosdemoDaoException;

	/** 
	 * Deletes a single row in the usuariosdemo table.
	 */
	public void delete(UsuariosdemoPk pk) throws UsuariosdemoDaoException;

	/** 
	 * Returns the rows from the usuariosdemo table that matches the specified primary-key value.
	 */
	public Usuariosdemo findByPrimaryKey(UsuariosdemoPk pk) throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the criteria 'ID_USUARIO_DEMO = :idUsuarioDemo'.
	 */
	public Usuariosdemo findByPrimaryKey(int idUsuarioDemo) throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the criteria ''.
	 */
	public Usuariosdemo[] findAll() throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the criteria 'ID_USUARIO_DEMO = :idUsuarioDemo'.
	 */
	public Usuariosdemo[] findWhereIdUsuarioDemoEquals(int idUsuarioDemo) throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the criteria 'NOMBRE = :nombre'.
	 */
	public Usuariosdemo[] findWhereNombreEquals(String nombre) throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the criteria 'APELLIDO_PATERNO = :apellidoPaterno'.
	 */
	public Usuariosdemo[] findWhereApellidoPaternoEquals(String apellidoPaterno) throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the criteria 'APELLIDO_MATERNO = :apellidoMaterno'.
	 */
	public Usuariosdemo[] findWhereApellidoMaternoEquals(String apellidoMaterno) throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the criteria 'NOMBRE_EMPRESA = :nombreEmpresa'.
	 */
	public Usuariosdemo[] findWhereNombreEmpresaEquals(String nombreEmpresa) throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the criteria 'EMAIL = :email'.
	 */
	public Usuariosdemo[] findWhereEmailEquals(String email) throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the criteria 'TELEFONO = :telefono'.
	 */
	public Usuariosdemo[] findWhereTelefonoEquals(String telefono) throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the criteria 'IMEI = :imei'.
	 */
	public Usuariosdemo[] findWhereImeiEquals(String imei) throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the criteria 'MARCA_CELULAR = :marcaCelular'.
	 */
	public Usuariosdemo[] findWhereMarcaCelularEquals(String marcaCelular) throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the criteria 'MODELO_CELULAR = :modeloCelular'.
	 */
	public Usuariosdemo[] findWhereModeloCelularEquals(String modeloCelular) throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the criteria 'FECHA_REGISTRO = :fechaRegistro'.
	 */
	public Usuariosdemo[] findWhereFechaRegistroEquals(Date fechaRegistro) throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public Usuariosdemo[] findWhereIdEstatusEquals(int idEstatus) throws UsuariosdemoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the usuariosdemo table that match the specified arbitrary SQL statement
	 */
	public Usuariosdemo[] findByDynamicSelect(String sql, Object[] sqlParams) throws UsuariosdemoDaoException;

	/** 
	 * Returns all rows from the usuariosdemo table that match the specified arbitrary SQL statement
	 */
	public Usuariosdemo[] findByDynamicWhere(String sql, Object[] sqlParams) throws UsuariosdemoDaoException;

}
