/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface HorarioDao
{
	/** 
	 * Inserts a new row in the horario table.
	 */
	public HorarioPk insert(Horario dto) throws HorarioDaoException;

	/** 
	 * Updates a single row in the horario table.
	 */
	public void update(HorarioPk pk, Horario dto) throws HorarioDaoException;

	/** 
	 * Deletes a single row in the horario table.
	 */
	public void delete(HorarioPk pk) throws HorarioDaoException;

	/** 
	 * Returns the rows from the horario table that matches the specified primary-key value.
	 */
	public Horario findByPrimaryKey(HorarioPk pk) throws HorarioDaoException;

	/** 
	 * Returns all rows from the horario table that match the criteria 'ID_HORARIO = :idHorario'.
	 */
	public Horario findByPrimaryKey(int idHorario) throws HorarioDaoException;

	/** 
	 * Returns all rows from the horario table that match the criteria ''.
	 */
	public Horario[] findAll() throws HorarioDaoException;

	/** 
	 * Returns all rows from the horario table that match the criteria 'ID_HORARIO = :idHorario'.
	 */
	public Horario[] findWhereIdHorarioEquals(int idHorario) throws HorarioDaoException;

	/** 
	 * Returns all rows from the horario table that match the criteria 'NOMBRE_HORARIO = :nombreHorario'.
	 */
	public Horario[] findWhereNombreHorarioEquals(String nombreHorario) throws HorarioDaoException;

	/** 
	 * Returns all rows from the horario table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public Horario[] findWhereIdEmpresaEquals(int idEmpresa) throws HorarioDaoException;

	/** 
	 * Returns all rows from the horario table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public Horario[] findWhereIdEstatusEquals(int idEstatus) throws HorarioDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the horario table that match the specified arbitrary SQL statement
	 */
	public Horario[] findByDynamicSelect(String sql, Object[] sqlParams) throws HorarioDaoException;

	/** 
	 * Returns all rows from the horario table that match the specified arbitrary SQL statement
	 */
	public Horario[] findByDynamicWhere(String sql, Object[] sqlParams) throws HorarioDaoException;

}
