/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface MetasVentaDao
{
	/** 
	 * Inserts a new row in the metas_venta table.
	 */
	public MetasVentaPk insert(MetasVenta dto) throws MetasVentaDaoException;

	/** 
	 * Updates a single row in the metas_venta table.
	 */
	public void update(MetasVentaPk pk, MetasVenta dto) throws MetasVentaDaoException;

	/** 
	 * Deletes a single row in the metas_venta table.
	 */
	public void delete(MetasVentaPk pk) throws MetasVentaDaoException;

	/** 
	 * Returns the rows from the metas_venta table that matches the specified primary-key value.
	 */
	public MetasVenta findByPrimaryKey(MetasVentaPk pk) throws MetasVentaDaoException;

	/** 
	 * Returns all rows from the metas_venta table that match the criteria 'ID_META_VENTA = :idMetaVenta'.
	 */
	public MetasVenta findByPrimaryKey(int idMetaVenta) throws MetasVentaDaoException;

	/** 
	 * Returns all rows from the metas_venta table that match the criteria ''.
	 */
	public MetasVenta[] findAll() throws MetasVentaDaoException;

	/** 
	 * Returns all rows from the metas_venta table that match the criteria 'ID_META_VENTA = :idMetaVenta'.
	 */
	public MetasVenta[] findWhereIdMetaVentaEquals(int idMetaVenta) throws MetasVentaDaoException;

	/** 
	 * Returns all rows from the metas_venta table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public MetasVenta[] findWhereIdEmpresaEquals(int idEmpresa) throws MetasVentaDaoException;

	/** 
	 * Returns all rows from the metas_venta table that match the criteria 'FECHA_CREACION = :fechaCreacion'.
	 */
	public MetasVenta[] findWhereFechaCreacionEquals(Date fechaCreacion) throws MetasVentaDaoException;

	/** 
	 * Returns all rows from the metas_venta table that match the criteria 'NOMBRE_META = :nombreMeta'.
	 */
	public MetasVenta[] findWhereNombreMetaEquals(String nombreMeta) throws MetasVentaDaoException;

	/** 
	 * Returns all rows from the metas_venta table that match the criteria 'ID_COMPONENTE_META = :idComponenteMeta'.
	 */
	public MetasVenta[] findWhereIdComponenteMetaEquals(int idComponenteMeta) throws MetasVentaDaoException;

	/** 
	 * Returns all rows from the metas_venta table that match the criteria 'PERIODO = :periodo'.
	 */
	public MetasVenta[] findWherePeriodoEquals(int periodo) throws MetasVentaDaoException;

	/** 
	 * Returns all rows from the metas_venta table that match the criteria 'DURACION = :duracion'.
	 */
	public MetasVenta[] findWhereDuracionEquals(int duracion) throws MetasVentaDaoException;

	/** 
	 * Returns all rows from the metas_venta table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public MetasVenta[] findWhereIdEstatusEquals(int idEstatus) throws MetasVentaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the metas_venta table that match the specified arbitrary SQL statement
	 */
	public MetasVenta[] findByDynamicSelect(String sql, Object[] sqlParams) throws MetasVentaDaoException;

	/** 
	 * Returns all rows from the metas_venta table that match the specified arbitrary SQL statement
	 */
	public MetasVenta[] findByDynamicWhere(String sql, Object[] sqlParams) throws MetasVentaDaoException;

}
