/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface QuartzConceptoDao
{
	/** 
	 * Inserts a new row in the quartz_concepto table.
	 */
	public QuartzConceptoPk insert(QuartzConcepto dto) throws QuartzConceptoDaoException;

	/** 
	 * Updates a single row in the quartz_concepto table.
	 */
	public void update(QuartzConceptoPk pk, QuartzConcepto dto) throws QuartzConceptoDaoException;

	/** 
	 * Deletes a single row in the quartz_concepto table.
	 */
	public void delete(QuartzConceptoPk pk) throws QuartzConceptoDaoException;

	/** 
	 * Returns the rows from the quartz_concepto table that matches the specified primary-key value.
	 */
	public QuartzConcepto findByPrimaryKey(QuartzConceptoPk pk) throws QuartzConceptoDaoException;

	/** 
	 * Returns all rows from the quartz_concepto table that match the criteria 'ID_QUARTZ = :idQuartz'.
	 */
	public QuartzConcepto findByPrimaryKey(int idQuartz) throws QuartzConceptoDaoException;

	/** 
	 * Returns all rows from the quartz_concepto table that match the criteria ''.
	 */
	public QuartzConcepto[] findAll() throws QuartzConceptoDaoException;

	/** 
	 * Returns all rows from the quartz_concepto table that match the criteria 'ID_QUARTZ = :idQuartz'.
	 */
	public QuartzConcepto[] findWhereIdQuartzEquals(int idQuartz) throws QuartzConceptoDaoException;

	/** 
	 * Returns all rows from the quartz_concepto table that match the criteria 'ID_CONCEPTO_EVC = :idConceptoEvc'.
	 */
	public QuartzConcepto[] findWhereIdConceptoEvcEquals(int idConceptoEvc) throws QuartzConceptoDaoException;

	/** 
	 * Returns all rows from the quartz_concepto table that match the criteria 'ID_CONCEPTO_SISTEM_TERCERO = :idConceptoSistemTercero'.
	 */
	public QuartzConcepto[] findWhereIdConceptoSistemTerceroEquals(int idConceptoSistemTercero) throws QuartzConceptoDaoException;

	/** 
	 * Returns all rows from the quartz_concepto table that match the criteria 'CLAVE = :clave'.
	 */
	public QuartzConcepto[] findWhereClaveEquals(String clave) throws QuartzConceptoDaoException;

	/** 
	 * Returns all rows from the quartz_concepto table that match the criteria 'ID_SISTEMA_TERCERO = :idSistemaTercero'.
	 */
	public QuartzConcepto[] findWhereIdSistemaTerceroEquals(int idSistemaTercero) throws QuartzConceptoDaoException;

	/** 
	 * Returns all rows from the quartz_concepto table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public QuartzConcepto[] findWhereIdEmpresaEquals(int idEmpresa) throws QuartzConceptoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the quartz_concepto table that match the specified arbitrary SQL statement
	 */
	public QuartzConcepto[] findByDynamicSelect(String sql, Object[] sqlParams) throws QuartzConceptoDaoException;

	/** 
	 * Returns all rows from the quartz_concepto table that match the specified arbitrary SQL statement
	 */
	public QuartzConcepto[] findByDynamicWhere(String sql, Object[] sqlParams) throws QuartzConceptoDaoException;

}
