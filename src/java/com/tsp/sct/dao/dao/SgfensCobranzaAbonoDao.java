/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface SgfensCobranzaAbonoDao
{
	/** 
	 * Inserts a new row in the sgfens_cobranza_abono table.
	 */
	public SgfensCobranzaAbonoPk insert(SgfensCobranzaAbono dto) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Updates a single row in the sgfens_cobranza_abono table.
	 */
	public void update(SgfensCobranzaAbonoPk pk, SgfensCobranzaAbono dto) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Deletes a single row in the sgfens_cobranza_abono table.
	 */
	public void delete(SgfensCobranzaAbonoPk pk) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns the rows from the sgfens_cobranza_abono table that matches the specified primary-key value.
	 */
	public SgfensCobranzaAbono findByPrimaryKey(SgfensCobranzaAbonoPk pk) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'ID_COBRANZA_ABONO = :idCobranzaAbono'.
	 */
	public SgfensCobranzaAbono findByPrimaryKey(int idCobranzaAbono) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria ''.
	 */
	public SgfensCobranzaAbono[] findAll() throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'ID_COBRANZA_ABONO = :idCobranzaAbono'.
	 */
	public SgfensCobranzaAbono[] findWhereIdCobranzaAbonoEquals(int idCobranzaAbono) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public SgfensCobranzaAbono[] findWhereIdEmpresaEquals(int idEmpresa) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'ID_PEDIDO = :idPedido'.
	 */
	public SgfensCobranzaAbono[] findWhereIdPedidoEquals(int idPedido) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'ID_COMPROBANTE_FISCAL = :idComprobanteFiscal'.
	 */
	public SgfensCobranzaAbono[] findWhereIdComprobanteFiscalEquals(int idComprobanteFiscal) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'ID_USUARIO_VENDEDOR = :idUsuarioVendedor'.
	 */
	public SgfensCobranzaAbono[] findWhereIdUsuarioVendedorEquals(int idUsuarioVendedor) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'ID_CLIENTE = :idCliente'.
	 */
	public SgfensCobranzaAbono[] findWhereIdClienteEquals(int idCliente) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'FECHA_ABONO = :fechaAbono'.
	 */
	public SgfensCobranzaAbono[] findWhereFechaAbonoEquals(Date fechaAbono) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'MONTO_ABONO = :montoAbono'.
	 */
	public SgfensCobranzaAbono[] findWhereMontoAbonoEquals(double montoAbono) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public SgfensCobranzaAbono[] findWhereIdEstatusEquals(int idEstatus) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'ID_COBRANZA_METODO_PAGO = :idCobranzaMetodoPago'.
	 */
	public SgfensCobranzaAbono[] findWhereIdCobranzaMetodoPagoEquals(int idCobranzaMetodoPago) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'IDENTIFICADOR_OPERACION = :identificadorOperacion'.
	 */
	public SgfensCobranzaAbono[] findWhereIdentificadorOperacionEquals(String identificadorOperacion) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'COMENTARIOS = :comentarios'.
	 */
	public SgfensCobranzaAbono[] findWhereComentariosEquals(String comentarios) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'ID_OPERACION_BANCARIA = :idOperacionBancaria'.
	 */
	public SgfensCobranzaAbono[] findWhereIdOperacionBancariaEquals(int idOperacionBancaria) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'LATITUD = :latitud'.
	 */
	public SgfensCobranzaAbono[] findWhereLatitudEquals(double latitud) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'LONGITUD = :longitud'.
	 */
	public SgfensCobranzaAbono[] findWhereLongitudEquals(double longitud) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'NOMBRE_ARCHIVO_IMG_FIRMA = :nombreArchivoImgFirma'.
	 */
	public SgfensCobranzaAbono[] findWhereNombreArchivoImgFirmaEquals(String nombreArchivoImgFirma) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'FOLIO_COBRANZA_MOVIL = :folioCobranzaMovil'.
	 */
	public SgfensCobranzaAbono[] findWhereFolioCobranzaMovilEquals(String folioCobranzaMovil) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'ID_DEPOSITO = :idDeposito'.
	 */
	public SgfensCobranzaAbono[] findWhereIdDepositoEquals(String idDeposito) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'SINCRONIZACION_MICROSIP = :sincronizacionMicrosip'.
	 */
	public SgfensCobranzaAbono[] findWhereSincronizacionMicrosipEquals(int sincronizacionMicrosip) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'REFERENCIA = :referencia'.
	 */
	public SgfensCobranzaAbono[] findWhereReferenciaEquals(String referencia) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the criteria 'FECHA_ACTUALIZA_REFERENCIA = :fechaActualizaReferencia'.
	 */
	public SgfensCobranzaAbono[] findWhereFechaActualizaReferenciaEquals(Date fechaActualizaReferencia) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the specified arbitrary SQL statement
	 */
	public SgfensCobranzaAbono[] findByDynamicSelect(String sql, Object[] sqlParams) throws SgfensCobranzaAbonoDaoException;

	/** 
	 * Returns all rows from the sgfens_cobranza_abono table that match the specified arbitrary SQL statement
	 */
	public SgfensCobranzaAbono[] findByDynamicWhere(String sql, Object[] sqlParams) throws SgfensCobranzaAbonoDaoException;

}
