/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface GeocercasNotificacionesDao
{
	/** 
	 * Inserts a new row in the geocercas_notificaciones table.
	 */
	public GeocercasNotificacionesPk insert(GeocercasNotificaciones dto) throws GeocercasNotificacionesDaoException;

	/** 
	 * Updates a single row in the geocercas_notificaciones table.
	 */
	public void update(GeocercasNotificacionesPk pk, GeocercasNotificaciones dto) throws GeocercasNotificacionesDaoException;

	/** 
	 * Deletes a single row in the geocercas_notificaciones table.
	 */
	public void delete(GeocercasNotificacionesPk pk) throws GeocercasNotificacionesDaoException;

	/** 
	 * Returns the rows from the geocercas_notificaciones table that matches the specified primary-key value.
	 */
	public GeocercasNotificaciones findByPrimaryKey(GeocercasNotificacionesPk pk) throws GeocercasNotificacionesDaoException;

	/** 
	 * Returns all rows from the geocercas_notificaciones table that match the criteria 'ID_GEO_NOTIFICACION = :idGeoNotificacion'.
	 */
	public GeocercasNotificaciones findByPrimaryKey(int idGeoNotificacion) throws GeocercasNotificacionesDaoException;

	/** 
	 * Returns all rows from the geocercas_notificaciones table that match the criteria ''.
	 */
	public GeocercasNotificaciones[] findAll() throws GeocercasNotificacionesDaoException;

	/** 
	 * Returns all rows from the geocercas_notificaciones table that match the criteria 'ID_GEO_NOTIFICACION = :idGeoNotificacion'.
	 */
	public GeocercasNotificaciones[] findWhereIdGeoNotificacionEquals(int idGeoNotificacion) throws GeocercasNotificacionesDaoException;

	/** 
	 * Returns all rows from the geocercas_notificaciones table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public GeocercasNotificaciones[] findWhereIdEmpresaEquals(int idEmpresa) throws GeocercasNotificacionesDaoException;

	/** 
	 * Returns all rows from the geocercas_notificaciones table that match the criteria 'CORREOS = :correos'.
	 */
	public GeocercasNotificaciones[] findWhereCorreosEquals(String correos) throws GeocercasNotificacionesDaoException;

	/** 
	 * Returns all rows from the geocercas_notificaciones table that match the criteria 'ID_ESTATUS = :idEstatus'.
	 */
	public GeocercasNotificaciones[] findWhereIdEstatusEquals(int idEstatus) throws GeocercasNotificacionesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the geocercas_notificaciones table that match the specified arbitrary SQL statement
	 */
	public GeocercasNotificaciones[] findByDynamicSelect(String sql, Object[] sqlParams) throws GeocercasNotificacionesDaoException;

	/** 
	 * Returns all rows from the geocercas_notificaciones table that match the specified arbitrary SQL statement
	 */
	public GeocercasNotificaciones[] findByDynamicWhere(String sql, Object[] sqlParams) throws GeocercasNotificacionesDaoException;

}
