/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface CrScoreDao
{
	/** 
	 * Inserts a new row in the cr_score table.
	 */
	public CrScorePk insert(CrScore dto) throws CrScoreDaoException;

	/** 
	 * Updates a single row in the cr_score table.
	 */
	public void update(CrScorePk pk, CrScore dto) throws CrScoreDaoException;

	/** 
	 * Deletes a single row in the cr_score table.
	 */
	public void delete(CrScorePk pk) throws CrScoreDaoException;

	/** 
	 * Returns the rows from the cr_score table that matches the specified primary-key value.
	 */
	public CrScore findByPrimaryKey(CrScorePk pk) throws CrScoreDaoException;

	/** 
	 * Returns all rows from the cr_score table that match the criteria 'id_score = :idScore'.
	 */
	public CrScore findByPrimaryKey(int idScore) throws CrScoreDaoException;

	/** 
	 * Returns all rows from the cr_score table that match the criteria ''.
	 */
	public CrScore[] findAll() throws CrScoreDaoException;

	/** 
	 * Returns all rows from the cr_score table that match the criteria 'id_score = :idScore'.
	 */
	public CrScore[] findWhereIdScoreEquals(int idScore) throws CrScoreDaoException;

	/** 
	 * Returns all rows from the cr_score table that match the criteria 'nombre = :nombre'.
	 */
	public CrScore[] findWhereNombreEquals(String nombre) throws CrScoreDaoException;

	/** 
	 * Returns all rows from the cr_score table that match the criteria 'descripcion = :descripcion'.
	 */
	public CrScore[] findWhereDescripcionEquals(String descripcion) throws CrScoreDaoException;

	/** 
	 * Returns all rows from the cr_score table that match the criteria 'fecha_hr_creacion = :fechaHrCreacion'.
	 */
	public CrScore[] findWhereFechaHrCreacionEquals(Date fechaHrCreacion) throws CrScoreDaoException;

	/** 
	 * Returns all rows from the cr_score table that match the criteria 'fecha_hr_ultima_edicion = :fechaHrUltimaEdicion'.
	 */
	public CrScore[] findWhereFechaHrUltimaEdicionEquals(Date fechaHrUltimaEdicion) throws CrScoreDaoException;

	/** 
	 * Returns all rows from the cr_score table that match the criteria 'id_usuario_edicion = :idUsuarioEdicion'.
	 */
	public CrScore[] findWhereIdUsuarioEdicionEquals(int idUsuarioEdicion) throws CrScoreDaoException;

	/** 
	 * Returns all rows from the cr_score table that match the criteria 'id_empresa = :idEmpresa'.
	 */
	public CrScore[] findWhereIdEmpresaEquals(int idEmpresa) throws CrScoreDaoException;

	/** 
	 * Returns all rows from the cr_score table that match the criteria 'id_estatus = :idEstatus'.
	 */
	public CrScore[] findWhereIdEstatusEquals(int idEstatus) throws CrScoreDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the cr_score table that match the specified arbitrary SQL statement
	 */
	public CrScore[] findByDynamicSelect(String sql, Object[] sqlParams) throws CrScoreDaoException;

	/** 
	 * Returns all rows from the cr_score table that match the specified arbitrary SQL statement
	 */
	public CrScore[] findByDynamicWhere(String sql, Object[] sqlParams) throws CrScoreDaoException;

}
