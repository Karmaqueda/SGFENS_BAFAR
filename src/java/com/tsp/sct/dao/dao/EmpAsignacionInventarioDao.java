/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import java.util.Date;
import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface EmpAsignacionInventarioDao
{
	/** 
	 * Inserts a new row in the emp_asignacion_inventario table.
	 */
	public EmpAsignacionInventarioPk insert(EmpAsignacionInventario dto) throws EmpAsignacionInventarioDaoException;

	/** 
	 * Updates a single row in the emp_asignacion_inventario table.
	 */
	public void update(EmpAsignacionInventarioPk pk, EmpAsignacionInventario dto) throws EmpAsignacionInventarioDaoException;

	/** 
	 * Deletes a single row in the emp_asignacion_inventario table.
	 */
	public void delete(EmpAsignacionInventarioPk pk) throws EmpAsignacionInventarioDaoException;

	/** 
	 * Returns the rows from the emp_asignacion_inventario table that matches the specified primary-key value.
	 */
	public EmpAsignacionInventario findByPrimaryKey(EmpAsignacionInventarioPk pk) throws EmpAsignacionInventarioDaoException;

	/** 
	 * Returns all rows from the emp_asignacion_inventario table that match the criteria 'id_asignacion_inventario = :idAsignacionInventario'.
	 */
	public EmpAsignacionInventario findByPrimaryKey(int idAsignacionInventario) throws EmpAsignacionInventarioDaoException;

	/** 
	 * Returns all rows from the emp_asignacion_inventario table that match the criteria ''.
	 */
	public EmpAsignacionInventario[] findAll() throws EmpAsignacionInventarioDaoException;

	/** 
	 * Returns all rows from the emp_asignacion_inventario table that match the criteria 'id_asignacion_inventario = :idAsignacionInventario'.
	 */
	public EmpAsignacionInventario[] findWhereIdAsignacionInventarioEquals(int idAsignacionInventario) throws EmpAsignacionInventarioDaoException;

	/** 
	 * Returns all rows from the emp_asignacion_inventario table that match the criteria 'id_empresa = :idEmpresa'.
	 */
	public EmpAsignacionInventario[] findWhereIdEmpresaEquals(int idEmpresa) throws EmpAsignacionInventarioDaoException;

	/** 
	 * Returns all rows from the emp_asignacion_inventario table that match the criteria 'id_empleado = :idEmpleado'.
	 */
	public EmpAsignacionInventario[] findWhereIdEmpleadoEquals(int idEmpleado) throws EmpAsignacionInventarioDaoException;

	/** 
	 * Returns all rows from the emp_asignacion_inventario table that match the criteria 'id_estatus = :idEstatus'.
	 */
	public EmpAsignacionInventario[] findWhereIdEstatusEquals(int idEstatus) throws EmpAsignacionInventarioDaoException;

	/** 
	 * Returns all rows from the emp_asignacion_inventario table that match the criteria 'num_dias_repeticion = :numDiasRepeticion'.
	 */
	public EmpAsignacionInventario[] findWhereNumDiasRepeticionEquals(int numDiasRepeticion) throws EmpAsignacionInventarioDaoException;

	/** 
	 * Returns all rows from the emp_asignacion_inventario table that match the criteria 'ultima_rep_fecha_hr = :ultimaRepFechaHr'.
	 */
	public EmpAsignacionInventario[] findWhereUltimaRepFechaHrEquals(Date ultimaRepFechaHr) throws EmpAsignacionInventarioDaoException;

	/** 
	 * Returns all rows from the emp_asignacion_inventario table that match the criteria 'ultima_rep_exito = :ultimaRepExito'.
	 */
	public EmpAsignacionInventario[] findWhereUltimaRepExitoEquals(int ultimaRepExito) throws EmpAsignacionInventarioDaoException;

	/** 
	 * Returns all rows from the emp_asignacion_inventario table that match the criteria 'ultima_rep_observacion = :ultimaRepObservacion'.
	 */
	public EmpAsignacionInventario[] findWhereUltimaRepObservacionEquals(String ultimaRepObservacion) throws EmpAsignacionInventarioDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the emp_asignacion_inventario table that match the specified arbitrary SQL statement
	 */
	public EmpAsignacionInventario[] findByDynamicSelect(String sql, Object[] sqlParams) throws EmpAsignacionInventarioDaoException;

	/** 
	 * Returns all rows from the emp_asignacion_inventario table that match the specified arbitrary SQL statement
	 */
	public EmpAsignacionInventario[] findByDynamicWhere(String sql, Object[] sqlParams) throws EmpAsignacionInventarioDaoException;

}
