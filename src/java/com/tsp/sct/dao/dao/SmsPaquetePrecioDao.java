/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface SmsPaquetePrecioDao
{
	/** 
	 * Inserts a new row in the sms_paquete_precio table.
	 */
	public SmsPaquetePrecioPk insert(SmsPaquetePrecio dto) throws SmsPaquetePrecioDaoException;

	/** 
	 * Updates a single row in the sms_paquete_precio table.
	 */
	public void update(SmsPaquetePrecioPk pk, SmsPaquetePrecio dto) throws SmsPaquetePrecioDaoException;

	/** 
	 * Deletes a single row in the sms_paquete_precio table.
	 */
	public void delete(SmsPaquetePrecioPk pk) throws SmsPaquetePrecioDaoException;

	/** 
	 * Returns the rows from the sms_paquete_precio table that matches the specified primary-key value.
	 */
	public SmsPaquetePrecio findByPrimaryKey(SmsPaquetePrecioPk pk) throws SmsPaquetePrecioDaoException;

	/** 
	 * Returns all rows from the sms_paquete_precio table that match the criteria 'id_sms_paquete_precio = :idSmsPaquetePrecio'.
	 */
	public SmsPaquetePrecio findByPrimaryKey(int idSmsPaquetePrecio) throws SmsPaquetePrecioDaoException;

	/** 
	 * Returns all rows from the sms_paquete_precio table that match the criteria ''.
	 */
	public SmsPaquetePrecio[] findAll() throws SmsPaquetePrecioDaoException;

	/** 
	 * Returns all rows from the sms_paquete_precio table that match the criteria 'id_sms_paquete_precio = :idSmsPaquetePrecio'.
	 */
	public SmsPaquetePrecio[] findWhereIdSmsPaquetePrecioEquals(int idSmsPaquetePrecio) throws SmsPaquetePrecioDaoException;

	/** 
	 * Returns all rows from the sms_paquete_precio table that match the criteria 'nombre_paquete = :nombrePaquete'.
	 */
	public SmsPaquetePrecio[] findWhereNombrePaqueteEquals(String nombrePaquete) throws SmsPaquetePrecioDaoException;

	/** 
	 * Returns all rows from the sms_paquete_precio table that match the criteria 'descripcion_paquete = :descripcionPaquete'.
	 */
	public SmsPaquetePrecio[] findWhereDescripcionPaqueteEquals(String descripcionPaquete) throws SmsPaquetePrecioDaoException;

	/** 
	 * Returns all rows from the sms_paquete_precio table that match the criteria 'is_rango = :isRango'.
	 */
	public SmsPaquetePrecio[] findWhereIsRangoEquals(int isRango) throws SmsPaquetePrecioDaoException;

	/** 
	 * Returns all rows from the sms_paquete_precio table that match the criteria 'rango_min = :rangoMin'.
	 */
	public SmsPaquetePrecio[] findWhereRangoMinEquals(int rangoMin) throws SmsPaquetePrecioDaoException;

	/** 
	 * Returns all rows from the sms_paquete_precio table that match the criteria 'rango_max = :rangoMax'.
	 */
	public SmsPaquetePrecio[] findWhereRangoMaxEquals(int rangoMax) throws SmsPaquetePrecioDaoException;

	/** 
	 * Returns all rows from the sms_paquete_precio table that match the criteria 'rango_precio_unitario = :rangoPrecioUnitario'.
	 */
	public SmsPaquetePrecio[] findWhereRangoPrecioUnitarioEquals(double rangoPrecioUnitario) throws SmsPaquetePrecioDaoException;

	/** 
	 * Returns all rows from the sms_paquete_precio table that match the criteria 'paquete_cantidad = :paqueteCantidad'.
	 */
	public SmsPaquetePrecio[] findWherePaqueteCantidadEquals(int paqueteCantidad) throws SmsPaquetePrecioDaoException;

	/** 
	 * Returns all rows from the sms_paquete_precio table that match the criteria 'paquete_precio_total = :paquetePrecioTotal'.
	 */
	public SmsPaquetePrecio[] findWherePaquetePrecioTotalEquals(double paquetePrecioTotal) throws SmsPaquetePrecioDaoException;

	/** 
	 * Returns all rows from the sms_paquete_precio table that match the criteria 'id_estatus = :idEstatus'.
	 */
	public SmsPaquetePrecio[] findWhereIdEstatusEquals(int idEstatus) throws SmsPaquetePrecioDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the sms_paquete_precio table that match the specified arbitrary SQL statement
	 */
	public SmsPaquetePrecio[] findByDynamicSelect(String sql, Object[] sqlParams) throws SmsPaquetePrecioDaoException;

	/** 
	 * Returns all rows from the sms_paquete_precio table that match the specified arbitrary SQL statement
	 */
	public SmsPaquetePrecio[] findByDynamicWhere(String sql, Object[] sqlParams) throws SmsPaquetePrecioDaoException;

}
