/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface EmpresaModulosOcultosDao
{
	/** 
	 * Inserts a new row in the empresa_modulos_ocultos table.
	 */
	public EmpresaModulosOcultosPk insert(EmpresaModulosOcultos dto) throws EmpresaModulosOcultosDaoException;

	/** 
	 * Updates a single row in the empresa_modulos_ocultos table.
	 */
	public void update(EmpresaModulosOcultosPk pk, EmpresaModulosOcultos dto) throws EmpresaModulosOcultosDaoException;

	/** 
	 * Deletes a single row in the empresa_modulos_ocultos table.
	 */
	public void delete(EmpresaModulosOcultosPk pk) throws EmpresaModulosOcultosDaoException;

	/** 
	 * Returns the rows from the empresa_modulos_ocultos table that matches the specified primary-key value.
	 */
	public EmpresaModulosOcultos findByPrimaryKey(EmpresaModulosOcultosPk pk) throws EmpresaModulosOcultosDaoException;

	/** 
	 * Returns all rows from the empresa_modulos_ocultos table that match the criteria 'ID_EMPRESA_MODULO_OCULTO = :idEmpresaModuloOculto'.
	 */
	public EmpresaModulosOcultos findByPrimaryKey(int idEmpresaModuloOculto) throws EmpresaModulosOcultosDaoException;

	/** 
	 * Returns all rows from the empresa_modulos_ocultos table that match the criteria ''.
	 */
	public EmpresaModulosOcultos[] findAll() throws EmpresaModulosOcultosDaoException;

	/** 
	 * Returns all rows from the empresa_modulos_ocultos table that match the criteria 'ID_EMPRESA_MODULO_OCULTO = :idEmpresaModuloOculto'.
	 */
	public EmpresaModulosOcultos[] findWhereIdEmpresaModuloOcultoEquals(int idEmpresaModuloOculto) throws EmpresaModulosOcultosDaoException;

	/** 
	 * Returns all rows from the empresa_modulos_ocultos table that match the criteria 'ID_EMPRESA = :idEmpresa'.
	 */
	public EmpresaModulosOcultos[] findWhereIdEmpresaEquals(int idEmpresa) throws EmpresaModulosOcultosDaoException;

	/** 
	 * Returns all rows from the empresa_modulos_ocultos table that match the criteria 'MODULOS_OCULTOS = :modulosOcultos'.
	 */
	public EmpresaModulosOcultos[] findWhereModulosOcultosEquals(String modulosOcultos) throws EmpresaModulosOcultosDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the empresa_modulos_ocultos table that match the specified arbitrary SQL statement
	 */
	public EmpresaModulosOcultos[] findByDynamicSelect(String sql, Object[] sqlParams) throws EmpresaModulosOcultosDaoException;

	/** 
	 * Returns all rows from the empresa_modulos_ocultos table that match the specified arbitrary SQL statement
	 */
	public EmpresaModulosOcultos[] findByDynamicWhere(String sql, Object[] sqlParams) throws EmpresaModulosOcultosDaoException;

}
