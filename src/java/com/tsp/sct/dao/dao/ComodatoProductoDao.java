/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.tsp.sct.dao.dao;

import com.tsp.sct.dao.dto.*;
import com.tsp.sct.dao.exceptions.*;

public interface ComodatoProductoDao
{
	/** 
	 * Inserts a new row in the comodato_producto table.
	 */
	public ComodatoProductoPk insert(ComodatoProducto dto) throws ComodatoProductoDaoException;

	/** 
	 * Updates a single row in the comodato_producto table.
	 */
	public void update(ComodatoProductoPk pk, ComodatoProducto dto) throws ComodatoProductoDaoException;

	/** 
	 * Deletes a single row in the comodato_producto table.
	 */
	public void delete(ComodatoProductoPk pk) throws ComodatoProductoDaoException;

	/** 
	 * Returns the rows from the comodato_producto table that matches the specified primary-key value.
	 */
	public ComodatoProducto findByPrimaryKey(ComodatoProductoPk pk) throws ComodatoProductoDaoException;

	/** 
	 * Returns all rows from the comodato_producto table that match the criteria 'ID_COMODATO_PRODUCTO = :idComodatoProducto'.
	 */
	public ComodatoProducto findByPrimaryKey(int idComodatoProducto) throws ComodatoProductoDaoException;

	/** 
	 * Returns all rows from the comodato_producto table that match the criteria ''.
	 */
	public ComodatoProducto[] findAll() throws ComodatoProductoDaoException;

	/** 
	 * Returns all rows from the comodato_producto table that match the criteria 'ID_COMODATO_PRODUCTO = :idComodatoProducto'.
	 */
	public ComodatoProducto[] findWhereIdComodatoProductoEquals(int idComodatoProducto) throws ComodatoProductoDaoException;

	/** 
	 * Returns all rows from the comodato_producto table that match the criteria 'ID_COMODATO = :idComodato'.
	 */
	public ComodatoProducto[] findWhereIdComodatoEquals(int idComodato) throws ComodatoProductoDaoException;

	/** 
	 * Returns all rows from the comodato_producto table that match the criteria 'ID_CONCEPTO = :idConcepto'.
	 */
	public ComodatoProducto[] findWhereIdConceptoEquals(int idConcepto) throws ComodatoProductoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the comodato_producto table that match the specified arbitrary SQL statement
	 */
	public ComodatoProducto[] findByDynamicSelect(String sql, Object[] sqlParams) throws ComodatoProductoDaoException;

	/** 
	 * Returns all rows from the comodato_producto table that match the specified arbitrary SQL statement
	 */
	public ComodatoProducto[] findByDynamicWhere(String sql, Object[] sqlParams) throws ComodatoProductoDaoException;

}
