/*
SCRIPT donde se encuentras atributos adicionales para cambios en el sistema pretoriano
*/

--ATRIBUTO ADICIONAL PARA SABER SI UN EMPLEADO ADEMAS DE VENDEDOR, SI ES UN REPARTIDOR O NO.
--Fecha de alta: 13-05-2014, por Leonardo Montes de Oca
ALTER TABLE EMPLEADO ADD REPARTIDOR INT(1) DEFAULT 0 COMMENT '0 NO ES REPARTIDOR, 1 ES UN REPARTIDOR';

--Tabla adicional para llevar el control del inventario de cada uno de los repartidores.
--Fecha de alta: 13-05-2014, Por Leonardo Montes de Oca
CREATE TABLE EMPLEADO_INVENTARIO_REPARTIDOR (
    ID_INVENTARIO INT(10) NOT NULL AUTO_INCREMENT,
    ID_EMPLEADO INT(10) COMMENT 'ID DEL EMPLEADO REPARTIDOR AL QUE PERTENECE ESTE INVENTARIO',
    ID_CONCEPTO INT(10) COMMENT 'ID DEL CONCEPTO O ID_SERVICIO',
    TIPO_PRODUCTO_SERVICIO INT(1) DEFAULT 1 COMMENT '0 ES UN SERVICIO, 1 ES UN CONCEPTO',
    CANTIDAD DOUBLE COMMENT 'NUMERO DE ARTICULOS ASIGNADOS',
    ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 ACTIVO, 2 BORRADO',
    PRIMARY KEY (ID_INVENTARIO)
);

---SCRIPT'S PARA REPORTES CONFIGURABLES (Tablas nuevas: TIPO_REPORTE, REPORTE_CONFIGURABLE, Insert de valores en tabla TIPO_REPORTE).
--Fecha de alta: 22-05-2014, Por Leonardo Montes de Oca
CREATE TABLE TIPO_REPORTE(
    ID_REPORTE INT(10) NOT NULL AUTO_INCREMENT COMMENT 'LLAVE PRIMARIA DE LA TABLA',
    ID_TIPO_REPORTE INT(3) COMMENT 'ID IDENTIFICADOR DEL TIPO DE REPORTE, BASADO EN LA CLASE JAVA ReporteBO.java',
    ID_ESTATUS INT(1) DEFAULT 1,
    VISIBLE INT(1) DEFAULT 0 COMMENT 'IDENTIFICADOR PARA MOSTRAR O NO EN PANTALLA AL USUARIO, 0 NO VISIBLE, 1 VISIBLE',
    DESCRIPCION VARCHAR(50),
    PRIMARY KEY (ID_REPORTE)
);

INSERT INTO TIPO_REPORTE VALUES (1, 1, 1, 1, 'Reporte de Usuarios');
INSERT INTO TIPO_REPORTE VALUES (2, 2, 1, 0, 'Reporte de Certificados CSD');
INSERT INTO TIPO_REPORTE VALUES (3, 3, 1, 1, 'Reporte de Sucursales');
INSERT INTO TIPO_REPORTE VALUES (4, 4, 1, 1, 'Reporte de Clientes');
INSERT INTO TIPO_REPORTE VALUES (5, 5, 1, 1, 'Reporte de Impuestos');
INSERT INTO TIPO_REPORTE VALUES (6, 6, 1, 1, 'Reporte de Proveedores');
INSERT INTO TIPO_REPORTE VALUES (7, 7, 1, 1, 'Reporte de Almacenes Físicos');
INSERT INTO TIPO_REPORTE VALUES (8, 8, 1, 0, 'Reporte de Categorías');
INSERT INTO TIPO_REPORTE VALUES (9, 9, 1, 0, 'Reporte de Embalajes');
INSERT INTO TIPO_REPORTE VALUES (10, 10, 1, 0, 'Reporte de Marcas');
INSERT INTO TIPO_REPORTE VALUES (11, 11, 1, 0, 'Reporte de Productos');
INSERT INTO TIPO_REPORTE VALUES (12, 12, 1, 0, 'Reporte de Servicios');
INSERT INTO TIPO_REPORTE VALUES (13, 13, 1, 1, 'Reporte de Prospectos');
INSERT INTO TIPO_REPORTE VALUES (14, 14, 1, 0, 'ACCESOS DE USUARIO LOG-IN/OUT');
INSERT INTO TIPO_REPORTE VALUES (15, 15, 1, 0, 'ACCIONES DE USUARIO (NAVEGACIÓN)');
INSERT INTO TIPO_REPORTE VALUES (16, 16, 1, 0, 'MOVIMIENTOS (PRODUCTO)');
INSERT INTO TIPO_REPORTE VALUES (17, 17, 1, 0, 'COBRANZA ABONOS');
INSERT INTO TIPO_REPORTE VALUES (18, 20, 1, 1, 'Reporte de Cotizaciones');
INSERT INTO TIPO_REPORTE VALUES (19, 21, 1, 1, 'Reporte de Pedidos');
INSERT INTO TIPO_REPORTE VALUES (20, 22, 1, 0, 'Reporte de Facturas');
INSERT INTO TIPO_REPORTE VALUES (21, 23, 1, 0, 'COTIZACIÓN');
INSERT INTO TIPO_REPORTE VALUES (22, 24, 1, 0, 'PEDIDO');
INSERT INTO TIPO_REPORTE VALUES (23, 25, 1, 0, 'ESTADO DE CUENTA (COBRANZA-ABONOS)');
INSERT INTO TIPO_REPORTE VALUES (24, 26, 1, 0, 'Facturas - Consumos por Sucursal');
INSERT INTO TIPO_REPORTE VALUES (25, 27, 1, 1, 'Cobranza Abonos');
INSERT INTO TIPO_REPORTE VALUES (26, 28, 1, 1, 'Reporte de Nómina');
INSERT INTO TIPO_REPORTE VALUES (27, 29, 1, 1, 'Reporte de Inventario');
INSERT INTO TIPO_REPORTE VALUES (28, 30, 1, 1, 'Reporte de Cliente Sin Compra');

CREATE TABLE REPORTE_CONFIGURABLE (
    ID_CONFIGURACION INT(10) NOT NULL AUTO_INCREMENT,
    ID_EMPRESA INT(10) COMMENT 'ID DE LA EMPRESA/SUCURSAL Q GENERAR REPORTE',
    ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 SI ESTA ACTIVO, 2 SI ESTA INACTIVO',
    ID_TIPO_REPORTE INT(2) COMMENT 'ID DEL TIPO DE REPORTE QUE SE CONFIGURA',
    ID_DIAS VARCHAR(50) COMMENT 'DIAS A ENVIARA REPORTE, PUEDE SER UNO O MAS: 1 DOMINGO,2 LUNES,3 MARTES,4 MIERCOLES,5 JUEVES,6 VIERNES,7 SABADO,8 TODOS LOS DIAS',
    CORREOS TEXT COMMENT 'CORREOS A LOS CUALES SE LES ENVIARA EL REPORTE, SEPARADOS POR COMAS',
    FILTROS TEXT COMMENT 'DATOS DE FILTRADO, VARIA EL ORDEN Y FUNCIONAMIENTO DEPENDIENDO EL TIPO DE REPORTE',
    PRIMARY KEY (ID_CONFIGURACION)
);
---NOTAS DE LA TABLA "REPOTE_CONFIGURABLE"
--EL ATRIBUTO FILTROS, ESTA CONFIGURADO DE LA SIGUIENTE MANERA:
--EL DATO "NA" COMO VALOR QUIERE DECIR QUE NO APICA DICHO FILTRO
--ESTA COMPUESTO POR LOS SOGUIENTES DATOS :
--    FECHA_INICIAL_FILTRO,FECHA_FINAL_FILTRO
--    EJEMPLO: NA,30/05/2014    //LO CUAL QUIERE DECIR QUE NO TIENE FECHA DE INICIO EL FILTRO


----
---SCRIP'S PARA EL ALIAS DE LOS DISPOSITIVOS MOVILES
--Fecha de alta: 02-07-2014, Por Leonardo Montes de Oca
ALTER TABLE DISPOSITIVO_MOVIL ADD ALIAS_TELEFONO VARCHAR(150) DEFAULT '' COMMENT 'ATRIBUTO PARA COLOCAR EL ALIAS DEL CELULAR';
--Fecha de alta: 03-07-2014, Por Leonardo Montes de Oca
ALTER TABLE DISPOSITIVO_MOVIL ADD REPORTE_ROBO INT(1) DEFAULT 0 COMMENT '0 SI NO HA SIDO REPORTADO COMO ROBADO, 1 SI FUE REPORTADO COMO ROBADO';

--SCRIP PARA UN NUEVO ID_ESTATUS = 3; QUE APLICA PARA QUE EL CLIENTE NO PUEDE FACTURAR, HASTA SER EDITADO Y COMPLETADO TODOS LOS DATOS REQUERIDOS.
--Fecha de alta: 08-07-2014, Por Leonardo Montes de Oca.
INSERT INTO ESTATUS (ID_ESTATUS,NOMBRE,DESCRIPCION) VALUES (3,'INVISIBLE','EL ELEMENTO NO ESTA DISPONIBLE PARA FACTURACION');

----------------
--SCRIP'S PARA EL CONTROL DE LA ADDENDAS DISPONIBLES Y ASIGNADA A UNA EMPRESA EN PARTICULAR
--Fecha de alta: 21-08-2014, Por Leonardo Montes de oca
CREATE TABLE ADDENDAS_DISPONIBLES(
	ID_ADDENDA INT(10) NOT NULL AUTO_INCREMENT,
	ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 SI LA ADDENDA ESTA ACTIVA, 2 INACTIVA',
	NOMBRE_ADDENDA VARCHAR(50),
	DESCRIPCION VARCHAR(150),
        IDENTIFICADOR VARCHAR(50),
	PRIMARY KEY(ID_ADDENDA)
);

INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (1, 1, 'Mabe', 'Mabe', 'MABE1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (2, 1, 'FEMSA', 'FEMSA Cerveceria Cuauhtemoc', 'FEMSACERVECERIA1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (3, 1, 'AL SUPER', 'AL SUPER', 'ALSUPER1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (4, 1, 'AMECE', 'AMECE', 'AMECE1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (5, 1, 'Flextronics', 'Flextronics', 'FLEXTRONICS1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (6, 1, 'MABE 2', 'MABE version 2', 'MABE2');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (7, 1, 'MILANO', 'MILANO', 'MILANO1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (8, 1, 'SANTANDER', 'SANTANDER', 'SANTANDER1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (9, 1, 'Cosbel', 'Cosbel', 'COSBEL1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (10, 1, 'Autozone', 'Autozone', 'AUTOZONE1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (11, 1, 'Metalsa MPPR', 'Metalsa MPPR', 'METALSAMPPR1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (12, 1, 'Philips', 'Philips', 'PHILIPS1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (13, 1, 'AMECE', 'AMECE VERSION AMC005', 'AMECE0051');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (14, 1, 'PepsiCo', 'PepsiCo', 'PEPSICO1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (15, 1, 'Rassini', 'Rassini', 'RASSINI1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (16, 1, 'AHM', 'Altos Hornos de Mexico', 'AHM1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (17, 1, 'Schneider', 'Schneider', 'SCHNEIDER1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (18, 1, 'Soriana Rev Sup', 'Soriana Reverse Supercity', 'SORIANAREVSUP1');

ALTER TABLE EMPRESA ADD ADDEDAS_PERMITIDAS VARCHAR (1000) DEFAULT '' COMMENT 'IDENTIFICADORES DE LAS ADDENDAS, SEPARADA POS COMAS, QUE TIENE COMPRADAS LA EMPRESA. SE RELACIONA CON LA TABLA ADDENDAS_DISPONIBLES'; 

--SCRIP'S PARA EL CONTROL DE LOS TIMBRES PARA SECTOR PRIMARIO
--Fecha de alta: 26-08-2014, Por Leonardo Montes de oca
ALTER TABLE EMPRESA ADD CREDITOS_DISPONIBLES_SECTOR_PRIMARIO INT(10) DEFAULT 0 COMMENT 'CREDITOS PARA FACTURACION EN SECTOR PRIMARIO';

ALTER TABLE EMPRESA ADD ADDEDAS_PERMITIDAS VARCHAR (100) DEFAULT '' COMMENT 'IDs DE LAS ADDENDAS, SEPARADA POS COMAS, QUE TIENE COMPRADAS LA EMPRESA'; 


-- Campo para identifiacr un cliente importado del sae (calve compuesta id_empresa-clave_sae)
-- Héctor   07/08/2014   -> Omitir este query aun no esta en uso
ALTER TABLE CLIENTE
ADD COLUMN CLAVE_SAE VARCHAR(20) DEFAULT '';
ALTER TABLE CONCEPTO
ADD COLUMN CLAVEART_SAE VARCHAR(20) DEFAULT '';



-- Tabla para organizar por zonas a los vendedores
-- Héctor   18/09/2014
CREATE TABLE region (
	ID_REGION BIGINT(20) PRIMARY KEY AUTO_INCREMENT,
	NOMBRE VARCHAR (150),
	DESCRIPCION VARCHAR (1050),
	ID_EMPRESA BIGINT(20) ,
	ID_ESTATUS BIGINT(2) 
); 

-- Relación zona-vendedor
-- Héctor   18/09/2014
ALTER TABLE empleado
ADD COLUMN ID_REGION INT(1) DEFAULT 0;


-- ARQUEO DE CAJA
-- Héctor   19/09/2014

CREATE TABLE empleado_arqueo(
ID_ARQUEO INT AUTO_INCREMENT PRIMARY KEY COMMENT 'INDICE',
ID_EMPLEADO INT (10),
ID_COBRANZA_METODO_PAGO INT(10),
MONTO DOUBLE,
REFERENCIA VARCHAR(50),
FECHA DATETIME,
ID_ESTATUS INT (1) COMMENT '1 -  ACTIVO , 2 - CANCELADO'
);

-- Campos para permisos opcionales en app
-- Héctor   19/09/2014

ALTER TABLE empresa_permiso_aplicacion
ADD COLUMN ACCESO_SGFENS_CBB INT(1) DEFAULT 0,
ADD COLUMN ACCESO_SGFENS_FACTURACION INT(1) DEFAULT 0,
ADD COLUMN ACCESO_SGFENS_COBROTARJETA INT(1) DEFAULT 0,
ADD COLUMN ACCESO_SGFENS_PRETOMOVIL INT(1) DEFAULT 0,
ADD COLUMN ACCESO_SGFENS_VALIDACIONXML INT(1) DEFAULT 0;


-- Tabla para la relación de Paquetes de productos
-- Leonardo Montes de Oca, 24/09/2014

CREATE TABLE PAQUETE(
    ID_PAQUETE INT(10) AUTO_INCREMENT,
    ID_ESTATUS INT(1),
    ID_EMPRESA INT(10),
    NOMBRE VARCHAR(25),
    DESCRIPCION VARCHAR(250),
    PRIMARY KEY (ID_PAQUETE)
);

--Tabla que contiene la relación del paquete con los productos o conceptos que contiene el paquete
-- Leonardo Montes de Oca, 24/09/2014

CREATE TABLE PAQUETE_RELACION_CONCEPTO(
    ID_PAQUETE_RELACION_CONCEPTO INT(10) AUTO_INCREMENT,
    ID_ESTATUS INT(1),
    ID_PAQUETE INT(10) COMMENT 'ID DE LA TABLA PAQUETE',
    ID_CONCEPTO INT(10) COMMENT 'ID DE LA TABLA CONCEPTO',
    CANTIDAD DOUBLE COMMENT 'CANTIDAD DE UNIDADES QUE INCLUYEN EN EL PAQUETE',
    PRECIO DOUBLE COMMENT 'NUEVO PRECIO DEL PRODUCTO O CONCEPTO, ESTE PRECIO DEL PRODUCTO ES EN PAQUETE',    
    PRIMARY KEY (ID_PAQUETE_RELACION_CONCEPTO)
);

--Atributos adicionales para un descuento a los conceptos/productos, se maneja ya sea porcentaje o cantidad a descontar
-- Leonardo Montes de Oca, 29/09/2014
ALTER TABLE CONCEPTO ADD DESCUENTO_PORCENTAJE DOUBLE DEFAULT 0 COMMENT 'PORCENTAJE DE DECUENTO, YA SEA QUE SE COLOQUE ESTE ATRIBUTO O EL DE DESCUENTO_MONTO';
ALTER TABLE CONCEPTO ADD DESCUENTO_MONTO DOUBLE DEFAULT 0 COMMENT 'MONTO DE DESCUENTO, YA SEA QUE SE COLOQUE ESTE ATRIBUTO O EL DE DESCUENTO_PORCENTAJE';

--Atributo que nos dice cuantas licencias tendrá el usuario-empresa en question
-- Leonardo Montes de Oca, 29/09/2014
ALTER TABLE EMPRESA_PERMISO_APLICACION
ADD ACCESO_SGFENS_NUM_LICENCIAS_MOVILES INT(5) DEFAULT 0 COMMENT 'NUMERO DE LICENCIAS DE MOVILES QUE PODRA TENER EL USUARIOS, LOS MOVILES DEBERAN ESTAR ACTIVOS';

--Atributo adicional para saber que roles pertenecen tambien al pretoriano:
-- Leonardo Mones de Oca, 01/10/2014
ALTER TABLE ROLES ADD MOSTRAR_PRETORIANO INT(1) DEFAULT 0 COMMENT '0 SI NO SE MOSTRARA EL ROL EN EL PRETORIANO, 1 SI SE MOSTRARA';

INSERT INTO ROLES (ID_ROLES,NOMBRE,DESCRIPCION,OCULTO,ID_EMPRESA,MOSTRAR_PRETORIANO) VALUES (26,'CONDUCTOR','Empleado al que se le podr',true,-1,1);
INSERT INTO ROLES (ID_ROLES,NOMBRE,DESCRIPCION,OCULTO,ID_EMPRESA,MOSTRAR_PRETORIANO) VALUES (27,'ADMINISTRADOR DE SUCURSAL','Empleado al que se le puede asignar un equipo telef',true,-1,1);
INSERT INTO ROLES (ID_ROLES,NOMBRE,DESCRIPCION,OCULTO,ID_EMPRESA,MOSTRAR_PRETORIANO) VALUES (28,'DIRECCION COMERCIAL','Mismas funciones que el administrador, con la diferencia que podr',true,-1,1);
INSERT INTO ROLES (ID_ROLES,NOMBRE,DESCRIPCION,OCULTO,ID_EMPRESA,MOSTRAR_PRETORIANO) VALUES (29,'GESTOR','Empleado al que se le puede asignar un equipo telef',true,-1,1);
INSERT INTO ROLES (ID_ROLES,NOMBRE,DESCRIPCION,OCULTO,ID_EMPRESA,MOSTRAR_PRETORIANO) VALUES (30,'ALMACENISTA','Permisos de solo modificación de los datos de productos y servicios',true,-1,1);



-- QUERY'S PARA COPIAR USUARIOS Y PASS DE LA TABLA LDAP Y USUARIOS A LA TABLA EMPLESA.
--01/10/2014, Leonardo Montes de Oca
--UPDATE EMPLEADO SET USUARIO = (SELECT USER_NAME FROM USUARIOS WHERE USUARIOS.ID_USUARIOS = EMPLEADO.ID_USUARIOS);
--UPDATE EMPLEADO SET EMPLEADO.PASSWORD = (SELECT LDAP.PASSWORD FROM LDAP WHERE EMPLEADO.USUARIO = LDAP.USUARIO);
--

-- Atributos para Colocar el sueldo del vendedor y el periodo de pago
-- Leonardo Montes de Oca, 02/10/2014
ALTER TABLE EMPLEADO ADD SUELDO DOUBLE DEFAULT 0 COMMENT 'SUELDO DEL VENDEDOR',
ADD PORCENTAJE_COMISION DOUBLE DEFAULT 0 COMMENT 'PORCENTAJE DE LA COMISION',
ADD ID_PERIODO_PAGO INT (3) DEFAULT -1 COMMENT '1 DIARIO, 2 SEMANAL, 3 CATOCERNAL, 4 QUINCENAL, 5 MENSUAL';

-- Tabla que lleva el historico de las devoluciones y cambios
-- Leonardo Montes de Oca, 07/10/2014
CREATE TABLE SGFENS_PEDIDO_DEVOLUCION_CAMBIO(
    ID_PEDIDO_DEVOL_CAMBIO INT (10) AUTO_INCREMENT,
    ID_ESTATUS INT(10) DEFAULT 1 COMMENT '1 ACTIVA, 2 CANCELADA',
    ID_EMPRESA INT (10),
    ID_EMPLEADO INT(10),
    ID_CONCEPTO INT(10) COMMENT 'ID DEL CONCEPTO QUE SE ESTA DEVOLVIENDO O CAMBIANDO',
    ID_PEDIDO INT(10) COMMENT 'ID DEL PEDIDO AL CUAL SE RELACIONA LA DEVOLUCION O EL CAMBIO',
    ID_TIPO INT(2) COMMENT '1 ES UNA DEVOLUCION, 2 ES UN CAMBIO',    
    APTO_PARA_VENTA DOUBLE COMMENT 'CANTIDAD APTO PARA VENTA',
    NO_APTO_PARA_VENTA DOUBLE COMMENT 'NO APTO PARA VENTA',
    ID_CLASIFICACION INT(2) COMMENT '1 SOLICITADO POR CLIENTE, 2 NO VENDIDO, 3 OTRO, 4 PRODUCTO CADUCO, 5 PRODUCTO MAL ESTADO',
    DESCRIPCION_CLASIFICACION VARCHAR(250) COMMENT 'DESCRIPCION DEL PORQUE LA DEVOLUCION O CAMBIO, ESTO PARA ID_CLASIFICACION IGUAL A 3',    
    ID_CONCEPTO_ENTREGADO INT(10) COMMENT 'ID_CONCEPTO POR EL QUE SE CAMBIO',
    MONTO_RESULTANTE DOUBLE COMMENT 'MONTO POR EL CUAL ES LA DIFERENCIA DEL CAMBIO DEL PRODUCTO',
    DIFERENCIA_FAVOR INT(1) COMMENT '1 SI LA DIFERENCIA ES A FAVOR DEL CLIENTE, 2 SI LA DIFERENCIA ES EN CONTRA DEL CLIENTE, 0 SIN A FAVOR DE NADIE',
    FECHA DATE COMMENT 'FECHA EN LA QUE SE REGISTRA EL PEDIDO',
    PRIMARY KEY (ID_PEDIDO_DEVOL_CAMBIO)
);

-- Atributos para almacenar el costo del producto y % de comisión del vendedor al momento de la venta.
-- Héctor , 07/10/2014

ALTER TABLE SGFENS_PEDIDO_PRODUCTO 
ADD COSTO_UNITARIO DOUBLE DEFAULT 0 COMMENT 'COSTO DEL PRODUCTO EN EL MOMENTO DE LA VENTA (PRECIO DE COMPRA)',
ADD PORCENTAJE_COMISION_EMPLEADO DOUBLE DEFAULT 0 COMMENT 'PORCENTAJE DE LA COMISION';

/*
SCRIPT donde se encuentras atributos adicionales para cambios en el sistema pretoriano
*/

--ATRIBUTO ADICIONAL PARA SABER SI UN EMPLEADO ADEMAS DE VENDEDOR, SI ES UN REPARTIDOR O NO.
--Fecha de alta: 13-05-2014, por Leonardo Montes de Oca
ALTER TABLE EMPLEADO ADD REPARTIDOR INT(1) DEFAULT 0 COMMENT '0 NO ES REPARTIDOR, 1 ES UN REPARTIDOR';

--Tabla adicional para llevar el control del inventario de cada uno de los repartidores.
--Fecha de alta: 13-05-2014, Por Leonardo Montes de Oca
CREATE TABLE EMPLEADO_INVENTARIO_REPARTIDOR (
    ID_INVENTARIO INT(10) NOT NULL AUTO_INCREMENT,
    ID_EMPLEADO INT(10) COMMENT 'ID DEL EMPLEADO REPARTIDOR AL QUE PERTENECE ESTE INVENTARIO',
    ID_CONCEPTO INT(10) COMMENT 'ID DEL CONCEPTO O ID_SERVICIO',
    TIPO_PRODUCTO_SERVICIO INT(1) DEFAULT 1 COMMENT '0 ES UN SERVICIO, 1 ES UN CONCEPTO',
    CANTIDAD DOUBLE COMMENT 'NUMERO DE ARTICULOS ASIGNADOS',
    ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 ACTIVO, 2 BORRADO',
    PRIMARY KEY (ID_INVENTARIO)
);

---SCRIPT'S PARA REPORTES CONFIGURABLES (Tablas nuevas: TIPO_REPORTE, REPORTE_CONFIGURABLE, Insert de valores en tabla TIPO_REPORTE).
--Fecha de alta: 22-05-2014, Por Leonardo Montes de Oca
CREATE TABLE TIPO_REPORTE(
    ID_REPORTE INT(10) NOT NULL AUTO_INCREMENT COMMENT 'LLAVE PRIMARIA DE LA TABLA',
    ID_TIPO_REPORTE INT(3) COMMENT 'ID IDENTIFICADOR DEL TIPO DE REPORTE, BASADO EN LA CLASE JAVA ReporteBO.java',
    ID_ESTATUS INT(1) DEFAULT 1,
    VISIBLE INT(1) DEFAULT 0 COMMENT 'IDENTIFICADOR PARA MOSTRAR O NO EN PANTALLA AL USUARIO, 0 NO VISIBLE, 1 VISIBLE',
    DESCRIPCION VARCHAR(50),
    PRIMARY KEY (ID_REPORTE)
);

INSERT INTO TIPO_REPORTE VALUES (1, 1, 1, 1, 'Reporte de Usuarios');
INSERT INTO TIPO_REPORTE VALUES (2, 2, 1, 0, 'Reporte de Certificados CSD');
INSERT INTO TIPO_REPORTE VALUES (3, 3, 1, 1, 'Reporte de Sucursales');
INSERT INTO TIPO_REPORTE VALUES (4, 4, 1, 1, 'Reporte de Clientes');
INSERT INTO TIPO_REPORTE VALUES (5, 5, 1, 1, 'Reporte de Impuestos');
INSERT INTO TIPO_REPORTE VALUES (6, 6, 1, 1, 'Reporte de Proveedores');
INSERT INTO TIPO_REPORTE VALUES (7, 7, 1, 1, 'Reporte de Almacenes Físicos');
INSERT INTO TIPO_REPORTE VALUES (8, 8, 1, 0, 'Reporte de Categorías');
INSERT INTO TIPO_REPORTE VALUES (9, 9, 1, 0, 'Reporte de Embalajes');
INSERT INTO TIPO_REPORTE VALUES (10, 10, 1, 0, 'Reporte de Marcas');
INSERT INTO TIPO_REPORTE VALUES (11, 11, 1, 0, 'Reporte de Productos');
INSERT INTO TIPO_REPORTE VALUES (12, 12, 1, 0, 'Reporte de Servicios');
INSERT INTO TIPO_REPORTE VALUES (13, 13, 1, 1, 'Reporte de Prospectos');
INSERT INTO TIPO_REPORTE VALUES (14, 14, 1, 0, 'ACCESOS DE USUARIO LOG-IN/OUT');
INSERT INTO TIPO_REPORTE VALUES (15, 15, 1, 0, 'ACCIONES DE USUARIO (NAVEGACIÓN)');
INSERT INTO TIPO_REPORTE VALUES (16, 16, 1, 0, 'MOVIMIENTOS (PRODUCTO)');
INSERT INTO TIPO_REPORTE VALUES (17, 17, 1, 0, 'COBRANZA ABONOS');
INSERT INTO TIPO_REPORTE VALUES (18, 20, 1, 1, 'Reporte de Cotizaciones');
INSERT INTO TIPO_REPORTE VALUES (19, 21, 1, 1, 'Reporte de Pedidos');
INSERT INTO TIPO_REPORTE VALUES (20, 22, 1, 0, 'Reporte de Facturas');
INSERT INTO TIPO_REPORTE VALUES (21, 23, 1, 0, 'COTIZACIÓN');
INSERT INTO TIPO_REPORTE VALUES (22, 24, 1, 0, 'PEDIDO');
INSERT INTO TIPO_REPORTE VALUES (23, 25, 1, 0, 'ESTADO DE CUENTA (COBRANZA-ABONOS)');
INSERT INTO TIPO_REPORTE VALUES (24, 26, 1, 0, 'Facturas - Consumos por Sucursal');
INSERT INTO TIPO_REPORTE VALUES (25, 27, 1, 1, 'Cobranza Abonos');
INSERT INTO TIPO_REPORTE VALUES (26, 28, 1, 1, 'Reporte de Nómina');
INSERT INTO TIPO_REPORTE VALUES (27, 29, 1, 1, 'Reporte de Inventario');
INSERT INTO TIPO_REPORTE VALUES (28, 30, 1, 1, 'Reporte de Cliente Sin Compra');

CREATE TABLE REPORTE_CONFIGURABLE (
    ID_CONFIGURACION INT(10) NOT NULL AUTO_INCREMENT,
    ID_EMPRESA INT(10) COMMENT 'ID DE LA EMPRESA/SUCURSAL Q GENERAR REPORTE',
    ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 SI ESTA ACTIVO, 2 SI ESTA INACTIVO',
    ID_TIPO_REPORTE INT(2) COMMENT 'ID DEL TIPO DE REPORTE QUE SE CONFIGURA',
    ID_DIAS VARCHAR(50) COMMENT 'DIAS A ENVIARA REPORTE, PUEDE SER UNO O MAS: 1 DOMINGO,2 LUNES,3 MARTES,4 MIERCOLES,5 JUEVES,6 VIERNES,7 SABADO,8 TODOS LOS DIAS',
    CORREOS TEXT COMMENT 'CORREOS A LOS CUALES SE LES ENVIARA EL REPORTE, SEPARADOS POR COMAS',
    FILTROS TEXT COMMENT 'DATOS DE FILTRADO, VARIA EL ORDEN Y FUNCIONAMIENTO DEPENDIENDO EL TIPO DE REPORTE',
    PRIMARY KEY (ID_CONFIGURACION)
);
---NOTAS DE LA TABLA "REPOTE_CONFIGURABLE"
--EL ATRIBUTO FILTROS, ESTA CONFIGURADO DE LA SIGUIENTE MANERA:
--EL DATO "NA" COMO VALOR QUIERE DECIR QUE NO APICA DICHO FILTRO
--ESTA COMPUESTO POR LOS SOGUIENTES DATOS :
--    FECHA_INICIAL_FILTRO,FECHA_FINAL_FILTRO
--    EJEMPLO: NA,30/05/2014    //LO CUAL QUIERE DECIR QUE NO TIENE FECHA DE INICIO EL FILTRO


----
---SCRIP'S PARA EL ALIAS DE LOS DISPOSITIVOS MOVILES
--Fecha de alta: 02-07-2014, Por Leonardo Montes de Oca
ALTER TABLE DISPOSITIVO_MOVIL ADD ALIAS_TELEFONO VARCHAR(150) DEFAULT '' COMMENT 'ATRIBUTO PARA COLOCAR EL ALIAS DEL CELULAR';
--Fecha de alta: 03-07-2014, Por Leonardo Montes de Oca
ALTER TABLE DISPOSITIVO_MOVIL ADD REPORTE_ROBO INT(1) DEFAULT 0 COMMENT '0 SI NO HA SIDO REPORTADO COMO ROBADO, 1 SI FUE REPORTADO COMO ROBADO';

--SCRIP PARA UN NUEVO ID_ESTATUS = 3; QUE APLICA PARA QUE EL CLIENTE NO PUEDE FACTURAR, HASTA SER EDITADO Y COMPLETADO TODOS LOS DATOS REQUERIDOS.
--Fecha de alta: 08-07-2014, Por Leonardo Montes de Oca.
INSERT INTO ESTATUS (ID_ESTATUS,NOMBRE,DESCRIPCION) VALUES (3,'INVISIBLE','EL ELEMENTO NO ESTA DISPONIBLE PARA FACTURACION');

----------------
--SCRIP'S PARA EL CONTROL DE LA ADDENDAS DISPONIBLES Y ASIGNADA A UNA EMPRESA EN PARTICULAR
--Fecha de alta: 21-08-2014, Por Leonardo Montes de oca
CREATE TABLE ADDENDAS_DISPONIBLES(
	ID_ADDENDA INT(10) NOT NULL AUTO_INCREMENT,
	ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 SI LA ADDENDA ESTA ACTIVA, 2 INACTIVA',
	NOMBRE_ADDENDA VARCHAR(50),
	DESCRIPCION VARCHAR(150),
        IDENTIFICADOR VARCHAR(50),
	PRIMARY KEY(ID_ADDENDA)
);

INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (1, 1, 'Mabe', 'Mabe', 'MABE1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (2, 1, 'FEMSA', 'FEMSA Cerveceria Cuauhtemoc', 'FEMSACERVECERIA1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (3, 1, 'AL SUPER', 'AL SUPER', 'ALSUPER1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (4, 1, 'AMECE', 'AMECE', 'AMECE1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (5, 1, 'Flextronics', 'Flextronics', 'FLEXTRONICS1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (6, 1, 'MABE 2', 'MABE version 2', 'MABE2');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (7, 1, 'MILANO', 'MILANO', 'MILANO1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (8, 1, 'SANTANDER', 'SANTANDER', 'SANTANDER1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (9, 1, 'Cosbel', 'Cosbel', 'COSBEL1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (10, 1, 'Autozone', 'Autozone', 'AUTOZONE1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (11, 1, 'Metalsa MPPR', 'Metalsa MPPR', 'METALSAMPPR1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (12, 1, 'Philips', 'Philips', 'PHILIPS1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (13, 1, 'AMECE', 'AMECE VERSION AMC005', 'AMECE0051');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (14, 1, 'PepsiCo', 'PepsiCo', 'PEPSICO1');
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (15, 1, 'Rassini', 'Rassini', 'RASSINI1');

ALTER TABLE EMPRESA ADD ADDEDAS_PERMITIDAS VARCHAR (1000) DEFAULT '' COMMENT 'IDENTIFICADORES DE LAS ADDENDAS, SEPARADA POS COMAS, QUE TIENE COMPRADAS LA EMPRESA. SE RELACIONA CON LA TABLA ADDENDAS_DISPONIBLES'; 

--SCRIP'S PARA EL CONTROL DE LOS TIMBRES PARA SECTOR PRIMARIO
--Fecha de alta: 26-08-2014, Por Leonardo Montes de oca
ALTER TABLE EMPRESA ADD CREDITOS_DISPONIBLES_SECTOR_PRIMARIO INT(10) DEFAULT 0 COMMENT 'CREDITOS PARA FACTURACION EN SECTOR PRIMARIO';

ALTER TABLE EMPRESA ADD ADDEDAS_PERMITIDAS VARCHAR (100) DEFAULT '' COMMENT 'IDs DE LAS ADDENDAS, SEPARADA POS COMAS, QUE TIENE COMPRADAS LA EMPRESA'; 


-- Campo para identifiacr un cliente importado del sae (calve compuesta id_empresa-clave_sae)
-- Héctor   07/08/2014   -> Omitir este query aun no esta en uso
ALTER TABLE CLIENTE
ADD COLUMN CLAVE_SAE VARCHAR(20) DEFAULT '';
ALTER TABLE CONCEPTO
ADD COLUMN CLAVEART_SAE VARCHAR(20) DEFAULT '';



-- Tabla para organizar por zonas a los vendedores
-- Héctor   18/09/2014
CREATE TABLE region (
	ID_REGION BIGINT(20) PRIMARY KEY AUTO_INCREMENT,
	NOMBRE VARCHAR (150),
	DESCRIPCION VARCHAR (1050),
	ID_EMPRESA BIGINT(20) ,
	ID_ESTATUS BIGINT(2) 
); 

-- Relación zona-vendedor
-- Héctor   18/09/2014
ALTER TABLE empleado
ADD COLUMN ID_REGION INT(1) DEFAULT 0;


-- ARQUEO DE CAJA
-- Héctor   19/09/2014

CREATE TABLE empleado_arqueo(
ID_ARQUEO INT AUTO_INCREMENT PRIMARY KEY COMMENT 'INDICE',
ID_EMPLEADO INT (10),
ID_COBRANZA_METODO_PAGO INT(10),
MONTO DOUBLE,
REFERENCIA VARCHAR(50),
FECHA DATETIME,
ID_ESTATUS INT (1) COMMENT '1 -  ACTIVO , 2 - CANCELADO'
);

-- Campos para permisos opcionales en app
-- Héctor   19/09/2014

ALTER TABLE empresa_permiso_aplicacion
ADD COLUMN ACCESO_SGFENS_CBB INT(1) DEFAULT 0,
ADD COLUMN ACCESO_SGFENS_FACTURACION INT(1) DEFAULT 0,
ADD COLUMN ACCESO_SGFENS_COBROTARJETA INT(1) DEFAULT 0,
ADD COLUMN ACCESO_SGFENS_PRETOMOVIL INT(1) DEFAULT 0,
ADD COLUMN ACCESO_SGFENS_VALIDACIONXML INT(1) DEFAULT 0;


-- Tabla para la relación de Paquetes de productos
-- Leonardo Montes de Oca, 24/09/2014

CREATE TABLE PAQUETE(
    ID_PAQUETE INT(10) AUTO_INCREMENT,
    ID_ESTATUS INT(1),
    ID_EMPRESA INT(10),
    NOMBRE VARCHAR(25),
    DESCRIPCION VARCHAR(250),
    PRIMARY KEY (ID_PAQUETE)
);

--Tabla que contiene la relación del paquete con los productos o conceptos que contiene el paquete
-- Leonardo Montes de Oca, 24/09/2014

CREATE TABLE PAQUETE_RELACION_CONCEPTO(
    ID_PAQUETE_RELACION_CONCEPTO INT(10) AUTO_INCREMENT,
    ID_ESTATUS INT(1),
    ID_PAQUETE INT(10) COMMENT 'ID DE LA TABLA PAQUETE',
    ID_CONCEPTO INT(10) COMMENT 'ID DE LA TABLA CONCEPTO',
    CANTIDAD DOUBLE COMMENT 'CANTIDAD DE UNIDADES QUE INCLUYEN EN EL PAQUETE',
    PRECIO DOUBLE COMMENT 'NUEVO PRECIO DEL PRODUCTO O CONCEPTO, ESTE PRECIO DEL PRODUCTO ES EN PAQUETE',    
    PRIMARY KEY (ID_PAQUETE_RELACION_CONCEPTO)
);

--Atributos adicionales para un descuento a los conceptos/productos, se maneja ya sea porcentaje o cantidad a descontar
-- Leonardo Montes de Oca, 29/09/2014
ALTER TABLE CONCEPTO ADD DESCUENTO_PORCENTAJE DOUBLE DEFAULT 0 COMMENT 'PORCENTAJE DE DECUENTO, YA SEA QUE SE COLOQUE ESTE ATRIBUTO O EL DE DESCUENTO_MONTO';
ALTER TABLE CONCEPTO ADD DESCUENTO_MONTO DOUBLE DEFAULT 0 COMMENT 'MONTO DE DESCUENTO, YA SEA QUE SE COLOQUE ESTE ATRIBUTO O EL DE DESCUENTO_PORCENTAJE';

--Atributo que nos dice cuantas licencias tendrá el usuario-empresa en question
-- Leonardo Montes de Oca, 29/09/2014
ALTER TABLE EMPRESA_PERMISO_APLICACION
ADD ACCESO_SGFENS_NUM_LICENCIAS_MOVILES INT(5) DEFAULT 0 COMMENT 'NUMERO DE LICENCIAS DE MOVILES QUE PODRA TENER EL USUARIOS, LOS MOVILES DEBERAN ESTAR ACTIVOS';

--Atributo adicional para saber que roles pertenecen tambien al pretoriano:
-- Leonardo Mones de Oca, 01/10/2014
ALTER TABLE ROLES ADD MOSTRAR_PRETORIANO INT(1) DEFAULT 0 COMMENT '0 SI NO SE MOSTRARA EL ROL EN EL PRETORIANO, 1 SI SE MOSTRARA';

INSERT INTO ROLES (ID_ROLES,NOMBRE,DESCRIPCION,OCULTO,ID_EMPRESA,MOSTRAR_PRETORIANO) VALUES (26,'CONDUCTOR','Empleado al que se le podr',true,-1,1);
INSERT INTO ROLES (ID_ROLES,NOMBRE,DESCRIPCION,OCULTO,ID_EMPRESA,MOSTRAR_PRETORIANO) VALUES (27,'ADMINISTRADOR DE SUCURSAL','Empleado al que se le puede asignar un equipo telef',true,-1,1);
INSERT INTO ROLES (ID_ROLES,NOMBRE,DESCRIPCION,OCULTO,ID_EMPRESA,MOSTRAR_PRETORIANO) VALUES (28,'DIRECCION COMERCIAL','Mismas funciones que el administrador, con la diferencia que podr',true,-1,1);
INSERT INTO ROLES (ID_ROLES,NOMBRE,DESCRIPCION,OCULTO,ID_EMPRESA,MOSTRAR_PRETORIANO) VALUES (29,'GESTOR','Empleado al que se le puede asignar un equipo telef',true,-1,1);
INSERT INTO ROLES (ID_ROLES,NOMBRE,DESCRIPCION,OCULTO,ID_EMPRESA,MOSTRAR_PRETORIANO) VALUES (30,'ALMACENISTA','Permisos de solo modificación de los datos de productos y servicios',true,-1,1);



-- QUERY'S PARA COPIAR USUARIOS Y PASS DE LA TABLA LDAP Y USUARIOS A LA TABLA EMPLESA.
--01/10/2014, Leonardo Montes de Oca
--UPDATE EMPLEADO SET USUARIO = (SELECT USER_NAME FROM USUARIOS WHERE USUARIOS.ID_USUARIOS = EMPLEADO.ID_USUARIOS);
--UPDATE EMPLEADO SET EMPLEADO.PASSWORD = (SELECT LDAP.PASSWORD FROM LDAP WHERE EMPLEADO.USUARIO = LDAP.USUARIO);
--

-- Atributos para Colocar el sueldo del vendedor y el periodo de pago
-- Leonardo Montes de Oca, 02/10/2014
ALTER TABLE EMPLEADO ADD SUELDO DOUBLE DEFAULT 0 COMMENT 'SUELDO DEL VENDEDOR',
ADD PORCENTAJE_COMISION DOUBLE DEFAULT 0 COMMENT 'PORCENTAJE DE LA COMISION',
ADD ID_PERIODO_PAGO INT (3) DEFAULT -1 COMMENT '1 DIARIO, 2 SEMANAL, 3 CATOCERNAL, 4 QUINCENAL, 5 MENSUAL';

-- Tabla que lleva el historico de las devoluciones y cambios
-- Leonardo Montes de Oca, 07/10/2014
CREATE TABLE SGFENS_PEDIDO_DEVOLUCION_CAMBIO(
    ID_PEDIDO_DEVOL_CAMBIO INT (10) AUTO_INCREMENT,
    ID_ESTATUS INT(10) DEFAULT 1 COMMENT '1 ACTIVA, 2 CANCELADA',
    ID_EMPRESA INT (10),
    ID_EMPLEADO INT(10),
    ID_CONCEPTO INT(10) COMMENT 'ID DEL CONCEPTO QUE SE ESTA DEVOLVIENDO O CAMBIANDO',
    ID_PEDIDO INT(10) COMMENT 'ID DEL PEDIDO AL CUAL SE RELACIONA LA DEVOLUCION O EL CAMBIO',
    ID_TIPO INT(2) COMMENT '1 ES UNA DEVOLUCION, 2 ES UN CAMBIO',    
    APTO_PARA_VENTA DOUBLE COMMENT 'CANTIDAD APTO PARA VENTA',
    NO_APTO_PARA_VENTA DOUBLE COMMENT 'NO APTO PARA VENTA',
    ID_CLASIFICACION INT(2) COMMENT '1 NO SOLICITADO POR CLIENTE, 2 NO VENDIDO, 3 OTRO, 4 PRODUCTO CADUCO, 5 PRODUCTO MAL ESTADO, 6 SOLICITADO POR CLIENTE',
    DESCRIPCION_CLASIFICACION VARCHAR(250) COMMENT 'DESCRIPCION DEL PORQUE LA DEVOLUCION O CAMBIO, ESTO PARA ID_CLASIFICACION IGUAL A 3',    
    ID_CONCEPTO_ENTREGADO INT(10) COMMENT 'ID_CONCEPTO POR EL QUE SE CAMBIO',
    MONTO_RESULTANTE DOUBLE COMMENT 'MONTO POR EL CUAL ES LA DIFERENCIA DEL CAMBIO DEL PRODUCTO',
    DIFERENCIA_FAVOR INT(1) COMMENT '1 SI LA DIFERENCIA ES A FAVOR DEL CLIENTE, 2 SI LA DIFERENCIA ES EN CONTRA DEL CLIENTE, 0 SIN A FAVOR DE NADIE',
    FECHA DATE COMMENT 'FECHA EN LA QUE SE REGISTRA EL PEDIDO',
    PRIMARY KEY (ID_PEDIDO_DEVOL_CAMBIO)
);

-- Atributos para almacenar el costo del producto y % de comisión del vendedor al momento de la venta.
-- Héctor , 07/10/2014

ALTER TABLE SGFENS_PEDIDO_PRODUCTO 
ADD COSTO_UNITARIO DOUBLE DEFAULT 0 COMMENT 'COSTO DEL PRODUCTO EN EL MOMENTO DE LA VENTA (PRECIO DE COMPRA)',
ADD PORCENTAJE_COMISION_EMPLEADO DOUBLE DEFAULT 0 COMMENT 'PORCENTAJE DE LA COMISION';

-- Manejo fraccionario de conceptos int -> double
-- Héctor 13/10/2014
ALTER TABLE concepto MODIFY NUM_ARTICULOS_DISPONIBLES DOUBLE;
ALTER TABLE movimiento MODIFY contabilidad DOUBLE;

--Atributo para colocar las condiciones de pago en la factura.
--Leonardo Montes de Oca, 17/10/2014
ALTER TABLE COMPROBANTE_FISCAL ADD CONDICIONES_PAGO VARCHAR(100) DEFAULT '' AFTER ID_TIPO_PAGO ;

--Atributo para colocar los días de visita; para el EVC
--Leonardo Montes de Oca; 20/10/2014
ALTER TABLE CLIENTE ADD DIAS_VISITA VARCHAR(35) DEFAULT '' COMMENT 'DIAS DE LA SEMANA SEPARADOS POR COMAS EN LOS QUE SE VISITA AL CLIENTE. LUN, MAR, MIE, JUE, VIE, SAB, DOM';

-- Manejo de precios por producto
-- Héctor 21/10/2014
ALTER TABLE concepto
ADD COLUMN PRECIO_MEDIO_MAYOREO DOUBLE DEFAULT 0,
ADD COLUMN MAX_MENUDEO DOUBLE DEFAULT 0,
ADD COLUMN MIN_MEDIO_MAYOREO DOUBLE DEFAULT 0,
ADD COLUMN MAX_MEDIO_MAYOREO DOUBLE DEFAULT 0,
ADD COLUMN MIN_MAYOREO DOUBLE DEFAULT 0;

-- Se agrega el campo PERMISO_VENTA_RAPIDA a la tabla empleados, para que en el móvil se puedan identificar los empleados
-- con los permisos de ventas rápidas
-- Roberto 21/10/14

ALTER TABLE EMPLEADO
ADD PERMISO_VENTA_RAPIDA INT DEFAULT 2 COMMENT 'PERMISOS PARA VENTAS RAPIDAS, 1 SI, 2 NO';

--Se agrega el campo CANTIDAD_DEVUELTA a la tabla sgfens_pedido_devolucion_cambio, para indicar, en caso de ser devolución, la cantidad 
-- del concepto seleccionado para devolucion
-- Roberto 23/10/14

ALTER TABLE SGFENS_PEDIDO_DEVOLUCION_CAMBIO
ADD CANTIDAD_DEVUELTA DOUBLE DEFAULT 0 COMMENT 'CAMPO PARA INDICAR LA CANTIDAD DEVUELTA DEL CONCEPTO';

--Se agrega el campo NOMBRE_IMAGEN_FIRMA a la tabla SGFENS_PEDIDO, PARA GUARDAR LA RUTA DE LA IMAGEN DE LA FIRMA, DEL MODULO FURMA ELECTRONICA 
-- Roberto 24/10/14
ALTER TABLE SGFENS_PEDIDO
ADD NOMBRE_IMAGEN_FIRMA VARCHAR(250) DEFAULT NULL COMMENT 'CAMPO PARA GUARDAR LA RUTA DE LA IMAGEN DE LA FIRMA, DEL MODULO FURMA ELECTRONICA';

-- Nuevo atributo para conocer si un pedido o registros relacionados (sus productos, abonos o impuestos) fueron modificados
-- y con esto filtrar los datos a sincronizar con los moviles a traves de Web service
-- César Martínez 24/10/14
ALTER TABLE SGFENS_PEDIDO 
ADD COLUMN IS_MODIFICADO_CONSOLA SMALLINT DEFAULT '0' NOT NULL COMMENT 'Flag para indicar si el pedido o registros de tablas relacionadas, fueron creados o modificados en consola';

--Nueva tabla para las visitas de vendedores a clientes.
-- Leonardo Montes de Oca 29/10/2014
CREATE TABLE SGFENS_VISITA_CLIENTE
(
   ID_VISITA INT(10) AUTO_INCREMENT,
   ID_EMPRESA INT(10) NOT NULL,
   ID_EMPLEADO_VENDEDOR INT(10) NOT NULL,
   ID_CLIENTE INT(10),
   FECHA_HORA DATETIME,
   LATITUD DOUBLE,
   LONGITUD DOUBLE,
   ID_OPCION INT(2) COMMENT '1 LOCAL CERRADO, 2 SINDINERO, 3 AÚN CUENTA CON MERCANCIA, 4 OTRO',
   COMENTARIOS TEXT,
   PRIMARY KEY (ID_VISITA)
);

--Atrubuto para colocar un mensaje personalizado para los ticket's de visita:
ALTER TABLE EMPRESA ADD MENSAJE_PERSONALIZADO_VISITA VARCHAR(300) DEFAULT '' COMMENT 'Mensaje personalizado del cliente para la impresión de un ticket';

-- Nuevo atributo para tabla de devoluciones, para lograr sincronización
-- con móvil correcta
-- César Martínez 04/11/2014
ALTER TABLE sgfens_pedido_devolucion_cambio
 ADD COLUMN FOLIO_MOVIL VARCHAR(50) NULL COMMENT 'Folio Movil unico generado en app movil para este registro';

--  Nuevo rol Vendedor/Conductor
-- Héctor 05/11/0214
INSERT INTO ROLES (ID_ROLES,NOMBRE,DESCRIPCION,OCULTO,ID_EMPRESA,MOSTRAR_PRETORIANO) VALUES (31,'CONDUCTOR_VENDEDOR','Podra vender y entregar productos, Funciones Vendedor-Conductor',TRUE,-1,1);


-- Atributos para tabla sgfens_pedido para dato 
-- de bonificaciones por Cambios y/o devoluciones
-- César Martínez 06/11/2014
ALTER TABLE sgfens_pedido 
 ADD COLUMN BONIFICACION_DEVOLUCION DOUBLE DEFAULT '0' NULL COMMENT 'Indica la bonificacion asignada al pedido por cambios o devoluciones';



-- Atributos para tabla sgfens_pedido para asignarle el pedido a un conductor
-- Héctor 06/11/2014
ALTER TABLE sgfens_pedido 
ADD COLUMN ID_USUARIO_CONDUCTOR_ASIGNADO INT DEFAULT 0 COMMENT 'Conductor que tiene asignado el pedido actualmente',
ADD COLUMN ID_USUARIO_VENDEDOR_ASIGNADO INT DEFAULT 0 COMMENT 'Vendedor que tiene asignado el pedido actualmente';

-- Atributos para tabla sgfens_cliente_vendedor para asignarle el cliente a un conductor
-- Héctor 10/11/2014
ALTER TABLE sgfens_cliente_vendedor 
ADD COLUMN ID_USUARIO_CONDUCTOR_ASIGNADO INT DEFAULT 0 COMMENT 'Conductor que tiene asignado el cliente';

----NOTA IMPORTANTE: Es para el ordenamiento de los conceptos en base al nombre;
--Este codigo deberá existir siempre en la clase "Concepto.java" del paquete "com.tsp.sct.dao.dto"
@Override
	public int compareTo(Concepto o) {
		Concepto concepto = (Concepto)o;
		int x = 0;
		if(this.nombre.toUpperCase().compareTo(concepto.nombre.toUpperCase()) < 0){
			x = -1;
		}
		if(this.nombre.toUpperCase().compareTo(concepto.nombre.toUpperCase()) == 0){
			x = 0;
		}
		if(this.nombre.toUpperCase().compareTo(concepto.nombre.toUpperCase()) > 0){
			x = 1;
		}
		return x;
	}
--esa misma clase debera tener implementada la clase "Comparable<Concepto>", es decir, queda de la siguiente manera:
public class Concepto implements Serializable, Comparable<Concepto>

--------------------   QUERY'S QUE SE CORRERAN EN LA BASE DE DATOS DEL SISTEMA TRANSPORTISTAS
--Leonardo Montes de Oca
ALTER TABLE EMPRESA ADD ID_VENDEDOR INT (11) DEFAULT 0;
ALTER TABLE EMPRESA ADD ID_FRANQUICIATARIO INT (11) DEFAULT 0;

--------------------   QUERY'S QUE SE CORRERAN EN LA BASE DE DATOS DEL SCT / PRETORIANO
--Leonardo Montes de Oca
ALTER TABLE COMPROBANTE_FISCAL ADD CREADO_AUTOMATICAMENTE INT(1) DEFAULT 0 COMMENT '0 SI NO FUE CREADO AUTOMATICAMENTE, 1 SI FUE CREADO AUTOMATICAMENTE EN SISTEMA DE VENTAS';


-- Héctor 14-10-2014
-- Campo que indica el saldo a favor o en contra del cliente (acumulado de sus pedidos,devoluciones,cambios)
ALTER TABLE cliente
ADD COLUMN SALDO_CLIENTE DOUBLE DEFAULT 0 COMMENT 'SALDO A FAVOR DEL CLIENTE -> (POSITIVO +) , SALDO EN CONTRA DEL CLIENTE -> NEGATIVO (-)'

-- Héctor 20-11-2014
-- Registro para conceptos categoria GENERAL
INSERT INTO categoria(nombre_categoria,descripcion_categoria,id_categoria_padre,id_empresa,ID_ESTATUS)
VALUES('GENERAL','GENERAL',NULL,0,1);

-- Héctor 20-11-2014
-- Categorias adicionales para conceptos
ALTER TABLE concepto
ADD COLUMN ID_SUBCATEGORIA2 INT(10),
ADD COLUMN ID_SUBCATEGORIA3 INT(10),
ADD COLUMN ID_SUBCATEGORIA4 INT(10);}

-- Leonardo Montes de Oca; 27-11-2014
-- Tabla para la agenda de los vendedores.

CREATE TABLE EMPLEADO_AGENDA (
    ID_AGENDA INT(10) NOT NULL AUTO_INCREMENT,
    ID_EMPLEADO INT(10),
    ID_ESTATUS INT (1) COMMENT '1 ACTIVA, 2 ELIMINADA, 3 AZUL- TAREA COMPLETADA',
    FECHA_CREACION DATE COMMENT 'FECHA EN LA QUE SE CREO LA TAREA',
    FECHA_PROGRAMADA DATE COMMENT 'FECHA A REALIZAR LA TAREA',
    FECHA_EJECUCION DATE COMMENT 'FECHA EN LA QUE SE REALIZO LA TAREA',
    NOMBRE_TAREA VARCHAR(100),
    DESCRIPCION_TAREA VARCHAR(650),
    PRIMARY KEY (ID_AGENDA)
);

-- Cesar Martinez 28-11-2014
-- Nuevo método de pago para cobranza
INSERT INTO `sgfens_cobranza_metodo_pago`(`ID_COBRANZA_METODO_PAGO`,`NOMBRE_METODO_PAGO`,`DESCRIPCION_METODO_PAGO`) 
    VALUES ( '6','Bonificación','Bonificación a saldo cliente por cambios y devoluciones');

-- Hector 08-12-2014
-- Datos opcionales en tk
ALTER TABLE empresa
ADD COLUMN PRINT_RAZON_SOCIAL int(1) DEFAULT 1,
ADD COLUMN PRINT_NOMBRE_COMERCIAL int(1) DEFAULT 1;

-- Precio minimo venta
ALTER TABLE concepto
ADD COLUMN PRECIO_MINIMO_VENTA DOUBLE DEFAULT 0;

-- Hector 09-12-2014
-- Inventario inical vendedor
CREATE TABLE inventario_inicial_vendedor (
	ID_EMPLEADO INT NOT NULL,
	ID_CONCEPTO INT NOT NULL,
	CANTIDAD DOUBLE NOT NULL,	
	FECHA_REGISTRO DATETIME
);

-- Hector 10-12-2014
-- Configuraciones adicionales empresa
CREATE TABLE empresa_config(
	ID_EMPRESA INT PRIMARY KEY NOT NULL,
	DIAS_CORTE VARCHAR(35) DEFAULT "",
	HORA_CORTE TIME,
	INVENTARIO_INICIAL_AUTO INT DEFAULT 0 COMMENT '0 = inactivo 1 = activo'
);

-- Leonardo 12-12-2014
-- Tabla para la relación

CREATE TABLE SGFENS_COBRANZA_REGISTRO_DEPOSITO_BANCO(
	ID_DEPOSITO INT(11) NOT NULL AUTO_INCREMENT,
	ID_EMPRESA INT(11) NOT NULL,
	FOTO_BOUCHER VARCHAR(100) COMMENT 'NOMBRE DE LA FOTO DEL BOUCHER',
        NUM_REFERENCIA_BOUCHER VARCHAR(80) COMMENT 'NUMERO DE REFERENCIA BANCARIA DEL DEPOSITO QUE SE REALIZO DE UN CONJUNTO DE COBROS',
        MONTO DOUBLE COMMENT 'MONTO DEL DEPOSITO BANCARIO',
	LATITUD VARCHAR(35),
	LONGITUD VARCHAR(35),
	FECHA_DEPOSITO DATETIME COMMENT 'FEHCA Y HORA EN LA QUE SE REALIZO EL DEPOSITO',
	ID_VENDEDOR INT(11) COMMENT 'ID DEL VENDEDOR-EMPLEADO QUE REALIZO EL PROCESO DE DEPOSITO',
	ID_BANCO INT(11) COMMENT 'ID DEL BANCO EN EL QUE SE REALIZO EL DEPOSITO',
	PRIMARY KEY (ID_DEPOSITO)
);

-- Leonardo 12-12-2014
-- Atributo nuevo que contienen el identificador del registro del deposito bancario
ALTER TABLE SGFENS_COBRANZA_ABONO ADD ID_DEPOSITO VARCHAR(80) COMMENT 'ID DE LA TABLA SGFENS_COBRANZA_REGISTRO_DEPOSITO_BANCO QUE RELACIONA AL DEPOSITO';

-- Leonardo 12-12-2014
-- Tabla para el catalogo de bancos.
CREATE TABLE SGFENS_BANCO(
    ID_BANCO INT(11) NOT NULL AUTO_INCREMENT,
    ID_EMPRESA INT(11) NOT NULL,
    ID_ESTATUS INT(1) COMMENT '1 ACTIVA, 2 INACTIVA',
    NOMBRE_BANCO VARCHAR(100),
    NUMERO_SUCURSAL VARCHAR(20),
    NUMERO_CUENTA VARCHAR(20),
    CLABE VARCHAR(25),
    COMENTARIOS VARCHAR(250),
    PRIMARY KEY(ID_BANCO)
);


-- Héctor 15-12-2014
-- Campos para compartir clientes entre vendedores
ALTER TABLE sgfens_cliente_vendedor
ADD COLUMN ID_USUARIO_VENDEDOR_REASIGNADO INT DEFAULT 0,
ADD COLUMN FECHA_LIMITE_REASIGANCION DATETIME;

-- Héctor 17-12-2014
-- Campos para tareas de visita a clienets
ALTER TABLE empleado_agenda
ADD COLUMN ID_CLIENTE INT DEFAULT 0;

-- Héctor 19-12-2014
-- Campos para tareas de visita a clienets
ALTER TABLE cliente
ADD COLUMN PERIORICIDAD INT DEFAULT 1,
ADD COLUMN FECHA_ULTIMA_VISITA DATE;


-- Héctor 02-01-2015
-- Campos para log de moviles

CREATE TABLE historial_movil (
ID_HISTORIAL_MOVIL INT PRIMARY KEY AUTO_INCREMENT ,
ID_EMPRESA int,
IMEI VARCHAR (15),
LOCALIZACION TEXT COMMENT 'CLASE DONDE SE ENCUENTRA EL LOG',
METODO TEXT COMMENT 'METODO DONDE SE ENCUENTRA EL LOG',
DESCRIPCION TEXT COMMENT 'CONTENIDO DEL LOG',
FECHA DATETIME,
TIPO INT
);


-- Héctor 19-01-2015
-- Campo cosultas por nombre(decodificado)

ALTER TABLE concepto
ADD COLUMN NOMBRE_DESENCRIPTADO VARCHAR(1000) COMMENT 'Solo para consultas';

-- Actualiza la tabla concepto con el nombre decodificado 
-- ***Primero ejecutar script base64.sql  http://bugs.mysql.com/bug.php?id=18861
UPDATE concepto
SET NOMBRE_DESENCRIPTADO = BASE64_DECODE(NOMBRE)

--Vista pedidos con adeudos dashboard
CREATE VIEW VISTA_PEDIDOS_CON_ADEUDOS 
AS
SELECT sgfens_pedido.ID_EMPRESA,sgfens_pedido.ID_PEDIDO,sgfens_pedido.ID_ESTATUS_PEDIDO,sgfens_pedido.ID_CLIENTE,sgfens_pedido.ID_USUARIO_VENDEDOR,sgfens_pedido.FECHA_PEDIDO, sgfens_pedido.FECHA_TENTATIVA_PAGO, CASE WHEN sgfens_cobranza_abono.FECHA_ABONO IS NULL THEN sgfens_pedido.FECHA_PEDIDO ELSE sgfens_cobranza_abono.FECHA_ABONO  END AS FECHA_ULTIMO_ABONO
FROM sgfens_pedido LEFT JOIN sgfens_cobranza_abono ON sgfens_pedido.ID_PEDIDO = sgfens_cobranza_abono.ID_PEDIDO
WHERE sgfens_pedido.ID_ESTATUS_PEDIDO <> 3 AND (sgfens_pedido.TOTAL - (sgfens_pedido.SALDO_PAGADO + sgfens_pedido.ADELANTO)) > 0 


-- Héctor 21-01-2015
-- Cotizaciones
ALTER TABLE sgfens_cotizacion
ADD COLUMN ID_ESTATUS_COTIZACION SMALLINT(6) DEFAULT 1,
ADD COLUMN FOLIO_COTIZACION_MOVIL VARCHAR(30);

-- Héctor 30-01-2015
-- Recorrido de ruta para 80 ubicacciones
ALTER TABLE ruta
MODIFY  RECORRIDO_RUTA MEDIUMTEXT NOT NULL;

-- Héctor 30-01-2015
-- Tipo de ruta de cobranza
INSERT  INTO tipo_ruta
VALUES (5,'Ruta por Cobranza')

-- Héctor 04-02-2015
-- Cotizaciones
ALTER TABLE sgfens_cotizacion
ADD COLUMN IS_MODIFICADO_CONSOLA SMALLINT(6) DEFAULT 0;

-- Héctor 04-02-2015
-- Cotizaciones
ALTER TABLE sgfens_cotizacion
ADD COLUMN LATITUD DOUBLE NOT NULL DEFAULT 0,
ADD COLUMN LONGITUD DOUBLE NOT NULL DEFAULT 0;

-- Héctor 10-02-2015
-- Entregas parciales pedidos
INSERT INTO sgfens_estatus_pedido
VALUES(4,"ENTREGADO PARCIAL","Pedido entregado Parcialmente");

ALTER TABLE sgfens_pedido_producto
ADD COLUMN CANTIDAD_ENTREGADA DOUBLE DEFAULT 0,
ADD COLUMN FECHA_ENTREGA DATETIME,
ADD COLUMN ESTATUS SMALLINT DEFAULT 0 COMMENT "1 = ENTREGADO TOTAL, 2 = PENDIENTE POR ENTREGAR";


-- parametros envio de correo desde movilpyme
-- Héctor 19-02-2015
INSERT INTO parametros VALUES
(66,"app.mail.server.movilpyme","mail.movilpyme.com"),
(67,"app.mail.port.movilpyme","26"),
(68,"app.mail.from.movilpyme","notifica@movilpyme.com"),
(69,"app.mail.user.movilpyme","notifica@movilpyme.com"),
(70,"app.mail.password.movilpyme","Tsp123#");

--rutas para guardar imagen/video de producto, y campo para descripción detallada de caracteristicas del mismo
--Roberto 24-02-2015
ALTER TABLE concepto 
ADD COLUMN RUTA_IMAGEN TEXT,
ADD COLUMN RUTA_VIDEO TEXT,
ADD COLUMN CARACTERISTISCAS TEXT;

INSERT INTO ROLES (ID_ROLES,NOMBRE,DESCRIPCION,OCULTO,ID_EMPRESA,MOSTRAR_PRETORIANO) VALUES (32,'COBRADOR','Permisos de solo Cobrar',true,-1,1);

-- Campos para compartir pedidos entre vendedores
-- Leonardo Montes de Oca, 17-03-2015
ALTER TABLE sgfens_pedido
ADD COLUMN ID_USUARIO_VENDEDOR_REASIGNADO INT DEFAULT 0 COMMENT 'Vendedor que tiene re-asignado el pedido',
ADD COLUMN FECHA_LIMITE_REASIGANCION DATE DEFAULT NULL COMMENT 'Fecha limite en la que el vendedor del campo ID_USUARIO_VENDEDOR_REASIGNADO tiene re-asignado el pedido';

-- Atributo para la autorización de créditos de emergencia para las empresas que se quedan sin créditos:
-- Leonardo Montes de Oca, 02/03/2015
ALTER TABLE EMPRESA_PERMISO_APLICACION ADD ACCESO_CREDITOS_EMERGENCIA INT(1) DEFAULT 1 COMMENT 'PERMISO DE CREDITOS DE EMERGENCIA; 0 SIN PERMISO, 1 PERMITIDO';

--Atributo para identificar los créditos de emergencia que va consumiendo el usuario y que no ha pagado:
-- Leonardo Montes de Oca, 02/03/2015
ALTER TABLE EMPRESA_PERMISO_APLICACION ADD CREDITOS_EMERGENCIA_X_PAGAR INT(10) DEFAULT 0 COMMENT 'CREDITOS DE EMERGENCIA QUE HA CONSUMIDO EL CLIENTE Y QUE AUN NO PAGA';

--Tabla que lleva el historial de créditos consumidos de emergencia.
-- Leonardo Montes de Oca, 02/03/2015
CREATE TABLE EMERGENCIA_CREDITO (
    ID_EMERGENCIA INT(10) NOT NULL AUTO_INCREMENT,
    ID_EMPRESA INT(10) NOT NULL COMMENT 'ID DE LA EMPRESA PADRE QUE UTILIZO ESTOS CREDITOS DE EMERGENCIA',
    RFC_EMPRESA VARCHAR(13) DEFAULT '' COMMENT 'RFC DE LA EMPRESA QUE UTILIZA EL PAQUETE DE EMERGENCIA',
    FECHA_INICIO DATETIME COMMENT 'FECHA DE CUANDO EMPEZO A UTILIZAR ESTE PAQUETE DE CREDITOS DE EMERGENCIA',
    FECHA_PAGO DATETIME COMMENT 'FECHA DE CUANDO SE REALIZO EL CORTE Y EL CLIENTE PAGO DICHO PAQUETE',    
    MONTO_PAGADO DOUBLE DEFAULT 0,
    CREDITOS_OCUPADOS INT(10) DEFAULT 0 COMMENT 'NUMERO DE CREDITOS QUE SE OCUPARON, ESTE VALOR SE ACTUALIZA AL PAGAR EL PAQUETE',
    PRIMARY KEY(ID_EMERGENCIA)
);

--Tabla que contiene la info de los comprobantes realizados para los paquetes de la tabla EMERGENCIA_CREDITO
CREATE TABLE EMERGENCIA_CREDITO_FACTURA_REALIZADA(
    ID_EMERGENCIA_CREDITO_FACTURA_REALIZADA INT(10) NOT NULL AUTO_INCREMENT,
    ID_EMERGENCIA INT(10) COMMENT 'ID DE LA TABLA EMERGENCIA_CREDITO QUE SE RELACIONA AL PAQUETE DE EMEREGENCIA QUE SE UTILIZO',
    FECHA DATETIME COMMENT 'FECHA DE CUANDO SE UTILLIZO EL CREDITO',
    ID_EMPRESA INT(10) NOT NULL COMMENT 'ID DE LA EMPRESA PADRE QUE UTILIZO EL CREDITO DE EMERGENCIA',    
    RFC_EMISOR VARCHAR(13),
    ID_CLIENTE_RECEPTOR INT(10),
    RFC_RECEPTOR VARCHAR(13),
    MONTO_FACTURA DOUBLE,
    UUID VARCHAR(44),
    ID_ESTATUS INT(1) COMMENT '1 ACTIVO, 2 CANCELADO; ESTATUS DEL COMPROBANTE, ESTO PARA POR SI NO PAGAN PODER CANCELAR LAS FACTURAS',
    PRIMARY KEY(ID_EMERGENCIA_CREDITO_FACTURA_REALIZADA)
);

-->>>>>>>>>>>>>Tablas para interconexion Pretoriano-SAR<<<<<<<<<<<<
-- Cesar Martinez 18/03/2015
CREATE TABLE SAR_USUARIO_PROVEEDOR (
    ID_SAR_USUARIO INT PRIMARY KEY AUTO_INCREMENT COMMENT 'LLAVE PRIMARIA AUTOINCREMENTABLE',
    ID_EMPRESA INT NOT NULL COMMENT 'ID DE EMPRESA PRETORIANO SCT',
    EXT_SAR_ID_USUARIO INT NOT NULL COMMENT 'ID DE USUARIO EN SISTEMA SAR', 
    EXT_SAR_USUARIO VARCHAR (100) NOT NULL COMMENT 'NOMBRE DE USUARIO EN SISTEMA SAR',
    EXT_SAR_PASS VARCHAR (100) NOT NULL COMMENT 'PASSWORD DE USUARIO EN SISTEMA SAR',
    EXT_SAR_ID_PROVEEDOR INT NOT NULL COMMENT 'ID DE PROVEEDOR EN SISTEMA SAR',
    EXT_SAR_RFC_PROVEEDOR VARCHAR(13) NOT NULL COMMENT 'RFC DE PROVEEDOR EN SISTEMA SAR',
    ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 ACTIVO, 2 INACTIVO'
);

CREATE TABLE SAR_CLIENTE_ENTREGA (
    ID_SAR_USUARIO INT PRIMARY KEY COMMENT 'ID UNICO HEREDADO DE TABLA SAR_USUARIO_PROVEEDOR',
    EXT_SAR_ID_CLIENTE INT NOT NULL COMMENT 'ID DE CLIENTE RECEPTOR EN SISTEMA SAR',
    EXT_SAR_RFC VARCHAR(13) NOT NULL COMMENT 'RFC DEL CLIENTE RECEPTOR EN SISTEMA SAR',
    EXT_SAR_RAZON_SOCIAL VARCHAR(100) COMMENT 'RAZON SOCIAL DE CLIENTE RECEPTOR EN SISTEMA SAR',
    EXT_SAR_RELACION_CODPROV_AREA INT(1) DEFAULT 0 NOT NULL COMMENT 'SE DEBE RELACIONAR UN COD PROVEEDOR POR AREA, 0= NO, 1=SI'
);

CREATE TABLE SAR_AREA_ENTREGA (
    ID_SAR_AREA_ENTREGA INT PRIMARY KEY AUTO_INCREMENT COMMENT 'LLAVE PRIMARIA AUTOINCREMENTABLE',
    ID_SAR_USUARIO INT NOT NULL COMMENT 'ID HEREDADO DE TABLA SAR_USUARIO_PROVEEDOR',
    EXT_SAR_ID_AREA INT NOT NULL COMMENT 'ID DE AREA EN SISTEMA SAR',
    EXT_SAR_NOMBRE VARCHAR(100) NOT NULL COMMENT 'NOMBRE DE AREA EN SISTEMA SAR',
    EXT_SAR_CODPROV_AREA VARCHAR(50) COMMENT 'CODIGO DE PROVEEDOR ASOCIADO AL AREA EN SISTEMA SAR',
    ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 ACTIVO, 2 INACTIVO',
    ID_CLIENTE INT COMMENT 'ID DE CLIENTE LOCAL QUE SE RELACIONA AL AREA'
);

CREATE TABLE SAR_CAMPOS_ADICIONALES (
    ID_SAR_USUARIO INT PRIMARY KEY COMMENT 'ID HEREDADO DE TABLA SAR_USUARIO_PROVEEDOR',
    EXT_REQ_ORDEN_COMPRA INT(1) DEFAULT 0 NOT NULL COMMENT 'REQUIERE ORDEN DE COMPRA, 0 = NO, 1 = SI'
);

CREATE TABLE SAR_COMPROBANTE (
    ID_COMPROBANTE_FISCAL INT PRIMARY KEY COMMENT 'ID UNICO HEREDADO DE TABLA COMPROBANTE_FISCAL',
    ID_SAR_USUARIO INT NOT NULL COMMENT 'ID HEREDADO DE TABLA SAR_USUARIO_PROVEEDOR',
    ID_SAR_AREA_ENTREGA INT DEFAULT 0 COMMENT 'ID HEREDADO DE TABLA SAR_AREA_ENTREGA',
    EXT_SAR_ID_FACTURA INT DEFAULT 0 COMMENT 'ID DE FACTURA EN SISTEMA SAR, SOLO EN CASO DE HABER SIDO ENTREGADO CORRECTO',
    EXT_SAR_ID_ESTATUS INT DEFAULT 0 COMMENT 'ID DE ESTATUS EN SISTEMA SAR',
    EXT_SAR_DESC_ESTATUS VARCHAR(100) COMMENT 'DESCRIPCIÓN DE ESTATUS EN SISTEMA SAR',
    EXT_SAR_ULTIMO_COMENTARIO TEXT COMMENT 'ULTIMO COMENTARIO EN SISTEMA SAR',
    NOMBRE_ARCHIVO_ACUSE VARCHAR(200) COMMENT 'NOMBRE DE ARCHIVO EN REPOSITORIO LOCAL, DEL ACUSE DE SAR',
    ORDEN_COMPRA VARCHAR(100) NULL COMMENT 'ORDEN DE COMPRA ASIGNADO AL COMPROBANTE, OPCIONAL'
);

CREATE TABLE SAR_COMPROBANTE_ADJUNTO (
    ID_SAR_COMPROBANTE_ADJUNTO INT PRIMARY KEY AUTO_INCREMENT COMMENT 'LLAVE PRIMARIA AUTOINCREMENTABLE',
    ID_COMPROBANTE_FISCAL INT NOT NULL COMMENT 'ID HEREDADO DE TABLA COMPROBANTE_FISCAL',
    NOMBRE_ARCHIVO VARCHAR(200) COMMENT 'NOMBRE DE ARCHIVO EN REPOSITORIO LOCAL'
);

ALTER TABLE EMPRESA_PERMISO_APLICACION ADD ACCESO_MODULO_SAR INT(1) DEFAULT 0 COMMENT 'PERMISO DE ACCESO A MODULO INTERCONEXION SAR; 0 SIN PERMISO, 1 PERMITIDO';
-->>>>>>>>>>>>>FIN DE TABLAS para interconexion Pretoriano-SAR<<<<<<<<<<<<

-->>>>>>>>>>>> TABLAS MODULO C x C <<<<<<<<<<<<<<<<<<<<<<<<
----- Cesar Martinez 06-04-2015
CREATE TABLE CXP_VALE_AZUL (
    ID_CXP_VALE_AZUL INT PRIMARY KEY AUTO_INCREMENT COMMENT 'LLAVE PRIMARIA AUTOINCREMENTABLE',
    ID_EMPRESA INT NOT NULL COMMENT 'ID DE EMPRESA PRETORIANO SCT',
    ID_FOLIO INT COMMENT 'ID HEREDADO DE TABLA FOLIOS',
    FOLIO_GENERADO VARCHAR(50) COMMENT 'FOLIO ALFANUMERICO ASIGNADO AL VALE',
    IMPORTE DOUBLE NOT NULL DEFAULT 0 COMMENT 'IMPORTE TOTAL DEL COMPROBANTE NO FISCAL',
    IMPORTE_PAGADO DOUBLE NOT NULL DEFAULT 0 COMMENT 'IMPORTE PAGADO',
    CONCEPTO VARCHAR(500) COMMENT 'CONCEPTO O DESCRIPCION DEL COMPROBANTE',
    FECHA_HORA_CAPTURA DATETIME COMMENT 'FECHA Y HORA DE REGISTRO DEL COMPROBANTE',
    FECHA_HORA_CONTROL DATETIME COMMENT 'DATO DE CONTROL FECHA Y HORA DE UN VALE AZUL CONVENCIONAL',
    FECHA_TENTATIVA_PAGO DATETIME COMMENT 'FECHA Y HORA TENTATIVA DE PAGO',
    ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 ACTIVO, 2 INACTIVO'
);

CREATE TABLE CXC_NOTA (
    ID_CXC_NOTA INT PRIMARY KEY AUTO_INCREMENT COMMENT 'LLAVE PRIMARIA AUTOINCREMENTABLE',
    ID_EMPRESA INT NOT NULL COMMENT 'ID DE EMPRESA PRETORIANO SCT',
    ID_USUARIO INT NOT NULL COMMENT 'ID DEL USUARIO QUE REGISTRO LA NOTA',
    ID_COMPROBANTE_FISCAL INT COMMENT 'ID HEREDADO DE TABLA COMPROBANTE_FISCAL, OPCIONAL',
    ID_PEDIDO INT COMMENT 'ID HEREDADO DE LA TABLA SGFENS_PEDIDO, OPCIONAL',
    ID_CXP_VALE_AZUL INT COMMENT 'ID HEREDADO DE TABLA CXP_VALE_AZUL, OPCIONAL',
    NOTA VARCHAR(500) NOT NULL COMMENT 'COMENTARIO O NOTA REALIZADO',
    FECHA_HORA_CAPTURA DATETIME COMMENT 'FECHA Y HORA DE REGISTRO DE LA NOTA',
    ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 ACTIVO, 2 INACTIVO'
);

----- Cesar Martinez 08/04/2015
ALTER TABLE SAR_COMPROBANTE_ADJUNTO MODIFY ID_COMPROBANTE_FISCAL INT COMMENT 'ID HEREDADO DE TABLA COMPROBANTE_FISCAL, OPCIONAL';
ALTER TABLE SAR_COMPROBANTE_ADJUNTO ADD ID_PEDIDO INT COMMENT 'ID HEREDADO DE LA TABLA SGFENS_PEDIDO, OPCIONAL';
ALTER TABLE SAR_COMPROBANTE_ADJUNTO ADD ID_CXP_VALE_AZUL INT COMMENT 'ID HEREDADO DE TABLA CXP_VALE_AZUL, OPCIONAL';
-->>>>>>>>>>>> FIN TABLAS MODULO C x C <<<<<<<<<<<<<<<<<<<<<<<<


--TABLA PARA EL CONTROL DE EMPLEADOS ASIGNADOS A OTROS EMPLEADOS (VENDEDORES ASIGNADOS A COBRADORES, VENDEDORES ASIGNADOS A CONDUCTORES).
-- Leonardo Montes de Oca 13/04/2015
CREATE TABLE SGFENS_ASIGNACION_EMPLEADOS(
    ID_ASIGNACION INT(11) NOT NULL AUTO_INCREMENT,
    ID_USUARIO_EMPLEADO INT(11) NOT NULL COMMENT 'ID DEL EMPLEADO AL QUE SE LE ASIGNA OTRO EMPLEADO',
    ID_USUARIO_EMPLEADO_ASIGNADO INT(1) COMMENT 'ID DEL EMPLEADO ASIGNADO',
    ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 ACTIVA LA ASIGNACION, 2 DESACTIVA LA ASIGNACION',
    FECHA_LIMITE_ASIGANCION DATE DEFAULT NULL COMMENT 'FECHA LIMITE EN LA QUE SE ASIGNA EL EMPLEADO',    
    PRIMARY KEY(ID_ASIGNACION)
);

--Atributos adicionales para la comision hacia los vendedores de los conceptos/productos, se maneja ya sea porcentaje o cantidad a descontar
-- Leonardo Montes de Oca, 15/04/2015
ALTER TABLE CONCEPTO ADD COMISION_PORCENTAJE DOUBLE DEFAULT 0 COMMENT 'PORCENTAJE DE COMISION, YA SEA QUE SE COLOQUE ESTE ATRIBUTO O EL DE COMISION_MONTO';
ALTER TABLE CONCEPTO ADD COMISION_MONTO DOUBLE DEFAULT 0 COMMENT 'MONTO DE COMISION, YA SEA QUE SE COLOQUE ESTE ATRIBUTO O EL DE COMISION_PORCENTAJE';

--Atrubito para microsip; para la actualización entre el sistema EVC y microsip. 
-- Leonardo Montes de OCa, 20/04/2015
ALTER TABLE CLIENTE ADD SINCRONIZACION_MICROSIP INT(1) DEFAULT 0 COMMENT 'ACTUALIZADO CON MICROSIP, 0 NUEVO, 1 SINCRONIZADO, 2 EDITADO Y FALTA SINCRONIZACION';

--Tabla que tiene las relaciones de los ID's correspondientes entre los sistemas de EVC - Microsip
CREATE TABLE QUARTZ_CLIENTE(
    ID_QUARTZ INT(11) NOT NULL AUTO_INCREMENT,
    ID_CLIENTE_EVC INT(11) COMMENT 'ID DEL CLIENTE EN EL SISTEMA DEL EVC',
    ID_CLIENTE_SISTEM_TERCERO INT(11) DEFAULT 0 COMMENT 'ID DE CLIENTE DEL SISTEMA TERCERO, 0 SI MANEJA EL ATRIBUTO DE CLAVE',
    CLAVE VARCHAR(50) DEFAULT NULL COMMENT 'SI EL SISTEMA TERCERO NO MANEJAN IDs Y SE UTILIZA VARCHAR PARA IDENTIFICARLO SE OCUPA ESTE ATRIBUTO',
    ID_SISTEMA_TERCERO INT(2) DEFAULT 1 COMMENT 'SISTEMAS TERCEROS; 1 MICROSIP, ',
    PRIMARY KEY(ID_QUARTZ)
);
--Tabla que contiene los tipos de sistemas integrados al evc
CREATE TABLE QUARTZ_SISTEMA_TERCERO(
    ID_SISTEMA INT(4) NOT NULL AUTO_INCREMENT COMMENT 'IDENTIFICADOR SISTEMA TERCERO',
    DESCRIPCION VARCHAR(250) DEFAULT '',
    PRIMARY KEY(ID_SISTEMA)
);

INSERT INTO QUARTZ_SISTEMA_TERCERO VALUES(1, 'SISTEMA MICROSIP');

----- Cesar Martinez 14-04-2015
CREATE TABLE CXP_COMPROBANTE_FISCAL (
    ID_CXP_COMPROBANTE_FISCAL INT PRIMARY KEY AUTO_INCREMENT COMMENT 'LLAVE PRIMARIA AUTOINCREMENTABLE',
    ID_EMPRESA INT NOT NULL COMMENT 'ID DE EMPRESA PRETORIANO SCT',
    ID_VALIDACION INT NOT NULL COMMENT 'ID HEREDADO DE UNA VALIDACION PREVIA DEL XML',
    EMISOR_RFC VARCHAR(13) COMMENT 'RFC DEL EMISOR DEL COMPROBANTE',
    EMISOR_NOMBRE VARCHAR(200) COMMENT 'NOMBRE O RAZON SOCIAL DEL EMISOR DEL COMPROBANTE',
    SERIE VARCHAR(50) COMMENT 'SERIE EXPRESADA EN EL COMPROBANTE',
    FOLIO VARCHAR(50) COMMENT 'FOLIO EXPRESADO EN EL COMPROBANTE',
    TOTAL DOUBLE NOT NULL DEFAULT 0 COMMENT 'IMPORTE TOTAL DEL COMPROBANTE FISCAL',
    IMPORTE_PAGADO DOUBLE NOT NULL DEFAULT 0 COMMENT 'IMPORTE PAGADO DEL TOTAL',
    FECHA_HORA_CAPTURA DATETIME COMMENT 'FECHA Y HORA DE REGISTRO DEL COMPROBANTE EN EL SISTEMA',
    FECHA_HORA_SELLO DATETIME COMMENT 'FECHA Y HORA DE SELLO DE EMISOR DEL COMPROBANTE',
    FECHA_TENTATIVA_PAGO DATETIME COMMENT 'FECHA TENTATIVA DE PAGO',
    SELLO_EMISOR VARCHAR(1000) COMMENT 'SELLO DIGITAL DE EMISOR',
    CFDI_UUID VARCHAR(40) COMMENT 'FOLIO FISCAL DE COMPROBANTE CFDI',
    ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 ACTIVO, 2 INACTIVO'
);

ALTER TABLE SAR_COMPROBANTE_ADJUNTO ADD ID_CXP_COMPROBANTE_FISCAL INT COMMENT 'ID HEREDADO DE TABLA CXP_COMPROBANTE_FISCAL, OPCIONAL';
ALTER TABLE CXC_NOTA ADD ID_CXP_COMPROBANTE_FISCAL INT COMMENT 'ID HEREDADO DE TABLA CXP_COMPROBANTE_FISCAL, OPCIONAL';
-->>>>>>>>>>>> FIN TABLAS MODULO C x P <<<<<<<<<<<<<<<<<<<<<<<<

--Vista Auxiliar CxP
-- Cesar Martinez 22/04/2015
/*
CREATE VIEW vista_cxp AS
SELECT cf.ID_CXP_COMPROBANTE_FISCAL,cf.ID_EMPRESA 'cf_id_empresa' ,cf.ID_VALIDACION,cf.EMISOR_RFC,cf.EMISOR_NOMBRE,cf.SERIE,cf.FOLIO,cf.TOTAL,cf.IMPORTE_PAGADO 'cf_importe_pagado',cf.FECHA_HORA_CAPTURA 'cf_fecha_hora_captura',cf.FECHA_HORA_SELLO,cf.FECHA_TENTATIVA_PAGO 'cf_fecha_tentativa_pago',cf.SELLO_EMISOR,cf.CFDI_UUID,cf.ID_ESTATUS 'cf_id_estatus',
     v.*
     FROM cxp_comprobante_fiscal AS cf
     LEFT JOIN cxp_vale_azul AS v ON v.ID_CXP_VALE_AZUL IS NULL
UNION ALL
SELECT *
     FROM cxp_comprobante_fiscal
     RIGHT JOIN cxp_vale_azul ON cxp_comprobante_fiscal.ID_CXP_COMPROBANTE_FISCAL IS NULL
     WHERE cxp_comprobante_fiscal.ID_CXP_COMPROBANTE_FISCAL IS NULL
*/
--Para versiones mas actuales de MySQL
-- 11-05-2015
CREATE VIEW vista_cxp AS
SELECT cf.ID_CXP_COMPROBANTE_FISCAL,cf.ID_EMPRESA AS 'cf_id_empresa' ,cf.ID_VALIDACION,cf.EMISOR_RFC,cf.EMISOR_NOMBRE,cf.SERIE,
	cf.FOLIO,cf.TOTAL,cf.IMPORTE_PAGADO AS 'cf_importe_pagado',cf.FECHA_HORA_CAPTURA AS 'cf_fecha_hora_captura',
	cf.FECHA_HORA_SELLO,cf.FECHA_TENTATIVA_PAGO AS 'cf_fecha_tentativa_pago',cf.SELLO_EMISOR,cf.CFDI_UUID,
	cf.ID_ESTATUS AS 'cf_id_estatus',
     v.*
     FROM cxp_comprobante_fiscal AS cf
     LEFT JOIN cxp_vale_azul AS v ON v.ID_CXP_VALE_AZUL IS NULL
UNION ALL
SELECT cf2.ID_CXP_COMPROBANTE_FISCAL,cf2.ID_EMPRESA AS 'cf_id_empresa' ,cf2.ID_VALIDACION,cf2.EMISOR_RFC,cf2.EMISOR_NOMBRE,cf2.SERIE,
	cf2.FOLIO,cf2.TOTAL,cf2.IMPORTE_PAGADO AS 'cf_importe_pagado',cf2.FECHA_HORA_CAPTURA AS 'cf_fecha_hora_captura',
	cf2.FECHA_HORA_SELLO,cf2.FECHA_TENTATIVA_PAGO AS 'cf_fecha_tentativa_pago',cf2.SELLO_EMISOR,cf2.CFDI_UUID,
	cf2.ID_ESTATUS AS 'cf_id_estatus',
	cxp_vale_azul.*
     FROM cxp_comprobante_fiscal AS cf2
     RIGHT JOIN cxp_vale_azul ON cf2.ID_CXP_COMPROBANTE_FISCAL IS NULL
     WHERE cf2.ID_CXP_COMPROBANTE_FISCAL IS NULL
     

--Vista Auxiliar CxC
-- Cesar Martinez 22/04/2015
/*
CREATE VIEW vista_cxc AS
SELECT c.ID_COMPROBANTE_FISCAL AS 'C_ID_COMPROBANTE_FISCAL', c.ID_TIPO_COMPROBANTE, c.ID_EMPRESA AS 'C_ID_EMPRESA', c.ID_CLIENTE AS 'C_ID_CLIENTE', c.ID_ESTATUS AS 'C_ID_ESTATUS', c.ID_FOLIO, c.ID_FORMA_PAGO, c.ID_TIPO_PAGO, c.CONDICIONES_PAGO, c.FOLIO_GENERADO, c.FECHA_IMPRESION, c.FECHA_CAPTURA, c.FECHA_PAGO, c.IMPORTE_SUBTOTAL, c.IMPUESTOS, c.IMPORTE_NETO, c.PARCIALIDAD, c.CONCEPTO, c.ARCHIVO_CFD, c.CADENA_ORIGINAL, c.SELLO_DIGITAL, c.COMENTARIOS AS 'C_COMENTARIOS', c.ID_DIVISAS, c.ID_TIPO_MONEDA, c.TIPO_DE_CAMBIO, c.UUID, c.SELLO_SAT, c.ACUSE_CANCELACION, c.DESCUENTO, c.MOTIVO_DESCUENTO, c.FECHA_VIGENCIA, c.SECOFI, c.NUMERO_FACTURA, c.NO_CERTIFICADO_SAT, c.ID_PRODUCTOR, c.UNIDAD, c.FECHA_TIMBRADO, c.CREADO_AUTOMATICAMENTE, p.*
FROM comprobante_fiscal AS c
    LEFT JOIN sgfens_pedido  AS p ON c.ID_COMPROBANTE_FISCAL = p.ID_COMPROBANTE_FISCAL
UNION ALL
SELECT *
FROM comprobante_fiscal AS c
    RIGHT JOIN sgfens_pedido AS p ON c.ID_COMPROBANTE_FISCAL = p.ID_COMPROBANTE_FISCAL
WHERE c.ID_COMPROBANTE_FISCAL IS NULL
*/
-- //Para versiones mas actuales de MySQL
-- 11-05-2015
CREATE VIEW vista_cxc AS
SELECT c.ID_COMPROBANTE_FISCAL AS 'C_ID_COMPROBANTE_FISCAL', c.ID_TIPO_COMPROBANTE, c.ID_EMPRESA AS 'C_ID_EMPRESA', 
	c.ID_CLIENTE AS 'C_ID_CLIENTE', c.ID_ESTATUS AS 'C_ID_ESTATUS', c.ID_FOLIO, c.ID_FORMA_PAGO, c.ID_TIPO_PAGO, 
	c.CONDICIONES_PAGO, c.FOLIO_GENERADO, c.FECHA_IMPRESION, c.FECHA_CAPTURA, c.FECHA_PAGO, c.IMPORTE_SUBTOTAL, 
	c.IMPUESTOS, c.IMPORTE_NETO, c.PARCIALIDAD, c.CONCEPTO, c.ARCHIVO_CFD, c.CADENA_ORIGINAL, c.SELLO_DIGITAL, 
	c.COMENTARIOS AS 'C_COMENTARIOS', c.ID_DIVISAS, c.ID_TIPO_MONEDA, c.TIPO_DE_CAMBIO, c.UUID, c.SELLO_SAT, 
	c.ACUSE_CANCELACION, c.DESCUENTO, c.MOTIVO_DESCUENTO, c.FECHA_VIGENCIA, c.SECOFI, c.NUMERO_FACTURA, 
	c.NO_CERTIFICADO_SAT, c.ID_PRODUCTOR, c.UNIDAD, c.FECHA_TIMBRADO, c.CREADO_AUTOMATICAMENTE, 
	p.*
FROM comprobante_fiscal AS c
    LEFT JOIN sgfens_pedido  AS p ON c.ID_COMPROBANTE_FISCAL = p.ID_COMPROBANTE_FISCAL
UNION ALL
SELECT c2.ID_COMPROBANTE_FISCAL AS 'C_ID_COMPROBANTE_FISCAL', c2.ID_TIPO_COMPROBANTE, c2.ID_EMPRESA AS 'C_ID_EMPRESA', 
	c2.ID_CLIENTE AS 'C_ID_CLIENTE', c2.ID_ESTATUS AS 'C_ID_ESTATUS', c2.ID_FOLIO, c2.ID_FORMA_PAGO, c2.ID_TIPO_PAGO, 
	c2.CONDICIONES_PAGO, c2.FOLIO_GENERADO, c2.FECHA_IMPRESION, c2.FECHA_CAPTURA, c2.FECHA_PAGO, c2.IMPORTE_SUBTOTAL, 
	c2.IMPUESTOS, c2.IMPORTE_NETO, c2.PARCIALIDAD, c2.CONCEPTO, c2.ARCHIVO_CFD, c2.CADENA_ORIGINAL, c2.SELLO_DIGITAL, 
	c2.COMENTARIOS AS 'C_COMENTARIOS', c2.ID_DIVISAS, c2.ID_TIPO_MONEDA, c2.TIPO_DE_CAMBIO, c2.UUID, c2.SELLO_SAT, 
	c2.ACUSE_CANCELACION, c2.DESCUENTO, c2.MOTIVO_DESCUENTO, c2.FECHA_VIGENCIA, c2.SECOFI, c2.NUMERO_FACTURA, 
	c2.NO_CERTIFICADO_SAT, c2.ID_PRODUCTOR, c2.UNIDAD, c2.FECHA_TIMBRADO, c2.CREADO_AUTOMATICAMENTE, 
	p2.*
FROM comprobante_fiscal AS c2
    RIGHT JOIN sgfens_pedido AS p2 ON c2.ID_COMPROBANTE_FISCAL = p2.ID_COMPROBANTE_FISCAL
WHERE c2.ID_COMPROBANTE_FISCAL IS NULL

-----Cambio para roles
-- Héctor 24-04-2015
UPDATE empleado
SET ID_MOVIL_EMPLEADO_ROL = 31
WHERE ID_MOVIL_EMPLEADO_ROL = 25

UPDATE usuarios
SET ID_ROLES = 31
WHERE ID_ROLES = 25

---- Vistas auxiliares adicionales de CxC y CxP para dashboard
-- Cesar Martinez 24/04/2015
CREATE VIEW vista_cobro_tentativo AS
SELECT IF(cxc.ID_PEDIDO>0, cxc.ID_EMPRESA, cxc.C_ID_EMPRESA) AS cxc_id_empresa, SUM(IF(cxc.ID_PEDIDO>0, cxc.TOTAL, cxc.IMPORTE_NETO)) AS cobrar, DAYOFMONTH(IF(cxc.ID_PEDIDO>0, cxc.FECHA_TENTATIVA_PAGO, cxc.FECHA_PAGO)) Dia, MONTH(IF(cxc.ID_PEDIDO>0, cxc.FECHA_TENTATIVA_PAGO, cxc.FECHA_PAGO)) AS Mes, YEAR(IF(cxc.ID_PEDIDO>0, cxc.FECHA_TENTATIVA_PAGO, cxc.FECHA_PAGO)) AS Anio,
     STR_TO_DATE(
          CONCAT(DAYOFMONTH(IF(cxc.ID_PEDIDO>0, cxc.FECHA_TENTATIVA_PAGO, cxc.FECHA_PAGO)),
               '/',MONTH(IF(cxc.ID_PEDIDO>0, cxc.FECHA_TENTATIVA_PAGO, cxc.FECHA_PAGO)),
               '/',YEAR(IF(cxc.ID_PEDIDO>0, cxc.FECHA_TENTATIVA_PAGO, cxc.FECHA_PAGO))), '%d/%m/%Y') AS fecha
FROM vista_cxc AS cxc 
GROUP BY cxc_id_empresa, Dia, Mes, Anio
ORDER BY cxc_id_empresa, Anio, Mes, Dia

CREATE VIEW vista_pago_tentativo AS
SELECT IF(cxp.ID_CXP_COMPROBANTE_FISCAL>0, cxp.cf_id_empresa,cxp.ID_EMPRESA) AS cxp_id_empresa, SUM(IF(cxp.ID_CXP_COMPROBANTE_FISCAL>0, cxp.TOTAL,cxp.IMPORTE)) pagar, DAYOFMONTH(IF(cxp.ID_CXP_COMPROBANTE_FISCAL>0, cxp.cf_fecha_tentativa_pago, cxp.FECHA_TENTATIVA_PAGO)) AS Dia, MONTH(IF(cxp.ID_CXP_COMPROBANTE_FISCAL>0, cxp.cf_fecha_tentativa_pago, cxp.FECHA_TENTATIVA_PAGO)) AS Mes, YEAR(IF(cxp.ID_CXP_COMPROBANTE_FISCAL>0, cxp.cf_fecha_tentativa_pago, cxp.FECHA_TENTATIVA_PAGO)) AS Anio,
     STR_TO_DATE(
          CONCAT(DAYOFMONTH(IF(cxp.ID_CXP_COMPROBANTE_FISCAL>0, cxp.cf_fecha_tentativa_pago, cxp.FECHA_TENTATIVA_PAGO)),
               '/',MONTH(IF(cxp.ID_CXP_COMPROBANTE_FISCAL>0, cxp.cf_fecha_tentativa_pago,cxp.FECHA_TENTATIVA_PAGO)),
               '/',YEAR(IF(cxp.ID_CXP_COMPROBANTE_FISCAL>0, cxp.cf_fecha_tentativa_pago, cxp.FECHA_TENTATIVA_PAGO))), '%d/%m/%Y') AS fecha
FROM vista_cxp AS cxp
GROUP BY cxp_id_empresa, Dia, Mes, Anio
ORDER BY cxp_id_empresa, Anio, Mes, Dia


-- ACtualización para icono color
-- Héctor 27-04-2015
UPDATE empleado
SET ID_ESTADO = 2;

-- Modulo - Uso de Creditos de Operaciones
ALTER TABLE empresa 
    ADD COLUMN CREDITOS_OPERACION INT DEFAULT '0' NULL COMMENT 'Cantidad de Creditos de Operacion disponibles, sustituyen a los creditos de Validacion XML';

ALTER TABLE empresa_permiso_aplicacion 
    ADD COLUMN TIPO_CONSUMO_SERVICIO INT(1) DEFAULT '0' NULL COMMENT 'Tipo de Servicio de Consumo, 0=PostPago normal, 1=PrePago Creditos de Consumo';

CREATE TABLE BITACORA_CREDITOS_OPERACION (
    ID_BITACORA_CREDITOS_OPERACION INT PRIMARY KEY AUTO_INCREMENT COMMENT 'LLAVE PRIMARIA AUTOINCREMENTABLE',
    ID_EMPRESA INT NOT NULL COMMENT 'ID DE EMPRESA PRETORIANO SCT',
    ID_ESTATUS INT(1) NOT NULL DEFAULT 1 COMMENT '1 ACTIVO, 2 INACTIVO',
    TIPO INT(1) NOT NULL COMMENT 'TIPO DE REGISTRO, 1 =ABONO, 2=CONSUMO-DESCUENTO',
    ID_USER_REGISTRA INT NOT NULL COMMENT 'ID DE USER QUE REGISTRA EL ABONO O CONSUMO',
    CANTIDAD INT NOT NULL DEFAULT 0 COMMENT 'CANTIDAD DE CREDITOS ABONADOS O DESCONTADOS EN LA OPERACION',
    FECHA_HORA DATETIME COMMENT 'FECHA Y HORA DE LA OPERACION',
    ID_CLIENTE INT DEFAULT 0 COMMENT 'OPCIONAL, ID DEL CLIENTE AL QUE APLICO LA ACCION POR LA CUAL OCURRE EL DESCUENTO DE CREDITOS',
    ID_PROSPECTO INT DEFAULT 0 COMMENT 'OPCIONAL, ID DEL PROSPECTO AL QUE APLICO LA ACCION POR LA CUAL OCURRE EL DESCUENTO DE CREDITOS',
    MONTO_OPERACION DOUBLE DEFAULT 0 COMMENT 'OPCIONAL, MONTO EN PESOS RELACIONADO CON LA ACCION POR LA CUAL OCURRE EL ABONO O DESCUENTO',
    COMENTARIOS VARCHAR(200) COMMENT 'OPCIONAL, CAMPO PARA COMENTARIOS O NOTAS ADICIONALES',
    FOLIO_MOVIL VARCHAR(30) COMMENT 'OPCIONAL, FOLIO UNICO GENERADO EN MOVIL DEL REGISTRO'
);

--Atrubito para microsip; para la actualización entre el sistema EVC y microsip. 
-- Leonardo Montes de Oca, 04/05/2015
ALTER TABLE IMPUESTO ADD SINCRONIZACION_MICROSIP INT(1) DEFAULT 0 COMMENT 'ACTUALIZADO CON MICROSIP, 0 NUEVO, 1 SINCRONIZADO, 2 EDITADO Y FALTA SINCRONIZACION';

--Tabla que tiene las relaciones de los ID's correspondientes entre los sistemas de EVC - Microsip
-- Leonardo Montes de Oca, 04/05/2015
CREATE TABLE QUARTZ_IMPUESTO(
    ID_QUARTZ INT(11) NOT NULL AUTO_INCREMENT,
    ID_IMPUESTO_EVC INT(11) COMMENT 'ID DEL IMPUESTO EN EL SISTEMA DEL EVC',
    ID_IMPUESTO_SISTEM_TERCERO INT(11) DEFAULT 0 COMMENT 'ID DE IMPUESTO DEL SISTEMA TERCERO, 0 SI MANEJA EL ATRIBUTO DE CLAVE',
    CLAVE VARCHAR(50) DEFAULT NULL COMMENT 'SI EL SISTEMA TERCERO NO MANEJAN IDs Y SE UTILIZA VARCHAR PARA IDENTIFICARLO SE OCUPA ESTE ATRIBUTO',
    ID_SISTEMA_TERCERO INT(2) DEFAULT 1 COMMENT 'SISTEMAS TERCEROS; 1 MICROSIP, ',
    PRIMARY KEY(ID_QUARTZ)
);

--Atributo para microsip; para la actualización entre el sistema EVC y microsip. 
-- Cesar Martinez, 04/05/2015
ALTER TABLE CONCEPTO ADD SINCRONIZACION_MICROSIP INT(1) DEFAULT 0 COMMENT 'ACTUALIZADO CON MICROSIP, 0 NUEVO, 1 SINCRONIZADO, 2 EDITADO Y FALTA SINCRONIZACION';

--Tabla que tiene las relaciones de los ID's correspondientes entre los sistemas de EVC - Microsip
-- Cesar Martinez, 04/05/2015
CREATE TABLE QUARTZ_CONCEPTO(
    ID_QUARTZ INT(11) NOT NULL AUTO_INCREMENT,
    ID_CONCEPTO_EVC INT(11) COMMENT 'ID DEL CONCEPTO EN EL SISTEMA DEL EVC',
    ID_CONCEPTO_SISTEM_TERCERO INT(11) DEFAULT 0 COMMENT 'ID DE CONCEPTO DEL SISTEMA TERCERO, 0 SI MANEJA EL ATRIBUTO DE CLAVE',
    CLAVE VARCHAR(50) DEFAULT NULL COMMENT 'SI EL SISTEMA TERCERO NO MANEJAN IDs Y SE UTILIZA VARCHAR PARA IDENTIFICARLO SE OCUPA ESTE ATRIBUTO',
    ID_SISTEMA_TERCERO INT(2) DEFAULT 1 COMMENT 'SISTEMAS TERCEROS; 1 MICROSIP, ',
    PRIMARY KEY(ID_QUARTZ)
);

ALTER TABLE ALMACEN ADD SINCRONIZACION_MICROSIP INT(1) DEFAULT 0 COMMENT 'ACTUALIZADO CON MICROSIP, 0 NUEVO, 1 SINCRONIZADO, 2 EDITADO Y FALTA SINCRONIZACION';

CREATE TABLE QUARTZ_ALMACEN(
    ID_QUARTZ INT(11) NOT NULL AUTO_INCREMENT,
    ID_ALMACEN_EVC INT(11) COMMENT 'ID DEL ALMACEN EN EL SISTEMA DEL EVC',
    ID_ALMACEN_SISTEM_TERCERO INT(11) DEFAULT 0 COMMENT 'ID DE ALMACEN DEL SISTEMA TERCERO, 0 SI MANEJA EL ATRIBUTO DE CLAVE',
    CLAVE VARCHAR(50) DEFAULT NULL COMMENT 'SI EL SISTEMA TERCERO NO MANEJAN IDs Y SE UTILIZA VARCHAR PARA IDENTIFICARLO SE OCUPA ESTE ATRIBUTO',
    ID_SISTEMA_TERCERO INT(2) DEFAULT 1 COMMENT 'SISTEMAS TERCEROS; 1 MICROSIP, ',
    PRIMARY KEY(ID_QUARTZ)
);

ALTER TABLE sgfens_cobranza_abono ADD SINCRONIZACION_MICROSIP INT(1) DEFAULT 0 COMMENT 'ACTUALIZADO CON MICROSIP, 0 NUEVO, 1 SINCRONIZADO, 2 EDITADO Y FALTA SINCRONIZACION';

CREATE TABLE QUARTZ_COBRANZA_ABONO(
    ID_QUARTZ INT(11) NOT NULL AUTO_INCREMENT,
    ID_COBRANZA_EVC INT(11) COMMENT 'ID DE COBRANZA ABONO EN EL SISTEMA DEL EVC',
    ID_COBRANZA_SISTEM_TERCERO INT(11) DEFAULT 0 COMMENT 'ID DE COBRANZA ABONO DEL SISTEMA TERCERO, 0 SI MANEJA EL ATRIBUTO DE CLAVE',
    CLAVE VARCHAR(50) DEFAULT NULL COMMENT 'SI EL SISTEMA TERCERO NO MANEJAN IDs Y SE UTILIZA VARCHAR PARA IDENTIFICARLO SE OCUPA ESTE ATRIBUTO',
    ID_SISTEMA_TERCERO INT(2) DEFAULT 1 COMMENT 'SISTEMAS TERCEROS; 1 MICROSIP, ',
    PRIMARY KEY(ID_QUARTZ)
);

--Atrubito para microsip; para la actualización entre el sistema EVC y microsip. 
-- Leonardo Montes de Oca, 05/05/2015
ALTER TABLE EMPLEADO ADD SINCRONIZACION_MICROSIP INT(1) DEFAULT 0 COMMENT 'ACTUALIZADO CON MICROSIP, 0 NUEVO, 1 SINCRONIZADO, 2 EDITADO Y FALTA SINCRONIZACION';

--Tabla que tiene las relaciones de los ID's correspondientes entre los sistemas de EVC - Microsip
-- Leonardo Montes de Oca, 05/05/2015
CREATE TABLE QUARTZ_EMPLEADO(
    ID_QUARTZ INT(11) NOT NULL AUTO_INCREMENT,
    ID_EMPLEADO_EVC INT(11) COMMENT 'ID DEL EMPLEADO EN EL SISTEMA DEL EVC',
    ID_EMPLEADO_SISTEM_TERCERO INT(11) DEFAULT 0 COMMENT 'ID DE EMPLEADO DEL SISTEMA TERCERO, 0 SI MANEJA EL ATRIBUTO DE CLAVE',
    CLAVE VARCHAR(50) DEFAULT NULL COMMENT 'SI EL SISTEMA TERCERO NO MANEJAN IDs Y SE UTILIZA VARCHAR PARA IDENTIFICARLO SE OCUPA ESTE ATRIBUTO',
    ID_SISTEMA_TERCERO INT(2) DEFAULT 1 COMMENT 'SISTEMAS TERCEROS; 1 MICROSIP, ',
    PRIMARY KEY(ID_QUARTZ)
);

-- Nombres reportes
-- Héctor 27-04-2015
update tipo_reporte
set descripcion = "Reporte de Pedidos (VENTAS)"
where id_reporte = 19;

INSERT INTO tipo_reporte VALUES
(29,45,1,1,"Reporte de Eficacia");

UPDATE tipo_reporte
SET ID_TIPO_REPORTE = 40
WHERE id_reporte = 27;


-- Héctor 04-05-2015
-- Venta Consigna
ALTER TABLE empleado 
ADD COLUMN VENTA_CONSIGNA INT DEFAULT 0;

ALTER TABLE cliente 
ADD COLUMN ID_VENDEDOR_CONSIGNA INT DEFAULT 0 COMMENT '0 = Deshabilitado , 1 = Habilitado';

ALTER TABLE sgfens_pedido
ADD COLUMN CONSIGNA INT DEFAULT 0 COMMENT 'Indica si la venta es en consigna 0 = No  , 1 = Si (en consigna)' ;


--Atrubito para microsip; para la actualización entre el sistema EVC y microsip. 
-- Leonardo Montes de Oca, 05/05/2015
ALTER TABLE SGFENS_PEDIDO ADD SINCRONIZACION_MICROSIP INT(1) DEFAULT 0 COMMENT 'ACTUALIZADO CON MICROSIP, 0 NUEVO, 1 SINCRONIZADO, 2 EDITADO Y FALTA SINCRONIZACION';

--Tabla que tiene las relaciones de los ID's correspondientes entre los sistemas de EVC - Microsip
-- Leonardo Montes de Oca, 05/05/2015
CREATE TABLE QUARTZ_PEDIDO(
    ID_QUARTZ INT(11) NOT NULL AUTO_INCREMENT,
    ID_PEDIDO_EVC INT(11) COMMENT 'ID DEL PEDIDO EN EL SISTEMA DEL EVC',
    ID_PEDIDO_SISTEM_TERCERO INT(11) DEFAULT 0 COMMENT 'ID DE PEDIDO DEL SISTEMA TERCERO, 0 SI MANEJA EL ATRIBUTO DE CLAVE',
    CLAVE VARCHAR(50) DEFAULT NULL COMMENT 'SI EL SISTEMA TERCERO NO MANEJAN IDs Y SE UTILIZA VARCHAR PARA IDENTIFICARLO SE OCUPA ESTE ATRIBUTO',
    ID_SISTEMA_TERCERO INT(2) DEFAULT 1 COMMENT 'SISTEMAS TERCEROS; 1 MICROSIP, ',
    PRIMARY KEY(ID_QUARTZ)
);

-- César 08-05-2015
-- Variable para intentos de Login cuando no tiene Creditos de Operacion
ALTER TABLE empresa 
ADD COLUMN `INTENTOS_LOGIN_NO_CREDITOS` INT DEFAULT '0' NULL COMMENT 'Numero de intentos de login de usuarios de la empresa en consola a partir de no tener creditos o saldo negativo';

-- César 13-05-2015
-- Configuración para correos destinatarios para envio de info de cobros con tdc al comprar desde movil creditos de operacion
INSERT INTO parametros(ID_PARAMETRO,NOMBRE,DESCRIPCION) VALUES ( '71','app.mail.cobrotdc.destFijos','gpuga@movilpyme.com,gpuga@consultoriacfdi.com');

-- Relacion de Bitacora Cr Operacion con Pago con tarjeta de credito (banco_operacion)
ALTER TABLE bitacora_creditos_operacion ADD COLUMN ID_OPERACION_BANCARIA INT NULL COMMENT 'OPCIONAL, ID DE LA OPERACION BANCARIA RELACIONADA, COBRO CON TARJETA';

-- César 18-05-2015
-- Almacenamiento dinámico de Saldo Pagado de una Factura, se actualizara cada que se registre o cancele un abono de cobranza
ALTER TABLE comprobante_fiscal ADD COLUMN SALDO_PAGADO DOUBLE DEFAULT '0' NULL COMMENT 'Saldo pagado a la fecha respecto al total del Comprobante Fiscal, importe_neto';

-- Query unico a ejecutar una sola ves para actualizar tabla de facturas, para que 
-- el dato SALDO_PAGADO se actualice con los valores de las sumas de abonos de sgfens_cobranza_abono
-- Solo aplica para facturas que NO provengan de un pedido
UPDATE comprobante_fiscal cf
INNER JOIN (
  SELECT ID_COMPROBANTE_FISCAL, SUM(MONTO_ABONO) AS SUMA_ABONOS
  FROM sgfens_cobranza_abono
  WHERE ID_ESTATUS = 1 AND ID_COMPROBANTE_FISCAL>0
  GROUP BY ID_COMPROBANTE_FISCAL
) a ON cf.ID_COMPROBANTE_FISCAL = a.ID_COMPROBANTE_FISCAL
SET cf.SALDO_PAGADO = a.SUMA_ABONOS;


-- César 22-05-2015
-- Nuevos Planes de Licencia Pretoriano Mayo 2015
ALTER TABLE empresa_permiso_aplicacion 
ADD COLUMN ID_PRETO_LICENCIA INT DEFAULT '2' NULL COMMENT 'ID DE TIPO LICENCIA DE LA EMPRESA MATRIZ DE ACUERDO A NUEVOS ESQUEMAS DE VENTAS 2015' , 
ADD COLUMN MAX_NUM_USUARIOS INT DEFAULT '1' NULL COMMENT 'MAXIMO NUMERO DE USUARIOS PERMITIDOS QUE PUEDE CREAR UNA EMPRESA';

CREATE TABLE PRETO_LICENCIA(
    `ID_PRETO_LICENCIA` INT NOT NULL AUTO_INCREMENT COMMENT 'ID AUTOINCREMENTABLE DE TABLA, CLAVE UNICA', 
    `NOMBRE_LICENCIA` VARCHAR(200) NOT NULL COMMENT 'NOMBRE DE LA LICENCIA DE PRETORIANO', 
    `DESCRIPCION_LICENCIA` TEXT COMMENT 'DESCRIPCION DE LA LICENCIA', 
PRIMARY KEY (`ID_PRETO_LICENCIA`))  ;

INSERT INTO `preto_licencia`(`ID_PRETO_LICENCIA`,`NOMBRE_LICENCIA`,`DESCRIPCION_LICENCIA`) VALUES ( 1,'Pretoriano Light', NULL);
INSERT INTO `preto_licencia`(`ID_PRETO_LICENCIA`,`NOMBRE_LICENCIA`,`DESCRIPCION_LICENCIA`) VALUES ( 2,'Pretoriano Plus', NULL);
INSERT INTO `preto_licencia`(`ID_PRETO_LICENCIA`,`NOMBRE_LICENCIA`,`DESCRIPCION_LICENCIA`) VALUES ( 3,'Pretoriano Movil', NULL);
INSERT INTO `preto_licencia`(`ID_PRETO_LICENCIA`,`NOMBRE_LICENCIA`,`DESCRIPCION_LICENCIA`) VALUES ( 4,'Demo Preto', NULL);
INSERT INTO `preto_licencia`(`ID_PRETO_LICENCIA`,`NOMBRE_LICENCIA`,`DESCRIPCION_LICENCIA`) VALUES ( 5,'Demo Movil', NULL);


--César 25-05-2015
-- Para compaginar algunos permisos con los nuevos planes de licencia
ALTER TABLE empresa_permiso_aplicacion CHANGE `ACCESO_SGFENS_FACTURACION` `ACCESO_SGFENS_FACTURACION` INT(1) DEFAULT '1' NULL , 
    CHANGE `ACCESO_SGFENS_VALIDACIONXML` `ACCESO_SGFENS_VALIDACIONXML` INT(1) DEFAULT '1' NULL ;


-- César 25-05-2015
-- Tablas necesarias para Datos Personalizados en Facturas
-- NOTA: SOLO EJECUTAR EN LOCALES DE PRUEBAS Y DESARROLLO EN CASO DE QUE NO EXISTAN PREVIAMENTE
--        SI YA EXISTEN, NO SUSTITUIRLAS NI BORRAR LAS ACTUALES
CREATE TABLE `comprobante_descripcion_personalizada` (
  `ID_COMPROBANTE_DESCRIPCION_PERSONALIZADA` INT(10) NOT NULL,
  `ID_COMPROBANTE_FISCAL` INT(10) NOT NULL,
  `DATOS_DE_PERSONALIZACION` TEXT,
  PRIMARY KEY (`ID_COMPROBANTE_DESCRIPCION_PERSONALIZADA`),
  KEY `ID_COMPROBANTE_FISCAL` (`ID_COMPROBANTE_FISCAL`)
);
CREATE TABLE `datos_personalizados` (
  `id_datos_personalizados` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'Identificador único autoincrementable',
  `id_empresa` INT(11) NOT NULL COMMENT 'Id de la empresa a la que pertenece el dato personalizado.',
  `variable` VARCHAR(50) NOT NULL COMMENT 'Nombre de la variable con la que se mapeará al diseñar la factura en iReport',
  `descripcion` VARCHAR(255) NOT NULL COMMENT 'Texto que aparecerá en el formulario al crear una nueva factura.',
  `tipo` TINYINT(4) NOT NULL COMMENT 'Indicador para saber que tipo de variable según sea el caso: 1 - texto corto, 2 - Texto mediano, 3 - Texto largo, 4 - Numero decimal, 5 - fecha formato aaaa-mm-dd',
  PRIMARY KEY (`id_datos_personalizados`),
  KEY `id_empresa` (`id_empresa`)
);

--Leonardo Montes de Oca, 01/06/2015
--Atributos adicionales para las tablas de control de sincronización de sistema tercero y pretoriano
ALTER TABLE QUARTZ_CLIENTE ADD ID_EMPRESA INT(10) NOT NULL DEFAULT 0;
ALTER TABLE QUARTZ_IMPUESTO ADD ID_EMPRESA INT(10) NOT NULL DEFAULT 0;
ALTER TABLE QUARTZ_CONCEPTO ADD ID_EMPRESA INT(10) NOT NULL DEFAULT 0;
ALTER TABLE QUARTZ_ALMACEN ADD ID_EMPRESA INT(10) NOT NULL DEFAULT 0;
ALTER TABLE QUARTZ_COBRANZA_ABONO ADD ID_EMPRESA INT(10) NOT NULL DEFAULT 0;
ALTER TABLE QUARTZ_EMPLEADO ADD ID_EMPRESA INT(10) NOT NULL DEFAULT 0;
ALTER TABLE QUARTZ_PEDIDO ADD ID_EMPRESA INT(10) NOT NULL DEFAULT 0;

-- Héctor Nuevos campos concepto
ALTER TABLE CONCEPTO 
ADD COLUMN CLAVE VARCHAR(50) DEFAULT '' COMMENT 'CLAVE PARA PRODUCTO',
ADD COLUMN DESGLOSE_PIEZAS DOUBLE DEFAULT 1 COMMENT 'DESGLOSE DE PIEZAS DEL EMBALAJE QUE SE ESTA REGISTRANDO';

--Leonardo Montes de Oca Huerta, 08/06/2015
--atributo y tabla adicional para el manejo de la sincronizacion son un sistema tercero, microsip
ALTER TABLE SGFENS_COBRANZA_METODO_PAGO ADD SINCRONIZACION_MICROSIP INT(1) DEFAULT 0 COMMENT 'ACTUALIZADO CON MICROSIP, 0 NUEVO, 1 SINCRONIZADO, 2 EDITADO Y FALTA SINCRONIZACION';

CREATE TABLE QUARTZ_SGFENS_METODO_PAGO(
    ID_QUARTZ INT(11) NOT NULL AUTO_INCREMENT,
    ID_METODO_PAGO_EVC INT(11) COMMENT 'ID DEL METODO PAGO EN EL SISTEMA DEL EVC',
    ID_METODO_PAGO_SISTEM_TERCERO INT(11) DEFAULT 0 COMMENT 'ID DE METODO PAGO DEL SISTEMA TERCERO, 0 SI MANEJA EL ATRIBUTO DE CLAVE',
    CLAVE VARCHAR(50) DEFAULT NULL COMMENT 'SI EL SISTEMA TERCERO NO MANEJAN IDs Y SE UTILIZA VARCHAR PARA IDENTIFICARLO SE OCUPA ESTE ATRIBUTO',
    ID_SISTEMA_TERCERO INT(2) DEFAULT 1 COMMENT 'SISTEMAS TERCEROS; 1 MICROSIP, ',
    PRIMARY KEY(ID_QUARTZ)
);

--Leonardo Montes de Oca, 16/06/2015
--Atributo para el control de acceso de web service
ALTER TABLE EMPRESA_PERMISO_APLICACION ADD WS_SINCRONIZACION_ACCESO INT(1) DEFAULT 0 COMMENT '0 SIN ACCESO, 1 CON ACCESO AL WEB SERVICE PARA SINCRONIZAR MODULOS';
ALTER TABLE EMPRESA_PERMISO_APLICACION ADD WS_SINCRONIZACION_TOKEN VARCHAR(35) DEFAULT '' COMMENT 'CADENA DE ACCESO AL WEB SERVICE DE SINCRONIZACION';




-- Hétor movimientos almacen
-- 5 junio 2015
CREATE TABLE EXISTENCIA_ALMACEN(
ID_ALMACEN INT NOT NULL COMMENT 'ID DE TABLA ALMACEN',
ID_CONCEPTO INT NOT NULL COMMENT 'ID TABLA CONCEPTO',
EXISTENCIA DOUBLE DEFAULT 0 COMMENT 'EXISTENCIA EN ALMACEN',
ESTATUS INT(2) COMMENT '1 - ACTIVO , 2 - INACTIVO' ,
PRIMARY KEY(ID_ALMACEN,ID_CONCEPTO)
);

-- Héctor
-- 09-06-2015
ALTER TABLE almacen
ADD COLUMN isPrincipal INT(1) DEFAULT 0 COMMENT 'IDENTIFICADOR PARA SABER DE CUAL ALMACEN SALDRA LA MERCANCIA PARA VENTAS 1 = PRINCIPAL , 2 = NO ES PRINCIPAL';

--  guardar id mov en almacen , los anteriores quedaran null.
ALTER TABLE movimiento
ADD COLUMN ID_CONCEPTO INT,
ADD COLUMN ID_ALMACEN_DESTINO INT;


ALTER TABLE concepto 
ADD COLUMN `FOLIO_CONCEPTO_MOVIL` VARCHAR(50) NULL COMMENT 'FOLIO DE CONCEPTO MOVIL O PUNTO DE VENTA PARA EVITAR DUPLICIDAD EN SINCRONIZACION';


--Roberto
--22/09/15
ALTER TABLE CLIENTE
ADD COLUMN `NOMBRE_COMERCIAL` VARCHAR(500) DEFAULT '' COMMENT 'CAMPO PARA GUARDAR EL NOMBRE COMERCIAL DEL CLIENTE' ;

--Roberto
--23/09/15
--Se agrega el campo permiso venta credito, para el candado de venta a credito
--del punto 3 Word "Desarrollo cliente TICOY 120615
ALTER TABLE EMPLEADO
ADD COLUMN `PERMISO_VENTA_CREDITO` INT DEFAULT 2 COMMENT 'CANDADO DE VENTA A CREDITO, PARA PERMITIR O NO HACER UNA VENTA A CREDITO POR DEFAULT ESTA DESACTIVADO EL PERMISO, 1 SI, 2 NO';

--Roberto
--23/09/15
--Se agrega el campo permiso venta credito a la tabla de clientes para poder activarlo o desactivarlo de manera independiente
ALTER TABLE CLIENTE
ADD COLUMN `PERMISO_VENTA_CREDITO` INT DEFAULT 2 COMMENT 'CANDADO DE VENTA A CREDITO, PERMITE ACTIVAR O DESACTIVAR INDEPENDIENTEMENTE EL PERMISO POR CLIENTE, 1 SI, 2 NO',
ADD COLUMN `NOMBRE_COMERCIAL` VARCHAR(500) DEFAULT '' COMMENT 'CAMPO PARA GUARDAR EL NOMBRE COMERCIAL DEL CLIENTE' ;



-- Héctor
--- Query migracion almacen , solo se aplica por primera vez

/* -----Inicio---- */

-- 1 Actualizo alamacenes existentes para que sean principal (solo 1 por empresa) ok
SELECT MIN(ID_ALMACEN),ID_EMPRESA,ID_ESTATUS,NOMBRE,DIRECCION,RESPONSABLE,PUESTO,TELEFONO,CORREO,SINCRONIZACION_MICROSIP,isPrincipal
FROM almacen 
GROUP BY id_empresa

 -- Poner manualmente isPrincipal = 1, al resultado del query

-- 2 Creo almacen general para empresas que no tienen    ok

INSERT INTO almacen(id_empresa)
SELECT id_empresa FROM empresa WHERE id_empresa NOT IN (SELECT id_empresa FROM almacen);

-- 3  Actualiza datos de almacenes creado   ok
UPDATE almacen
SET ID_ESTATUS = 1,
NOMBRE = 'GENERAL' ,
DIRECCION = 'DESCONOCIDA' ,
AREA_ALMACEN = 1 ,
RESPONSABLE = '' ,
PUESTO = '' ,
TELEFONO = '' ,
CORREO = '' ,
SINCRONIZACION_MICROSIP = 0,
isPrincipal = 1
WHERE id_estatus IS NULL;

-- 4 insertar existencia en nuevo almacen

	-- Ejecutar clase qryAlmacenProductosJava
/* -----Fin---- */


-- Héctor 

CREATE TABLE migracion_sct_evc(
ID_EMPRESA INT NOT NULL PRIMARY KEY,
ESTATUS_MIGRACION INT(1) DEFAULT 0 COMMENT '0 = SIN ACCION , 1 = MOSTRAR ANUNCIO , 2 = YA SE MIGRO (QUITAR ANUNCIO->pRIEMRO DEBE PASAR POR ESTADO 1)',
FECHA_ACCESO_PRETO DATETIME DEFAULT NULL COMMENT 'FECHA ULTIMO ACCESO PRETORIANO EVC',
FECHA_ACCESO_SCT DATETIME DEFAULT NULL COMMENT 'FECHA ULTIMO ACCESO SCT',
CAPACITACION_ESTATUS INT(1) DEFAULT 0 COMMENT '0 = NO SOLICITADA , 1 = SOLICITADA , 2 = COMPLETADA'
);


-- Cesar Martinez 23/06/2015
-- Tablas para Estaciones de Punto de Venta y relacion con empleados
CREATE TABLE pos_estacion( 
    `id_pos_estacion` INT NOT NULL AUTO_INCREMENT COMMENT 'ID autoincrementable, identificador unico de estación punto de venta', 
    `id_empresa` INT NOT NULL COMMENT 'ID de empresa a la que pertenece la estación punto de venta', 
    `identificacion` VARCHAR(15) NOT NULL COMMENT 'Clave de identificacion alfanumerica de la estacion punto de venta', 
    `nombre` VARCHAR(50) COMMENT 'Nombre o descripcion de la estacion', 
    `id_estatus` INT(1) NOT NULL DEFAULT '1' COMMENT 'Estatus del registro', 
    `fecha_hr_ultima_conexion` DATETIME COMMENT 'Fecha y hora de ultima conexion a servicio central', 
    `folio_movil` VARCHAR(30) COMMENT 'Folio para interconexion a sistemas interconectados, movil o escritorio', 
    PRIMARY KEY (`id_pos_estacion`)
);

CREATE TABLE `empleado_x_pos_estacion`( 
    `id_empleado` INT NOT NULL COMMENT 'ID de empleado', 
    `id_pos_estacion` INT NOT NULL COMMENT 'ID de estacion punto de venta', 
    `fecha_hr_alta` DATETIME COMMENT 'Fecha y Hora en que se da de alta la relacion del empleado con la estacion', 
    PRIMARY KEY (`id_empleado`, `id_pos_estacion`)
);

-- Cesar Martinez 24/06/2015
-- Catalogo/Diccionario de ingresos y egresos para caja en Punto de Venta
CREATE TABLE `diccionario_ingresos_egresos`( 
    `id_diccionario_i_e` INT NOT NULL AUTO_INCREMENT COMMENT 'ID autoincrementable llave primaria', 
    `es_general` INT(1) NOT NULL DEFAULT '0' COMMENT 'Indica si un registro es aplicable para cualquier empresa del sistema, 1=general, 0=solo para una empresa ', 
    `id_empresa` INT DEFAULT '-1' COMMENT 'ID de empresa a la que pertenece el registro', 
    `nombre` VARCHAR(50) NOT NULL COMMENT 'Nombre identificador del registro', 
    `descripcion` VARCHAR(250) COMMENT 'Descripcion extensa del registro', 
    `es_ingreso` INT(1) NOT NULL DEFAULT '1' COMMENT 'Determina si es un ingreso o egreso, 1=ingreso, 0=egreso', 
    `id_estatus` INT(1) NOT NULL DEFAULT '1' COMMENT 'Estatus del registro, 1=activo, 2=inactivo', 
    `folio_movil` VARCHAR(30) COMMENT 'Folio para interconexion con sistemas dependientes movil o escritorio', 
    PRIMARY KEY (`id_diccionario_i_e`)
);


-- Héctor Pedidos-Almacen
ALTER TABLE sgfens_pedido_producto
ADD COLUMN id_Almacen_Origen INT DEFAULT 0;

ALTER TABLE comprobante_descripcion
ADD COLUMN id_Almacen_Origen INT DEFAULT 0;

--Roberto 03-07-15
--Creación de rol Representante, punto 5 del word "Requerimientos Cliente Cristopher"
INSERT INTO ROLES (ID_ROLES,NOMBRE,DESCRIPCION,OCULTO,ID_EMPRESA,MOSTRAR_PRETORIANO) VALUES (33,'REPRESENTANTE','Tiene las mismas funciones que un vendedor_conductor',TRUE,-1,1);

--Leonardo Montes de Oca, 03-07-2015
--Categoría de Clientes
CREATE TABLE CLIENTE_CATEGORIA(
    ID_CATEGORIA INT(11) NOT NULL AUTO_INCREMENT,
    ID_EMPRESA INT(11) NOT NULL,
    ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 ACTIVO, 2 ELIMINADO/CANCELADO',
    NOMBRE_CLASIFICACION VARCHAR(50),
    DESCRIPCION VARCHAR(250),    
    PRIMARY KEY (ID_CATEGORIA)
);

ALTER TABLE CLIENTE ADD ID_CLIENTE_CATEGORIA INT(1) DEFAULT 0 COMMENT 'ID DE LA TABLA CLIENTE_CATEGORIA QUE RECAE EL UNA CLASIFICACION';


-- Héctor 24-06-2015
CREATE TABLE cliente_precio_concepto(
	ID_CONCEPTO INT NOT NULL COMMENT 'LLAVE FORANEA DE CONCEPTO',
	ID_CLIENTE INT NOT NULL COMMENT 'LLAVE FORANEA CLIENTE',
	PRECIO_UNITARIO_CLIENTE DOUBLE DEFAULT 0 COMMENT 'PRECIO MENUDEO AL QUE SE LE VENDERA AL CLIENTE',	
        PRECIO_MEDIO_CLIENTE DOUBLE DEFAULT 0 COMMENT 'PRECIO MEDIO MAYOREO AL QUE SE LE VENDERA AL CLIENTE',
        PRECIO_MAYOREO_CLIENTE  DOUBLE DEFAULT 0 COMMENT 'PRECIO MAYOREO AL QUE SE LE VENDERA AL CLIENTE',
        PRECIO_ESPECIAL_CLIENTE  DOUBLE DEFAULT 0 COMMENT 'PRECIO ESPECIAL AL QUE SE LE VENDERA AL CLIENTE',
        PRECIO_DOCENA_CLIENTE  DOUBLE DEFAULT 0 COMMENT 'PRECIO DOCENA AL QUE SE LE VENDERA AL CLIENTE',
	ID_ESTATUS INT DEFAULT 2,
        PRIMARY KEY(ID_CLIENTE,ID_CONCEPTO)
);

-- Leonardo Montes de Oca, 07-07-2015
-- Atributos adicionales para los precios a granel
ALTER TABLE CONCEPTO
ADD COLUMN PRECIO_UNITARIO_GRANEL DOUBLE DEFAULT 0,
ADD COLUMN PRECIO_MEDIO_GRANEL DOUBLE DEFAULT 0 COMMENT 'PRECIO MEDIO MAYOREO AL QUE SE VENDERA A GRANEL',
ADD COLUMN PRECIO_MAYOREO_GRANEL  DOUBLE DEFAULT 0 COMMENT 'PRECIO MAYOREO AL QUE SE VENDERA A GRANEL',
ADD COLUMN PRECIO_ESPECIAL_GRANEL  DOUBLE DEFAULT 0 COMMENT 'PRECIO ESPECIAL AL QUE SE VENDERA A GRANEL';

ALTER TABLE CLIENTE_PRECIO_CONCEPTO
ADD COLUMN PRECIO_UNITARIO_GRANEL_CLIENTE DOUBLE DEFAULT 0,
ADD COLUMN PRECIO_MEDIO_GRANEL_CLIENTE DOUBLE DEFAULT 0 COMMENT 'PRECIO MEDIO MAYOREO AL QUE SE LE VENDERA AL CLIENTE A GRANEL',
ADD COLUMN PRECIO_MAYOREO_GRANEL_CLIENTE  DOUBLE DEFAULT 0 COMMENT 'PRECIO MAYOREO AL QUE SE LE VENDERA AL CLIENTE A GRANEL',
ADD COLUMN PRECIO_ESPECIAL_GRANEL_CLIENTE  DOUBLE DEFAULT 0 COMMENT 'PRECIO ESPECIAL AL QUE SE LE VENDERA AL CLIENTE A GRANEL';

-- Leonardo montes de Oca, 08-07-2015
--ATRIBUTO ADICIONAL PARA EL INVENTARIO DEL EMPLEADO EN RELACION A LA CANTIDAD QUE LLEVA EN PESO (KG)
ALTER TABLE EMPLEADO_INVENTARIO_REPARTIDOR ADD COLUMN PESO DOUBLE DEFAULT 0 COMMENT 'PARA EL PESO DEL ARTICULO-CONCEPTO AL SER POR AGRANEL';

--Leonardo Montes de Oca, 13-07-2015
--Atributos adicionales para el control de los permisos a empleados con movil.
ALTER TABLE EMPLEADO 
ADD COLUMN TRABAJAR_FUERA_LINEA INT(1) DEFAULT 2 COMMENT 'EN EL MOVIL DEL EMPLEADO, EN ADMINISTRACION SE HABILITARA OPCION DE TRABAJAR FUERA DE LINEA, LA CUAL PERMITA AL EMPLEADO ELEGIR SI QUERE TRABAJAR SINCRONIZANDO EN LINEA SUS DATOS O NO, 1 SI, 2 NO',
ADD COLUMN CLIENTES_CODIGO_BARRAS INT(1) DEFAULT 2 COMMENT 'PODRA BUSCAR A SUS CLIENTES, POR MEDIO DEL CODIGO DE BARRAS, 1 SI, 2 NO',
ADD COLUMN DISTANCIA_OBLIGATORIO DOUBLE DEFAULT 0 COMMENT 'DISTANCIA MINIMA, EN METROS, A LA QUE DEBERA DE ESTAR EL VENDEDOR PARA REGISTRAR UN MOVIMIENTO O VENTA A UN CLIENTE',
ADD COLUMN PRECIO_DE_COMPRA INT(1) DEFAULT 2 COMMENT 'EN LOS REPORTES DE LOS VENDEDORES (DEL CELULAR) LES APARECERA ESTE PRECIO, 1 SI, 2 NO';

--Leonardo Montes de Oca, 15-07-2015
--Atributo para la bandera y permiso de mostrar letreros de RFC o NIP(colombia actualmente), 
ALTER TABLE EMPRESA_PERMISO_APLICACION
ADD COLUMN RFC_POR_NIP_CODIGO INT(1) DEFAULT 0 COMMENT '0 SI NO ESTA ACTIVO Y SERA RFC DE CLIENTE, 1 ACTIVO Y ES NIP (COLOMBIA)';

--Leonardo Montes de Oca, 17-07-2015
--Atributo para la referencia de dirección de cliente
ALTER TABLE CLIENTE
ADD COLUMN REFERENCIA VARCHAR(150) DEFAULT '' COMMENT 'REFERENCIA DE LA DIRECCION';

--LEONARDO,
--Modificacion de atributos por default:

ALTER TABLE EMPLEADO
CHANGE PERMISO_VENTA_RAPIDA PERMISO_VENTA_RAPIDA INT DEFAULT 1 COMMENT 'PERMISOS PARA VENTAS RAPIDAS, 1 SI, 2 NO';

ALTER TABLE EMPLEADO
CHANGE PERMISO_VENTA_CREDITO PERMISO_VENTA_CREDITO INT DEFAULT 1 COMMENT 'CANDADO DE VENTA A CREDITO, PARA PERMITIR O NO HACER UNA VENTA A CREDITO POR DEFAULT ESTA DESACTIVADO EL PERMISO, 1 SI, 2 NO';

-- Leonardo Montes de Oca, 20-07-2015
-- Atributo para mostrar o no la guia interactiva, esto aplica solo al Pretoriano Demo
ALTER TABLE EMPRESA_PERMISO_APLICACION
ADD COLUMN MOSTRAR_GUIA INT(1) DEFAULT 0,1 COMMENT '0 NO MOSTRAR, 1 MOSTRAR. APLICAR DEFAULT 0 EN PRODUCTIVO Y COMO DEFAULT 1 EN PRUEBAS DEMO';


-- Héctor
-- Gastos Evc

CREATE TABLE GASTOS_EVC(
    ID_GASTOS INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    ID_CONCEPTO INT NOT NULL DEFAULT 0 COMMENT '1=Comida,2=Gasolina,3=Pasaje,4=Mecánico,5=Multa,6=Otro',
    COMENTARIO VARCHAR(100) ,
    FECHA DATETIME,
    MONTO DOUBLE DEFAULT 0,
    LATITUD DOUBLE DEFAULT 0,
    LONGITUD DOUBLE DEFAULT 0,
    ID_ESTATUS INT COMMENT '1= ACTIVO , 2 =  INACTIVO'  DEFAULT 1
);


CREATE TABLE CATALOGO_GASTOS(
ID_GASTOS INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
NOMBRE VARCHAR(100)  NOT NULL,
DESCRIPCION VARCHAR(100)    
);

INSERT INTO CATALOGO_GASTOS 
VALUES (1,'COMIDA','COMIDA'),(2,'GASOLINA','GASOLINA'),(3,'PASAJE','PASAJE'),(4,'MECANICO','MECANICO'),(5,'MULTA','MULTA'),(6,'OTRO','OTRO');

-- Héctor 
-- Cuenta dinero

CREATE TABLE cuenta_efectivo(
ID_CUENTA_EFECTIVO INT AUTO_INCREMENT NOT NULL PRIMARY KEY COMMENT 'IDENTIFICADOR UNICO',
ID_EMPLEADO INT NOT NULL DEFAULT 0 COMMENT 'ID DEL VENDEDOR' ,
FECHA_HORA DATETIME COMMENT 'FECHA Y  HORA DE REGISTRO',
BILLETE_1000 INT DEFAULT 0  COMMENT 'BILLETES 1000.00',
BILLETE_500 INT DEFAULT 0  COMMENT 'BILLETES 500.00',
BILLETE_200 INT DEFAULT 0  COMMENT 'BILLETES 200.00',
BILLETE_100 INT DEFAULT 0  COMMENT 'BILLETES 100.00',
BILLETE_50 INT DEFAULT 0  COMMENT 'BILLETES 50.00',
BILLETE_20 INT DEFAULT 0  COMMENT 'BILLETES 20.00',
MONEDA_20 INT DEFAULT 0  COMMENT 'MONEDA 20.00',
MONEDA_10 INT DEFAULT 0  COMMENT 'MONEDA 10.00',
MONEDA_5 INT DEFAULT 0  COMMENT 'MONEDA 5.00',
MONEDA_2 INT DEFAULT 0  COMMENT 'MONEDA 2.00',
MONEDA_1 INT DEFAULT 0  COMMENT 'MONEDA 1.00',
MONEDA_0_50 INT DEFAULT 0  COMMENT 'MONEDA 0.50',
MONEDA_0_20 INT DEFAULT 0  COMMENT 'MONEDA 0.20',
MONEDA_0_10 INT DEFAULT 0  COMMENT 'MONEDA 0.10'
);

--Leonardo Montes de Oca, 23-07-2015
--Tabla adicional y atributo adicional para la sincronizacion de movimientos
ALTER TABLE MOVIMIENTO ADD SINCRONIZACION_MICROSIP INT(1) DEFAULT 0 COMMENT 'ACTUALIZADO CON MICROSIP, 0 NUEVO, 1 SINCRONIZADO, 2 EDITADO Y FALTA SINCRONIZACION';

CREATE TABLE QUARTZ_MOVIMIENTO(
    ID_QUARTZ INT(11) NOT NULL AUTO_INCREMENT,
    ID_MOVIMIENTO_EVC INT(11) COMMENT 'ID DEL MOVIMIENTO EN EL SISTEMA DEL EVC',
    ID_MOVIMIENTO_SISTEM_TERCERO INT(11) DEFAULT 0 COMMENT 'ID DE MOVIMIENTO DEL SISTEMA TERCERO, 0 SI MANEJA EL ATRIBUTO DE CLAVE',
    CLAVE VARCHAR(50) DEFAULT NULL COMMENT 'SI EL SISTEMA TERCERO NO MANEJAN IDs Y SE UTILIZA VARCHAR PARA IDENTIFICARLO SE OCUPA ESTE ATRIBUTO',
    ID_SISTEMA_TERCERO INT(2) DEFAULT 1 COMMENT 'SISTEMAS TERCEROS; 1 MICROSIP, ',
    ID_EMPRESA INT(10) NOT NULL DEFAULT 0,
    PRIMARY KEY(ID_QUARTZ)
);

--Roberto Trejo, 27-07-2015
--Se agrega el campo referencia, para el punto 'agrupar por referencia'
ALTER TABLE SGFENS_COBRANZA_ABONO
ADD COLUMN REFERENCIA VARCHAR(20) DEFAULT '' COMMENT 'CAMPO PARA AGRUPAR POR REFERENCIAS'; 

-- Leonardo montes de Oca, 24-07-2015
--ATRIBUTO ADICIONAL PARA EL INVENTARIO DEL ALMACEN EN RELACION A LA CANTIDAD QUE LLEVA EN PESO (KG)
/*ALTER TABLE MOVIMIENTO ADD COLUMN PESO DOUBLE DEFAULT 0 COMMENT 'PARA EL PESO DEL ARTICULO-CONCEPTO AL SER POR AGRANEL';
ALTER TABLE EXISTENCIA_ALMACEN ADD COLUMN PESO DOUBLE DEFAULT 0 COMMENT 'PARA EL PESO DEL ARTICULO-CONCEPTO AL SER POR AGRANEL';
ALTER TABLE EXISTENCIA_ALMACEN DROP PRIMARY KEY, ADD PRIMARY KEY(ID_ALMACEN,ID_CONCEPTO, PESO);*/

-- Leonardo Montes de Oca, 27-07-2015
-- Atributos para campos adicionales de cliente, son personalizables.
/*ALTER TABLE CLIENTE 
ADD COLUMN LABEL_OPCIONAL_1 VARCHAR(100) DEFAULT '' COMMENT 'NOMBRE DEL CAMPO',
ADD COLUMN TIPO_OPCIONAL_1 INT(1) DEFAULT 0 COMMENT '0 SIN TIPO DE DATO, 1 NUMERICO, 2 VARCHAR',
ADD COLUMN VALOR_OPCIONAL_1 VARCHAR(100) DEFAULT '' COMMENT 'VALOR DE LA VARIABLE, CONTENIDO',
ADD COLUMN LABEL_OPCIONAL_2 VARCHAR(100) DEFAULT '' COMMENT 'NOMBRE DEL CAMPO',
ADD COLUMN TIPO_OPCIONAL_2 INT(1) DEFAULT 0 COMMENT '0 SIN TIPO DE DATO, 1 NUMERICO, 2 VARCHAR',
ADD COLUMN VALOR_OPCIONAL_2 VARCHAR(100) DEFAULT '' COMMENT 'VALOR DE LA VARIABLE, CONTENIDO',
ADD COLUMN LABEL_OPCIONAL_3 VARCHAR(100) DEFAULT '' COMMENT 'NOMBRE DEL CAMPO',
ADD COLUMN TIPO_OPCIONAL_3 INT(1) DEFAULT 0 COMMENT '0 SIN TIPO DE DATO, 1 NUMERICO, 2 VARCHAR',
ADD COLUMN VALOR_OPCIONAL_3 VARCHAR(100) DEFAULT '' COMMENT 'VALOR DE LA VARIABLE, CONTENIDO';
*/
SET FOREIGN_KEY_CHECKS=0; 
DROP TABLE CLIENTE_CAMPOS;
DROP TABLE CAMPO;
SET FOREIGN_KEY_CHECKS=1;
CREATE TABLE CLIENTE_CAMPO_ADICIONAL(
    ID_CLIENTE_CAMPO INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ID_EMPRESA INT(11) NOT NULL,
    ID_ESTATUS INT(1) DEFAULT 0 COMMENT '2 INACTIVO, 1 ACTIVO',
    LABEL_NOMBRE VARCHAR(100) COMMENT 'NOMBRE DEL CAMPO',
    TIPO_LABEL INT(1) DEFAULT 0 COMMENT '0 SIN TIPO DE DATO, 1 NUMERICO, 2 VARCHAR'     
);

CREATE TABLE CLIENTE_CAMPO_CONTENIDO(
    ID_CONTENIDO INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ID_CLIENTE_CAMPO INT(11) NOT NULL,
    ID_CLIENTE INT(11) NOT NULL,
    VALOR_LABEL VARCHAR(100) DEFAULT '' COMMENT 'VALOR DE LA VARIABLE, CONTENIDO'   
);

-- Leonardo Montes de Oca, 29-07-2015
--TABLA PARA EL CONTROL DE QUE MODULOS SE VAN A OCULTAR DENTRO DEL SISTEMA PRETORIANO:
CREATE TABLE EMPRESA_MODULOS_OCULTOS(
    ID_EMPRESA_MODULO_OCULTO INT(10) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ID_EMPRESA INT(11) NOT NULL COMMENT 'ID DE EMPRESA PADRE A LA CUAL SE LE OCULTARAN LOS MODULOS',
    MODULOS_OCULTOS TEXT NOT NULL COMMENT 'IDENTIFICADOR DE MODULOS OCULTOS, SEPARADOS POR COMA'
);

CREATE TABLE PRETO_MODULO(
    ID_PRETO_MODULO INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ID_ESTATUS INT(1) DEFAULT 1,
    NOMBRE_MODULO VARCHAR(100) NOT NULL,
    IDENTIFICADOR VARCHAR(100) NOT NULL COMMENT 'VARCHAR QUE IDENTIFICA AL MODULO EN QUESTION'
);
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_INICIO','MINICIO1');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ADMINISTRACION','MADMIN1');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ADMINISTRACION_PERFIL','MADMIN_PERFIL');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ADMINISTRACION_CERTIFICADOS','MADMIN_CERTIFICADO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ADMINISTRACION_LOGO','MADMIN_LOGO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ADMINISTRACION_LICENCIAS','MADMIN_LICENCIA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ADMINISTRACION_MI_CUENTA','MADMIN_CUENTA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ADMINISTRACION_USUARIOS','MADMIN_USUARIO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ADMINISTRACION_SUCURSALES','MADMIN_SUCURSAL');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ADMINISTRACION_FOLIOS_INTERNO','MADMIN_FOLIO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ADMINISTRACION_LOG_MOVIL','MADMIN_LOGM');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ADMINISTRACION_CAMPOS_CLIENTE','MADMIN_CAMPOCLIENTE');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_CATALOGOS','MCAT1');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_CATALOGOS_CLIENTES','MCAT_CLIENTE');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_CATALOGOS_CLIENTES_CATEGORIA','MCAT_CLICATEGORIA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_CATALOGOS_IMPUESTOS','MCAT_IMPUESTO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_CATALOGOS_PROVEEDORES','MCAT_PROVEEDOR');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_CATALOGOS_PROSPECTOS','MCAT_PROSPECTO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_CATALOGOS_BANCOS','MCAT_BANCO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ALMACEN','MALMA1');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ALMACEN_ALMACENES','MALMA_ALMACEN');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ALMACEN_CATEGORIAS','MALMA_CATEGORIA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ALMACEN_EMBALAJE','MALMA_EMBALAJE');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ALMACEN_MARCAS','MALMA_MARCA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ALMACEN_MOVIMIENTOS','MALMA_MOVIMIENTO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ALMACEN_PRODUCTOS','MALMA_PRODUCTO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ALMACEN_PAQUETES','MALMA_PAQUETE');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ALMACEN_SERVICIOS','MALMA_SERVICIO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ALMACEN_INVENTARIO','MALMA_INVENTARIO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ALMACEN_PRODUCTOS_DESCUENTO_MOVILES','MALMA_PRODESCUENTOMOVIL');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_VENTAS','MVENTA1');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_VENTAS_PEDIDOS','MVENTA_PEDIDO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_VENTAS_COBRANZA','MVENTA_COBRANZA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_VENTAS_PRODUCTOS_VENDIDOS','MVENTA_PROVENDIDO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_VENTAS_COTIZACIONES','MVENTA_COTIZACION');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_VENTAS_CORTE_CAJA','MVENTA_CORTECAJA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_VENTAS_ARQUEO_CAJA','MVENTA_ARQUEOCAJA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_VENTAS_DEPOSITOS_BANCARIOS','MVENTA_DEPOBANCARIO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_VENTAS_GESTION_DEV_CAM','MVENTA_GESDEVCAM');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_VENTAS_GESTION_VEN_DEV_CAM','MVENTA_GESVENDEVCAM');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_FACTURACION_CFDI','MFACCFDI1');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_FACTURACION_CFDI_FACTURAS','MFACCFDI_FACTURA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_FACTURACION_CFDI_EXPRESS_DESG','MFACCFDI_EXPRESS');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_FACTURACION_CFDI_NOTAS_CREDITO','MFACCFDI_NOTCREDITO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_FACTURACION_CFDI_NOTAS_DEBITO','MFACCFDI_NOTDEBITO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_FACTURACION_SAR','MSAR');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_FACTURACION_SAR_CONFIGURACION','MSAR_CONFIGURACION');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_FACTURACION_SAR_FACTURAS_SAR','MSAR_FACTURA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_FANANZAS','MFINANZA1');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_FANANZAS_DASHBOARD','MFINANZA_DASHBOARD');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_FANANZAS_CUENTAS_X_COBRAR','MFINANZA_CUEXCOBRAR');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_FANANZAS_CUENTAS_X_PAGAR','MFINANZA_CUEXPAGAR');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_PRETO_MOVIL','MPRETOMOVIL1');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_PRETO_MOVIL_LOCALIZACION','MPRETOMOVIL_LOCALIZACION');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_PRETO_MOVIL_DISPOSITIVOS','MPRETOMOVIL_DISPOSITIVO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_PRETO_MOVIL_EMPLEADOS','MPRETOMOVIL_EMPLEADO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_PRETO_MOVIL_CLIENTES_ASIGNADOS','MPRETOMOVIL_CLIASIGNADO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_PRETO_MOVIL_MENSAJES','MPRETOMOVIL_MENSAJE');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_PRETO_MOVIL_ZONAS','MPRETOMOVIL_ZONA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_PRETO_MOVIL_SEGUIMIENTO','MPRETOMOVIL_SEGUIMIENTO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_PRETO_MOVIL_VISOR_MAPA','MPRETOMOVIL_VISORMAPA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_PRETO_MOVIL_LOGISTICA','MPRETOMOVIL_LOGISTICA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_PRETO_MOVIL_RUTA_EMPLEADO','MPRETOMOVIL_RUTAEMPLEADO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_PRETO_MOVIL_GEOCERCA','MPRETOMOVIL_GEOCERCA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_PRETO_MOVIL_VISITA_CLIENTE','MPRETOMOVIL_VISITACLIENTE');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_REPORTES','MREPORTE1');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_REPORTES_REPORTES_GENERALES','MREPORTE_GENERAL');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_REPORTES_REPORTES_CONFIGURABLES','MREPORTE_CONFIGURABLE');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_NOMINA','MNOMINA1');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_NOMINA_REGISTRO_PATRONAL','MNOMINA_REGPATRONAL	');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_NOMINA_DEPARTAMENTOS','MNOMINA_DEPTO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_NOMINA_PUESTOS','MNOMINA_PUESTO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_NOMINA_JORNADAS','MNOMINA_JORNADA');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_NOMINA_CONTRATOS','MNOMINA_CONTRATO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_NOMINA_PERIODICIDAD','MNOMINA_PERIODICIDAD');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_NOMINA_EMPLEADOS','MNOMINA_EMPLEADO');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_NOMINA_PERCEPCIONES','MNOMINA_RECEPCION');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_NOMINA_DEDUCCIONES','MNOMINA_DEDUCCION');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_NOMINA_NOMINA_CFDI','MNOMINA_NOMINACFDI');
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_VALIDACION_XML','MVALIDACIONXML');

--Héctor   28-07-2015
-- Campo Id empleado para relación tabla gastos
ALTER TABLE gastos_evc
ADD COLUMN ID_EMPLEADO INT COMMENT 'ID DEL EMPLEADO QUE REGSITRA EL GASTO' AFTER ID_CONCEPTO;
ADD COLUMN REFERENCIA VARCHAR(20) DEFAULT '' COMMENT 'CAMPO PARA AGRUPAR POR REFERENCIAS'; 

-- Campo para registrar a que vendedor se le asigna o regresa mercancia

ALTER TABLE movimiento
ADD COLUMN idEmpleado INT COMMENT 'ID DEL EMPLEADO AL QUE SE LE ASIGNO LA MERCANCIA. ACCION ASIGNAR O DEVOLVER MERCANCIA EMPLEADO';

--Permiso modulo gastos
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_MODULO_PRETO_MOVIL_GASTOS','MPRETOMOVIL_GASTOS');

ALTER TABLE catalogo_gastos
ADD COLUMN ID_EMPRESA INT NOT NULL DEFAULT 0,
ADD COLUMN ID_ESTATUS INT NOT NULL DEFAULT 1;


-- Héctor 04-08-2015
-- Permiso modulo Referencias
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_MODULO_VENTAS_REFERENCIAS','MVENTAS_REFERENCIAS');

-- Fecha en que se actualiza la ref
ALTER TABLE sgfens_cobranza_abono
ADD COLUMN FECHA_ACTUALIZA_REFERENCIA DATETIME COMMENT 'Fecha y hora en que se actualiza la referencia del pago';

-- Vista agrupar Referencias
CREATE VIEW vista_cobranza_referencia_grupos
AS 
SELECT ID_EMPRESA,ID_USUARIO_VENDEDOR,SUM(MONTO_ABONO) AS TOTAL, FECHA_ABONO,REFERENCIA, COUNT(REFERENCIA) AS NUM_PAGOS
FROM sgfens_cobranza_abono
WHERE ID_ESTATUS <> 2
GROUP BY REFERENCIA;

--Leonardo Montes de oca, 07-08-2015
--Se modifica el comentario del atributo siguiente:
ALTER TABLE EMPRESA_PERMISO_APLICACION CHANGE RFC_POR_NIP_CODIGO RFC_POR_NIP_CODIGO INT(1) DEFAULT 0 COMMENT '0 SI NO ESTA ACTIVO Y SERA RFC DE CLIENTE, 1 ACTIVO Y ES NIP (COLOMBIA), 2 RUC DE ECUADOR';

--Leonardo Montes de Oca, 10-08-2015
--Atributos adicionales para el proveedor
ALTER TABLE SGFENS_PROVEEDOR
ADD COLUMN NOMBRE_EMPRESA VARCHAR(200) DEFAULT '',
ADD COLUMN LATITUD VARCHAR(200) DEFAULT NULL,
ADD COLUMN LONGITUD VARCHAR(200) DEFAULT NULL,
ADD COLUMN ID_CATEGORIA_PROVEEDOR INT(11) DEFAULT 0,
ADD COLUMN NOMBRE_IMAGEN_PROVEEDOR VARCHAR(250);

CREATE TABLE SGFENS_PROVEEDOR_CATEGORIA(
    ID_CATEGORIA INT(11) NOT NULL PRIMARY KEY AUTO_INCREMENT,
    ID_EMPRESA INT(11),
    ID_ESTATUS INT(1) DEFAULT 1,
    NOMBRE VARCHAR(100),
    DESCRIPCION VARCHAR(250)    
);

--TABLA QUE CONTIENE EL CATALOGO DE LOS PRODUCTOS/SERVICIOS QUE OFRECEN LOS PROVEEDORES
CREATE TABLE SGFENS_PRODUCTO_SERVICIO(
    ID_PRODUCTO_SERVICIO INT(11) NOT NULL PRIMARY KEY AUTO_INCREMENT,
    ID_EMPRESA INT(11),
    ID_ESTATUS INT(1) DEFAULT 1,
    NOMBRE VARCHAR(100),
    DESCRIPCION VARCHAR(250),
    UNIDAD VARCHAR(100),
    PRECIO_MEDIO_MAYOREO DOUBLE DEFAULT 0,
    MIN_MEDIO_MAYOREO DOUBLE DEFAULT 0,
    MAX_MEDIO_MAYOREO DOUBLE DEFAULT 0,
    PRECIO_MENUDEO DOUBLE DEFAULT 0,
    MAX_MENUDEO DOUBLE DEFAULT 0,
    PRECIO_MAYOREO DOUBLE DEFAULT 0,
    MIN_MAYOREO DOUBLE DEFAULT 0,        
    NOMBRE_IMAGEN_PRODUCTO_SERVICIO VARCHAR(250),
    ID_CATEGORIA INT(11) DEFAULT 0
);

--TABLA QUE CONTIENE LA RELACION DE LOS PRODUCTOS/SERVICIOS QUE OFRECE CADA PROVEEDOR EN PARTICULAR
CREATE TABLE SGFENS_PROVEEDOR_PRODUCTO(
    ID_PROVEEDOR_PRODUCTO INT(11) NOT NULL PRIMARY KEY AUTO_INCREMENT,
    ID_SGFENS_PRODUCTO_SERVICIO INT(11) NOT NULL COMMENT 'ID DEL PRODUCTO',
    ID_SGFENS_PRODUCTO_PROVEEDOR INT(11) NOT NULL COMMENT 'ID DEL PROVEEDOR',
    VOLUMEN_DISPONIBLE DOUBLE DEFAULT 0,
    CADUCIDAD DATE,
    FECHA_DISPONIBILIDAD DATE,    
    UNIDAD VARCHAR(100),
    PRECIO_MEDIO_MAYOREO DOUBLE DEFAULT 0,
    MIN_MEDIO_MAYOREO DOUBLE DEFAULT 0,
    MAX_MEDIO_MAYOREO DOUBLE DEFAULT 0,
    PRECIO_MENUDEO DOUBLE DEFAULT 0,
    MAX_MENUDEO DOUBLE DEFAULT 0,
    PRECIO_MAYOREO DOUBLE DEFAULT 0,
    MIN_MAYOREO DOUBLE DEFAULT 0,
    ID_CATEGORIA INT(11) DEFAULT 0,
    NOMBRE_IMAGEN_PRODUCTO_SERVICIO VARCHAR(250)
);

ALTER TABLE QUARTZ_SGFENS_METODO_PAGO ADD ID_EMPRESA INT(10) NOT NULL DEFAULT 0;

--Leonardo Montes de Oca, 14-08-2015
--Tabla para el control de la vía de embarque del sistema de sincronizacion, principalmente microsip
CREATE TABLE VIA_EMBARQUE(
    ID_VIA_EMBARQUE INT(11) NOT NULL PRIMARY KEY AUTO_INCREMENT,    
    ID_EMPRESA INT(11),
    ID_ESTATUS INT(1) DEFAULT 1,
    NOMBRE VARCHAR(50),
    DESCRIPCION VARCHAR(250),
    CLAVE VARCHAR(20),
    SINCRONIZACION_MICROSIP INT(1) DEFAULT 0 COMMENT 'ACTUALIZADO CON MICROSIP, 0 NUEVO, 1 SINCRONIZADO, 2 EDITADO Y FALTA SINCRONIZACION'
);
ALTER TABLE SGFENS_PEDIDO ADD COLUMN ID_VIA_EMBARQUE INT(10) DEFAULT 0 COMMENT 'ID DE LA VIA DE EMBARQUE DELL PEDIDO, ESTO PARA MICROSIP, SISTEMA TERCERO';

--Leonardo, 17-08-2015
--Tabla para el control de los quartz de via de embarque
CREATE TABLE QUARTZ_VIA_EMBARQUE(
    ID_QUARTZ INT(11) NOT NULL AUTO_INCREMENT,
    ID_VIA_EMBARQUE_EVC INT(11) COMMENT 'ID DE LA VIA DE EMBARQUE EN EL SISTEMA DEL EVC',
    ID_VIA_EMBARQUE_SISTEM_TERCERO INT(11) DEFAULT 0 COMMENT 'ID DE VIA DE EMBARQUE DEL SISTEMA TERCERO, 0 SI MANEJA EL ATRIBUTO DE CLAVE',
    CLAVE VARCHAR(50) DEFAULT NULL COMMENT 'SI EL SISTEMA TERCERO NO MANEJAN IDs Y SE UTILIZA VARCHAR PARA IDENTIFICARLO SE OCUPA ESTE ATRIBUTO',
    ID_SISTEMA_TERCERO INT(2) DEFAULT 1 COMMENT 'SISTEMAS TERCEROS; 1 MICROSIP, ',
    ID_EMPRESA INT(10) NOT NULL DEFAULT 0,
    PRIMARY KEY(ID_QUARTZ)
);



--Cesar, 26-08-2015
--Tabla para multiples Registros Patronales asociados a una empresa
CREATE TABLE nomina_registro_patronal( 
    id_nomina_reg_patronal INT NOT NULL AUTO_INCREMENT COMMENT 'ID autoincrementable de tabla', 
    id_empresa INT NOT NULL COMMENT 'ID de Empresa a la que pertenece este registro patronal', 
    registro_patronal VARCHAR(20) NOT NULL COMMENT 'Registro Patronal asociado a la empresa', 
    PRIMARY KEY (id_nomina_reg_patronal)
);
--Cesar, 27-08-2015
-- Modificamos tabla con nuevo atributo para relacion de cada comprobante de nomina con un registro patronal
ALTER TABLE nomina_comprobante_descripcion 
ADD COLUMN ID_NOMINA_REG_PATRONAL INT NULL COMMENT 'RELACION A REGISTRO PATRONAL DE ESTE COMPROBANTE DE NOMINA';

--Cesar, 27-08-2015
-- Script para crear registros patronales en tabla de relacion nueva, 
-- para empresas que ya usan nomina y que ya tenian este dato en la tabla empresa
-- **********
-- IMPORTANTE: solo ejecutar 1 vez en cada ambiente (pruebas, desarrollo, produccion)
INSERT INTO nomina_registro_patronal (id_empresa, registro_patronal)
	(SELECT id_empresa, registro_patronal 
	FROM empresa
	WHERE registro_patronal <> '' AND registro_patronal IS NOT NULL);

--Cesar, 28-08-2015
-- Scripta para crear relaciones entre comprobantes de nomina existentes y los recien creados registros patronales
-- **********
-- IMPORTANTE: solo ejecutar 1 vez en cada ambiente (pruebas, desarrollo, produccion)
UPDATE nomina_comprobante_descripcion AS nom
INNER JOIN comprobante_fiscal AS cf ON nom.ID_CROMPROBANTE_FISCAL=cf.ID_COMPROBANTE_FISCAL
INNER JOIN nomina_registro_patronal AS rp ON rp.id_empresa = cf.ID_EMPRESA
SET nom.ID_NOMINA_REG_PATRONAL = rp.id_nomina_reg_patronal

-- Héctor 28-08-2015
-- Permiso modulo Importa Datos Excel
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_ADMINISTRACION_IMPORTA_DATOS','MADMIN_IMPORTADATOS');

-- Héctor
-- Registro de archivos cargados  
CREATE TABLE carga_xls(
ID_CARGA INT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'IDENTIFICADOR',
ID_TIPO_CARGA INT NOT NULL DEFAULT 0 COMMENT 'IDENTIFICADOR TIPO CARGA 1- CONCEPTOS , 2-CLIENTES',
ID_EMPRESA INT NOT NULL COMMENT 'ID EMPRESA LLAVE FORANEA',
ID_USUARIO INT NOT NULL COMMENT 'USUARIO QUE SUBE EL ARCHIVO',
FECHA DATETIME COMMENT 'FECHA Y HORA EN QUE SE SUBIO EL ARCHIVO',
NOMBRE_ARCHIVO VARCHAR(200) COMMENT 'NOMBRE DEL ARCHIVO SUBIDO',
ID_ESTATUS_CARGA INT COMMENT '1- CARGA COMPLETA, 2- CARGA INCOMPLETA (CON ERRORES), 3- OTRO',
LOG_TEXT VARCHAR(5000) DEFAULT '' COMMENT 'ALMACENA LOS ERRORES ARROJADOS DURANTE LA CARGA DEL ARCHIVO'
);

-- Leonardo, 01-09-2015
-- Nueva addenda para Liconsa.
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (19, 1, 'Liconsa', 'Liconsa', 'LICONSA1');


--Roberto, 07-09-2015
--Campo de permiso para crear clientes, solo se utilizará en la apk POS Móvil
ALTER TABLE empleado
ADD COLUMN PERMISO_CREAR_CLIENTE INT NULL DEFAULT '1' COMMENT 'CAMPO PARA PERMISO DE CREAR CLIENTES EN LA NUEVA APK POS MOVIL';

--Leonardo, 10-09-2015
--Campo para la clave del cliente en el sistema de microsip
ALTER TABLE CLIENTE
ADD COLUMN CLAVE VARCHAR(50) DEFAULT '' COMMENT 'CLAVE DEL SISTEMA TERCERO, ESTE CAMPO PARA LA SINCRONIZACION Y DE MICROSIP';


-- Héctor 08-09-2015
-- Permiso modulo Metas de venta
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_VENTAS_METAS_VENTA','MVENTA_METAS VENTA');

-- Metas de venta
CREATE TABLE metas_venta(
ID_META_VENTA INT AUTO_INCREMENT NOT NULL PRIMARY KEY COMMENT 'IDENTIFICADOR UNICO',
ID_EMPRESA INT NOT NULL COMMENT 'IDENTIFICADOR EMPRESA',
FECHA_CREACION DATETIME COMMENT 'FECHA EN QUE SE CREO LA META',
NOMBRE_META VARCHAR(100) COMMENT 'NOMBRE DE META',
ID_COMPONENTE_META INT NOT NULL COMMENT '1-MONTO DE VENTA, 2-CLIENTES, 3-VISITAS,4-PROSPECTOS',
PERIODO INT COMMENT '1=PERIODO, 2=DIARIO, 3= SEMANAL, 4=QUINCENLA, 5=MENSUAL , 6=BIMESTRAL, 7=TRIMESTRAL, 8=ANUAL',
DURACION INT DEFAULT 1 COMMENT 'DURANTE CUANTO TIEMPO SE REPETIRA LA META',
ID_ESTATUS INT COMMENT '1- ACTIVA, 2-INACTIVA'
);

-- Metas de venta
CREATE TABLE metas_empleado(
ID_META_VENTA INT NOT NULL COMMENT 'IDENTIFICADOR UNICO',
ID_EMPLEADO INT NOT NULL COMMENT 'EMPLEADO AL QUE SE LE ASIGNA LA META',
ID_ESTATUS INT COMMENT '1- ACTIVA, 2-INACTIVA',
OBJETIVO_META DOUBLE DEFAULT 0 COMMENT 'OBJETIVO A CUMPLIR EN LA META',
CICLO_META_EMPLEADO INT DEFAULT 0 COMMENT 'CICLO EN QUE SE ENCUENTRA EL EMPLEADO DE LA META PADRE  (N CICLOS * PERIODO) = DURACION',
FECHA_INICIO DATETIME COMMENT 'FECHA INICIO META',
FECHA_FIN DATETIME COMMENT 'FECHA FIN META',
ID_META_EMPLEADO INT PRIMARY KEY NOT NULL AUTO_INCREMENT COMMENT 'IDENTIFICADOR DE METAS DE EMPLEADOS'
);



-- Héctor 18-09-2015
-- Permiso modulo Metas de venta
INSERT INTO PRETO_MODULO (NOMBRE_MODULO, IDENTIFICADOR) VALUES ('MODULO_CATALOGOS_GASTOS','MCAT_GASTOS');

ALTER TABLE gastos_evc
ADD COLUMN ID_EMPRESA INT COMMENT 'ID DE LA EMPRESA QUE REGISTRA EL GASTO',
ADD COLUMN VALIDACION INT DEFAULT 0 COMMENT 'VALIDACIÓN DEL GASTO 0 = PENDIENTE , 1 = ACEPTADO , 2 = RECHAZADO';


-- Cesar 29-09-2015
-- Nuevo registro de sistema tercero para sincronizacion con pretoriano
INSERT INTO quartz_sistema_tercero(ID_SISTEMA,DESCRIPCION) VALUES ( '3','SISTEMA ADMINPAQ 8');

-- Héctor 05-10-2015
-- Campos para metas de venta
ALTER TABLE cliente
ADD COLUMN FECHA_REGISTRO DATETIME COMMENT 'FECHA DE REGISTRO DEL CLIENTE',
ADD COLUMN ID_USUARIO_ALTA INT COMMENT 'ID USUARIO QUE REGISTRO AL CLIENTE -> USO EN METAS DE VENTA';

-- Héctor 09-10-2015
-- Para almacenar fecha y hora de las devoluciones.
ALTER TABLE sgfens_pedido_devolucion_cambio
MODIFY COLUMN FECHA DATETIME COMMENT 'FECHA EN LA QUE SE REGISTRA LA DEVOLUCION';



-- Héctor 09-10-2015
-- Para almacenar fecha y hora de las devoluciones.
ALTER TABLE carga_xls
MODIFY COLUMN LOG_TEXT LONGTEXT DEFAULT '';

-- Cesar 14-10-2015
-- Nuevo registro de sistema tercero para sincronizacion con pretoriano
INSERT INTO quartz_sistema_tercero(ID_SISTEMA,DESCRIPCION) VALUES ( '4','SISTEMA ASPEL SAE 6');


-- Héctor 13-10-2015
-- Permiso para editar clientes desde el movil.
ALTER TABLE empleado
ADD COLUMN PERMISO_ACCIONES_CLIENTE INT NULL DEFAULT '3' COMMENT 'PERMISO ACCIONES CON CLIENTES DESDE MOVIL 0 = NINGUN PERMISO , 1 = SOLO CREAR , 2 = SOLO EDITAR ,3 = CREAR Y EDITAR';

-- Leonardo, 16-10-2015
-- Registros de los reportes automaticos configurables
INSERT INTO tipo_reporte (ID_REPORTE,ID_TIPO_REPORTE,ID_ESTATUS,VISIBLE,DESCRIPCION) VALUES (30,52,1,1,'Reporte de Existencia en Almacenes');
-- Leonardo, 21-10-2015
INSERT INTO tipo_reporte (ID_REPORTE,ID_TIPO_REPORTE,ID_ESTATUS,VISIBLE,DESCRIPCION) VALUES (31,0,2,0,'Reporte General del Día');

-- Leonardo, 19-10-2015
-- Nueva addenda para General Motors.
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (20, 1, 'General Motors', 'GM General Motors', 'GMOTORS1');

-- Leonardo, 22-10-2015
-- Atributos para el control de un solo login en la sesión de usuario
ALTER TABLE USUARIOS

ADD COLUMN LOGIN BOOLEAN DEFAULT FALSE COMMENT 'ATRIBUTO SI ESTA EN TRUE ES QUE HAY O HUBO UNA SESION DE USUARIO NO CERRADA ACTUALMENTE';

ADD COLUMN LOGIN BOOLEAN DEFAULT FALSE COMMENT 'ATRIBUTO SI ESTA EN TRUE ES QUE HAY O HUBO UNA SESION DE USUARIO NO CERRADA ACTUALMENTE';

-- Cesar 04/11/2015
-- Modificación a tabla de inventario repartidor, para poder manejar correctamente ventas a granel
ALTER TABLE empleado_inventario_repartidor 
    ADD COLUMN `EXISTENCIA_GRANEL` DOUBLE DEFAULT '0' NULL COMMENT 'ES LA EXISTENCIA RESTANTE EXPRESADA EN UNIDADES A GRANEL. AL CREARSE EL REGISTRO,SERA IGUAL A CANTIDAD x PESO, Y LUEGO SE IRA DESCONTANDO',
    CHANGE `PESO` `PESO` DOUBLE DEFAULT '0' NULL  COMMENT 'PARA EL PESO DEL ARTICULO-CONCEPTO AL SER POR AGRANEL, ES EL PESO UNITARIO POR PIEZA';

-- Cesar 05/11/2015
-- Modificacion a tabla existencia_almacen, para poder llevar un registro de existencias por peso, cuando sean productos a granel
ALTER TABLE existencia_almacen 
    ADD COLUMN `EXISTENCIA_PESO` DOUBLE DEFAULT '0' NULL COMMENT 'EXISTENCIA EN ALMACEN REPRESENTADA EN PESO, SOLO APLICA PARA PRODUCTOS A GRANEL';
-- Modificacion a tabla de detalle de Pedidos, para poder almacenar el registro de datos en caso de venta a granel
ALTER TABLE sgfens_pedido_producto 
    ADD COLUMN `PESO_UNITARIO` DOUBLE DEFAULT '0' NULL COMMENT 'Para productos a Granel, Peso Unitario de una pieza completa del Producto', 
    ADD COLUMN `CANTIDAD_PESO` DOUBLE DEFAULT '0' NULL COMMENT 'Para productos a Granel, Peso total del producto = CANTIDAD x PESO_UNITARIO',
    ADD COLUMN `CANTIDAD_ENTREGADA_PESO` DOUBLE DEFAULT '0' NULL COMMENT 'Para productos a Granel, Peso Neto Entregado',
    ADD COLUMN `PRECIO_UNITARIO_GRANEL` DOUBLE DEFAULT '0' NULL COMMENT 'Para productos a Granel, Precio Unitario por Unidad a Granel';
-- Modificacion a tabla de movimientos, para almacenar la información en Peso en caso de producto a granel
ALTER TABLE movimiento 
    ADD COLUMN `CONTABILIDAD_PESO` DOUBLE DEFAULT '0' NULL COMMENT 'Para productos a Granel, este campo expresa el TOTAL en Peso asociado a este movimiento';

-- Cesar 06/11/2015
ALTER TABLE concepto 
    ADD COLUMN `ID_CONCEPTO_PADRE` INT DEFAULT '0' NULL COMMENT 'ID DE CONCEPTO PADRE U ORIGEN DEL QUE SE DESPRENDE ESTE SUB CONCEPTO';>>>>>>> .r3933


-- Héctor 20-10-2015
-- Alerta Actualizaciones de app

create table actualizaciones_movil(
	ID_ACTUALIZACION INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	VERSION_CODE int,
	NUM_VERSION VARCHAR(10),
	FECHA_LIBERACION DATE,
	COMENTARIOS TEXT,
	PLATAFORMA INT COMMENT '1-PRODUCCIÓN, 2-PRUEBAS'
);

CREATE TABLE notificaciones_usuarios(
	ID_NOTIFICACION INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	ID_USUARIO INT NOT NULL COMMENT 'ID USUARIO RECEPTOR',
        TITULO VARCHAR(100),
	MENSAJE TEXT COMMENT 'MENSAJE A MOSTRAR',	
        IMAGEN VARCHAR(300),
	FECHA DATETIME ,
	ID_ESTATUS INT DEFAULT 1 COMMENT '1-ACTIVO(MOSTRAR), 2-INACTIVO (NO MOSTRAR)',
	ID_ACTUALIZACION INT NOT NULL DEFAULT 0,
	FOREIGN KEY (ID_USUARIO) REFERENCES usuarios(ID_USUARIOS)	
);

--Hector
-- Campo para imprimir en ticket movil , nombre o descripción.
ALTER TABLE empresa
ADD COLUMN PRINT_TK_PRODS INT DEFAULT 1 COMMENT '1-NOMBRE, 2- DESCRIPCION';

--Leonardo 24-11-2015
--Campo para la comisión correspondiente al consignatario; esto para la venta en consigna
ALTER TABLE CLIENTE
ADD COLUMN COMISION_CONSIGNA DOUBLE DEFAULT 0 COMMENT 'PORCENTAJE QUE CORRESPONDE AL CONSIGNATARIO, SIEMPRE Y CUANDO PERMISO_VENTA_CREDITO = 1' AFTER PERMISO_VENTA_CREDITO;

--ESTATUS DE PEDIDOS, ESTO PARA LA VENTA A CONSIGNA
INSERT INTO sgfens_estatus_pedido (ID_ESTATUS_PEDIDO,NOMBRE,DESCRIPCION) VALUES (5,'CONSIGNA','Venta o pedido en consigna');
INSERT INTO sgfens_estatus_pedido (ID_ESTATUS_PEDIDO,NOMBRE,DESCRIPCION) VALUES (6,'CONSIGNA PARCIAL','Venta o pedido en consigna parcial');

--Campo informativo de que este pedido primeramente fue un pedido en consigna, si esta activo este campo y ademas ya tiene estatus de entregado (pedido normal), es porque ya esta cerrada la consigna
--solo se añadio al comentario un nuevo identificador
ALTER TABLE sgfens_pedido CHANGE CONSIGNA CONSIGNA INT DEFAULT 0 COMMENT 'Indica si la venta es en consigna 0 = No  , 1 = Si (en consigna), 2 = consigna de cliente(este pedido fue consignado antes de ser pedido normal)' ;


/*
*	Cesar Martinez 02/12/2015
*	Horarios laborales para empleados moviles
*/
CREATE TABLE horario(
	ID_HORARIO INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	NOMBRE_HORARIO VARCHAR (30) COMMENT 'ALIAS HORARIO',
	ID_EMPRESA INT(11) NOT NULL,
	ID_ESTATUS INT (2)DEFAULT 1 COMMENT '1-ACTIVO , 2- INACTIVO'
);

CREATE TABLE horario_detalle(
	ID_DETALLE_HORARIO INT PRIMARY KEY NOT NULL  AUTO_INCREMENT,
	ID_HORARIO INT NOT NULL,
	DIA VARCHAR (15) COMMENT 'LUNES,MARTES,MIERCOLES,JUEVES,VIERNES,SABADO,DOMINGO',
	HORA_ENTRADA TIME,
	HORA_SALIDA TIME,
	DIA_DESCANSO  INT(2) DEFAULT 0 COMMENT 'SI ES DIA DESCANSO = 1, NO ES DESCANSO = 0',
	COMIDA_SALIDA TIME,
	COMIDA_ENTRADA TIME,
	PERIODO_COMIDA INT DEFAULT 0 COMMENT 'EXPRESADA EN MINUTOS',
	TOLERANCIA INT DEFAULT 0 COMMENT 'EXPRESADA EN MINUTOS'
);

ALTER TABLE empleado
ADD COLUMN ID_HORARIO INT DEFAULT 0 COMMENT 'HORARIO ASIGNADO AL EMPLEADO';

INSERT INTO preto_modulo(`ID_PRETO_MODULO`,`ID_ESTATUS`,`NOMBRE_MODULO`,`IDENTIFICADOR`) VALUES ( 86,'1','MODULO_CATALOGOS_HORARIOS','MCAT_HORARIOS');

/*
*   Cambios para Seguimiento
*/
ALTER TABLE pos_movil_estatus_parametros 
    ADD COLUMN `t_minutos_recordatorio` INT DEFAULT '1' NULL COMMENT 'Tiempo en minutos de cada cuando se debe repetir la alerta hasta que el usuario cumpla';

ALTER TABLE pos_movil_estatus 
    ADD COLUMN `nombre_imagen` VARCHAR(200) NULL COMMENT 'Nombre de la imagen capturada asociada al Estatus';

/* Porcentaje de pila restante de moviles */
ALTER TABLE dispositivo_movil 
    ADD COLUMN `PCT_PILA` DOUBLE DEFAULT '-1' NULL COMMENT 'PORCENTAJE DE PILA ENVIADO DESDE EL MOVIL';

-- Nuevos campos puntos de interes
-- 30-21-2015
alter table puntos_interes	
add column DIRECCION varchar(300) default '' COMMENT 'DIRECCION 1 LINEA',
ADD COLUMN IMAGEN VARCHAR(100) COMMENT 'ICONO QUE APARECERA EN EL MAPA';

-- Cesar 18-12-2015
-- Nuevo parametro para paginacion en pretoriano
INSERT INTO `parametros`(`ID_PARAMETRO`,`NOMBRE`,`DESCRIPCION`) VALUES ( '73','app.preto.paginacion.registrosPorPagina','30');


-- Héctor 04-12-2015

INSERT INTO quartz_sistema_tercero
VALUES(5,'MAGENTO 1.9.2.2');

-- Cesar 21-12-2015
-- Cambio para usar en un futuro (de acuerdo a Ing. Gabriel) , para productos perecederos
ALTER TABLE `movimiento` 
    ADD COLUMN `NUMERO_LOTE` VARCHAR(30) NULL COMMENT 'Para productos perecederos', 
    ADD COLUMN `FECHA_CADUCIDAD` DATE NULL COMMENT 'Para productos perecederos';

-- Leonardo, 21-12-2015
--TABLA PARA EL HISTORICO DE INVENTARIO INICIAL Y FINAL DE UN VENDEDOR
CREATE TABLE INVENTARIO_HISTORICO_VENDEDOR (
    ID_EMPLEADO INT(11),
    ID_CONCEPTO INT(11),
    CANTIDAD_ASIGNADA DOUBLE COMMENT 'INVENTARIO CON EL QUE INICIO EL VENDEDOR AL INICIO DE LA JORNADA',    
    CANTIDAD_TERMINNO DOUBLE COMMENT 'INVENTARIO CON EL QUE FINALIZO EL VENDEDOR AL FIN DE LA JORNADA',
    FECHA_REGISTRO DATETIME COMMENT 'FECHA EN LA QUE SE REALIZA EL REGISTRO',
    FECHA_INICIAL_CORTE DATETIME COMMENT 'FECHA EN LA QUE SE INICIO EL CORTE (FECHA_REGISTRO DE LA TABLA inventario_inicial_vendedor)',
    FECHA_FINAL_CORTE DATETIME COMMENT 'FECHA FINAL EN LA QUE SE REALIZA LA SIGUIENTE ASIGNACION DE INVENTARIO, ESTO PARA QUE SIRVA DE INTERVALO '  
);

-- Cesar 22-12-2015
-- Configuración extra para ticket movil
ALTER TABLE `empresa` 
    ADD COLUMN `TK_MOVIL_TIPO` INT DEFAULT '0' NULL COMMENT 'Tipo de ticket: 0 - Normal, 1 - Extendido', 
    ADD COLUMN `TK_MOVIL_POR_MARCA` INT DEFAULT '0' NULL COMMENT 'Modo de mostrar marcas en Ticket: 0 - Agrupado por marca, 1 - Marca a un lado de cada producto',
    ADD COLUMN `TK_MOVIL_MOSTRAR_ZONA` INT DEFAULT '0' NULL COMMENT 'Mostrar Zona de empleado en ticket: 0 - No, 1 - Si', 
    ADD COLUMN `TK_MOVIL_MOSTRAR_FOLIO` INT DEFAULT '0' NULL COMMENT 'Mostrar Folio Movil empleado: 0 - No mostrar, 1 - Mostrar';

-- Tabla para Folios Moviles por empleado (internos, son solo informativos)
CREATE TABLE folios_movil_empleado (                                                                                         
  ID_FOLIO_MOVIL_EMPLEADO INT(10) NOT NULL AUTO_INCREMENT,                                                                                  
  ID_EMPRESA INT(10) NOT NULL,                                                                                
  FOLIO_DESDE INT(20) NOT NULL,                                                                               
  FOLIO_HASTA INT(20) NOT NULL,                                                                               
  ULTIMO_FOLIO INT(20) NOT NULL,
  SERIE VARCHAR(10) DEFAULT NULL,
  ID_ESTATUS INT(10) DEFAULT NULL,                                                                            
  FECHA_GENERACION DATETIME DEFAULT NULL,
  TIPO_FOLIO_MOVIL INT(10) DEFAULT '1' NULL COMMENT 'Tipo de Serie: 1 - Pedidos ',
  PRIMARY KEY (ID_FOLIO_MOVIL_EMPLEADO),                                                                                     
  KEY ID_EMPRESA (ID_EMPRESA),                                                                              
  KEY ID_ESTATUS (ID_ESTATUS)
);

-- modificacion en empleado para relacion con folios_movil_empleado
ALTER TABLE `empleado` 
    ADD COLUMN `ID_FOLIO_MOVIL_EMPLEADO` INT DEFAULT '0' NULL COMMENT 'SERIE MOVIL DE EMPLEADO ASOCIADA';

-- modificacion de pedidos para nuevos datos de folios moviles (informativos)
ALTER TABLE `sgfens_pedido` 
    ADD COLUMN `ID_FOLIO_MOVIL_EMPLEADO` INT DEFAULT '0' NULL COMMENT 'ID ASOCIADO DE FOLIO SERIE MOVIL EMPLEADO', 
    ADD COLUMN `FOLIO_MOVIL_EMPLEADO_GENERADO` VARCHAR(50) NULL COMMENT 'FOLIO MOVIL EMPLEADO GENERADO EN CASO DE APLICAR';

-- nuevo modulo para Captura de Folios Internos Moviles
INSERT INTO preto_modulo(`ID_PRETO_MODULO`,`ID_ESTATUS`,`NOMBRE_MODULO`,`IDENTIFICADOR`) VALUES ( 87,'1','MODULO_ADMIN_FOLIOS_MOVILES','MADM_FOLMOVIL');

-- Héctor
-- Relacion con eststus pedido sistema tercero
ALTER TABLE sgfens_pedido
ADD COLUMN ID_ESTATUS_PEDIDO_SISTEMA_TERCERO INT DEFAULT 0 COMMENT 'Campo para identificar el estatus original del sistema tercero'; 

-- Cesar 29-12-2015
-- Modificacion para rutas, dia de repeticion para empleado
ALTER TABLE ruta 
ADD COLUMN `DIAS_SEMANA_RUTA` VARCHAR(100) NULL COMMENT 'Dias de la semana que se usara dicha ruta en caso de asignarla a un empleado. LUN, MAR, MIE...' AFTER `ID_EMPRESA`;

/*
-- Héctor 31-12-2015
-- Integracion de estatus para pedidos con sistemas terceros
CREATE TABLE estatus_pedido_sistema_tercero(
ID_ESTATUS_PEDIDO_TERCERO INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
NOMBRE_ESTATUS VARCHAR(50),
DESCRIPCION VARCHAR(100),
SINCRONIZACION_MICROSIP INT(1),
ID_EMPRESA INT 
);

CREATE TABLE quartz_estatus_pedido(
ID_QUARTZ INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
ID_ESTATUS_TERCERO_EVC INT COMMENT 'RELACION CON estatus_pedido_sistema_tercero.ID_ESTATUS_PEDIDO_TERCERO',
ID_ESTATUS_SISTEMA_TERCERO INT,
CLAVE VARCHAR(50),
ID_SISTEMA_TERCERO INT (2),
ID_EMPRESA INT 
);*/
                         

-- Héctor 05-01-2016
-- Nuevo modulo cronometro
CREATE TABLE cronometro(
	ID_CRONOMETRO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	ID_EMPRESA INT,
	ID_EMPLEADO INT,
	ID_CLIENTE INT,
	FECHA_INICIO DATETIME,
	FECHA_FIN DATETIME,
	LATITUD DOUBLE DEFAULT 0,
	LONGITUD DOUBLE DEFAULT 0,
	ID_ESTATUS INT DEFAULT 1	
);                              
                                                                                                                                                 
INSERT INTO preto_modulo(`ID_PRETO_MODULO`,`ID_ESTATUS`,`NOMBRE_MODULO`,`IDENTIFICADOR`) VALUES ( 88,1,'MODULO_PRETO_MOVIL_CRONOMETRO','MPRETOMOVIL_CRONOMETRO');

-- Héctor 06-01-2015
-- Indica el efectivo devuelto al cliente

ALTER TABLE sgfens_pedido_devolucion_cambio
ADD COLUMN DEVOLUCION_EFCTIVO DOUBLE DEFAULT 0 COMMENT 'EFECTIVO DEVUELTO AL CLIENTE';


-- Columna para diferenciar tipo de pago e/s
ALTER TABLE sgfens_cobranza_metodo_pago
ADD COLUMN TIPO_PAGO VARCHAR (10) COMMENT 'ENTRADA O SALIDA';

UPDATE sgfens_cobranza_metodo_pago
SET TIPO_PAGO = 'ENTRADA';

-- Nuevo metodo de pago negativo (salida)
INSERT INTO sgfens_cobranza_metodo_pago
VALUES (10,'Devolución Efectivo','Devolución de efectivo al cliente , este pago es una salida de dinero',0,'SALIDA');

-- Commentario nuevos estatus bonificacion de devoluciones
ALTER TABLE sgfens_pedido_devolucion_cambio
MODIFY DIFERENCIA_FAVOR  INT(1) COMMENT '0 - A FAVOR DE NADIE 1- BONIFICACION A CLIENTE, 2 SI LA DIFERENCIA ES EN CONTRA DEL CLIENTE, 3 - LIQUIDADO , 4 - PAGO PARCIAL';


-- Héctor 08/01/2015
-- Nueva unidad de medida SCT
INSERT INTO tipo_unidad 
VALUES (58,'HECTAREA');

-- Leonardo, 12-01-2016
-- Nueva addenda para Tony
INSERT INTO ADDENDAS_DISPONIBLES (ID_ADDENDA, ID_ESTATUS, NOMBRE_ADDENDA, DESCRIPCION, IDENTIFICADOR) VALUES (21, 1, 'Tony Kontender', 'Tony Kontender', 'TONYKON1');

INSERT INTO preto_modulo(`ID_PRETO_MODULO`,`ID_ESTATUS`,`NOMBRE_MODULO`,`IDENTIFICADOR`) VALUES ( 89 ,'1','MODULO_PRETO_MOVIL_CONN_QPAY','MPRETOMOVIL_CQPAY');

--Leonardo, 26/01/2016
--Columnas para el control de tiempo en el que estara activa la geocerca
ALTER TABLE EMPLEADO ADD COLUMN HORA_INICIO TIME COMMENT 'HORA DE INICIO DE GEOCERCA' AFTER ID_GEOCERCA, ADD COLUMN HORA_FIN TIME COMMENT 'HORA DE FIN DE GEOCERCA' AFTER HORA_INICIO;

--Leonardo, 28-01-2016
--Columna adicional para colocar cuando fue modificada la ruta:
ALTER TABLE RUTA ADD COLUMN FH_MODIFICA_RUTA DATETIME DEFAULT NULL COMMENT 'FECHA DE CUANDO SE MODIFICA UNA RUTA' AFTER FH_REG_RUTA;

-- César 28-01-2016
-- Cambio requerimientos INADEM
-- Tabla para llevar registro historico de entregas
CREATE TABLE sgfens_pedido_entrega( 
    `id_pedido_entrega` INT NOT NULL AUTO_INCREMENT COMMENT 'ID unico de tabla', 
    `id_empresa` INT NOT NULL COMMENT 'ID de empresa a la que pertenece registro', 
    `id_estatus` INT NOT NULL DEFAULT '1' COMMENT 'Estatus del registro, 1 Activo, 2 Inactivo', 
    `fecha_hora` DATETIME NOT NULL COMMENT 'Fecha y Hora del registro', 
    `id_pedido` INT COMMENT 'ID del pedido al que corresponde entrega', 
    `id_usuario_vendedor` INT COMMENT 'ID del usuario asociado a empleado que genero la entrega', 
    `total_cant_entregada` DOUBLE DEFAULT '0' COMMENT 'Total de cantidad productos entregados', 
    `total_cant_entregada_peso` DOUBLE DEFAULT '0' COMMENT 'Total en peso de cantidad de productos granel entregada', 
    PRIMARY KEY (`id_pedido_entrega`)
);


-- César 02-02-2016
-- Cambio requerimientos INADEM
-- Modificacion de tabla Clientes para llevar control de credito a cliente con mas detalle
ALTER TABLE cliente 
    ADD COLUMN `CREDITO_MONTO_MAX` DOUBLE DEFAULT '0' NULL COMMENT 'MONTO MAXIMO DE CREDITO PERMITIDO AL CLIENTE', 
    ADD COLUMN `CREDITO_DIAS_MAX` INT DEFAULT '0' NULL COMMENT 'NUMERO MAXIMO DE DIAS QUE SE PERMITE PARA QUE EL CLIENTE PAGUE UN CREDITO';

-- Modificacion de tabla Empleado para permiso sobre Devoluciones
ALTER TABLE empleado 
    ADD COLUMN `PERMISO_DEVOLUCIONES` INT DEFAULT '1' NULL COMMENT 'INDICA SI EL EMPLEADO TIENE PERMISO PARA REALIZAR CAMBIOS O DEVOLUCIONES. 1=SI, 0=NO';

-- Leonardo 04-02-2016
-- Tablas para el catalogo de zonas horarias y para el control de la empresa que lo ha activado
CREATE TABLE ZONA_HORARIA_CATALOGO(
    ID_ZONA_HORARIA_CATALOGO INT NOT NULL AUTO_INCREMENT,
    ID_ESTATUS INT NOT NULL DEFAULT '1' COMMENT '1 ACTIVO, 2 DESACTIVADO',
    ZONA_HORARIA VARCHAR(300),
    PRIMARY KEY (ID_ZONA_HORARIA_CATALOGO)
);

CREATE TABLE ZONA_HORARIA(
    ID_EMPRESA INT NOT NULL COMMENT 'ID DE LA TABLA DE EMPRESA QUE TIENE CREADA SU ZONA HORARIA, PUEDE SER SUCURSAL O MATRIZ',
    ID_ZONA_HORARIA_CATALOGO INT NOT NULL COMMENT 'ID DE LA TABLA ZONA_HORARIA_CATALOGO',   
    FECHA DATETIME COMMENT 'FECHA Y HORA LOCAL MEXICO EN LA QUE SE DA DE ALTA LA ZONA HORARIA',
    PRIMARY KEY (ID_EMPRESA)
);

INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('America/Mexico_City');
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('America/Argentina/Cordoba');
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('America/Chicago');
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('America/Lima');--PERU
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('America/Santiago');
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('America/Puerto_Rico');
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('Europe/Berlin');
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('Europe/Paris');

CREATE TABLE ZONA_HORARIA_LOG(
    ID_ZONA_HORARIA_LOG INT NOT NULL AUTO_INCREMENT,
    ID_EMPRESA INT NOT NULL COMMENT 'ID DE LA EMPRESA A LA QUE LE CAMBIARON LA ZONA HORARIA',
    ID_USUARIOS INT NOT NULL COMMENT 'ID DEL USUARIO QUE REALIZA EL AJUSTE DE LA ZONA HORARIA',
    DESCRIPCION VARCHAR(500) DEFAULT '' COMMENT 'DESCRIPCION DE QUE AJUSTE SE REALIZO',
    FECHA DATETIME COMMENT 'FECHA Y HORA LOCAL MEXICO EN LA QUE SE REALIZA EL AJUSTE DE LA ZONA HORARIA',
    PRIMARY KEY (ID_ZONA_HORARIA_LOG)
);


-- Cesar Martinez 04/02/2016
-- Datos adicionales para pagos con tarjeta
ALTER TABLE banco_operacion 
    ADD COLUMN `DATA_ARQC` VARCHAR(40) NULL COMMENT 'Dato ARQC de pago con tarjeta', 
    ADD COLUMN `DATA_AID` VARCHAR(40) NULL COMMENT 'Dato AID de pago con tarjeta', 
    ADD COLUMN `DATA_TSI` VARCHAR(40) NULL COMMENT 'Dato TSI de pago con tarjeta', 
    ADD COLUMN `DATA_REF` VARCHAR(40) NULL COMMENT 'Dato REF de pago con tarjeta', 
    ADD COLUMN `DATA_EXTRA1` VARCHAR(50) NULL COMMENT 'Espacio para dato adicional alfanumerico', 
    ADD COLUMN `DATA_EXTRA2` VARCHAR(50) NULL COMMENT 'Espacio para dato adicional alfanumerico';

-- Cesar Martinez 15/02/2016
-- Tablas nuevas para almacenar "sesiones" de asignacion de inventario a empleados
-- y posteriormente reutilizarlas de forma automática.

CREATE TABLE emp_asignacion_inventario( 
    `id_asignacion_inventario` INT NOT NULL AUTO_INCREMENT COMMENT 'ID unico en tabla', 
    `id_empresa` INT COMMENT 'ID de empresa', 
    `id_empleado` INT COMMENT 'ID de empleado', 
    `id_estatus` INT COMMENT 'Estatus del registro, 1=activo, 2=inactivo', 
    `num_dias_repeticion` INT DEFAULT '0' COMMENT 'Distancia en numero de días para cada repeticion', 
    `ultima_rep_fecha_hr` DATETIME COMMENT 'Fecha y hora de la ultima repeticion de la asignacion', 
    `ultima_rep_exito` INT DEFAULT '0' COMMENT 'Flag para indicar si tuvo exito la ultima repeticion, 1=true, 2=false', 
    `ultima_rep_observacion` VARCHAR(500) COMMENT 'Observaciones, notas o errores de la ultima repetición', 
    PRIMARY KEY (`id_asignacion_inventario`)
);

CREATE TABLE emp_asignacion_inventario_detalle( 
    `id_asignacion_inventario_detalle` INT NOT NULL AUTO_INCREMENT COMMENT 'ID autoincrementable de tabla', 
    `id_asignacion_inventario` INT NOT NULL COMMENT 'ID de la asignacion a la que pertenece este detalle', 
    `id_concepto` INT NOT NULL COMMENT 'ID de concepto asignado', 
    `cantidad` DOUBLE DEFAULT '0' COMMENT 'cantidad de concepto asignado', 
    `peso` DOUBLE DEFAULT '0' COMMENT 'Peso unitario del concepto en el movimiento', 
    `existencia_granel` DOUBLE DEFAULT '0' COMMENT 'Peso total del movimiento, se calcula: cantidad x peso', 
    `id_estatus` INT NOT NULL DEFAULT '1' COMMENT 'Estatus del detalle, 1=activo, 2=inactivo', 
    `id_almacen` INT DEFAULT '0' NULL COMMENT 'ID de almacen que se afectara con el movimiento de asignacion',
    PRIMARY KEY (`id_asignacion_inventario_detalle`)
);


-- Leonardo 17-02-2016
-- ATRIBUTO PARA EFICIENTAR LAS RUTAS, SOLO ES PARA USO DE NEGOCIO EN EL CODIGO, ESTA DATO SIEMPRE DEBERA SER CERO
ALTER TABLE RUTA_MARCADOR
    ADD COLUMN DISTANCIA_PUNTO DOUBLE DEFAULT 0 COMMENT 'ATRIBUTO PARA EFICIENTAR LAS RUTAS, SOLO ES PARA USO DE NEGOCIO EN EL CODIGO, ESTA DATO SIEMPRE DEBERA SER CERO EN BASE DE DATOS';

-- Leonardo 23-02-2016
-- Modulo de Call Center
CREATE TABLE CALL_CENTER(
    ID_CALL_CENTER INT NOT NULL AUTO_INCREMENT,
    ID_EMPRESA INT,
    ID_CLIENTE INT COMMENT 'SI NO ES CLIENTE, ESTE TENDRA VALOR 0 Y ESTARAN LLENOS LOS CAMPOS DE NOMBRE, APELLIDOS, TEL, CORREO',
    NOMBRE VARCHAR(100) DEFAULT '' COMMENT 'NOMBRE DE LA PERSONA QUE LEVANTO EL REPORTE, SI NO ES CLIENTE',
    APELLIDO_PATERNO VARCHAR(100) DEFAULT '' COMMENT 'APELLIDO PATERNO DE LA PERSONA QUE LEVANTO EL REPORTE, SI NO ES CLIENTE',
    APELLIDO_MATERNO VARCHAR(100) DEFAULT '' COMMENT 'APELLIDO MATERNO DE LA PERSONA QUE LEVANTO EL REPORTE, SI NO ES CLIENTE',
    TELEFONO VARCHAR(50) DEFAULT '' COMMENT 'TELEFONO DE LA PERSONA QUE LEVANTO EL REPORTE, SI NO ES CLIENTE',
    CORREO VARCHAR(50) DEFAULT '' COMMENT 'CORREO DE LA PERSONA QUE LEVANTO EL REPORTE, SI NO ES CLIENTE',
    TIPO INT(1) DEFAULT 0 COMMENT '0 SIN TIPO, 1 SOLICITUD, 2 QUEJA, 3 SUGERENCIA',
    ESTADO INT(1) DEFAULT 1 COMMENT '1 ABIERTO, 2 CERRADO, 3 RE-ABIERTO',
    DESCRIPCION VARCHAR(500) DEFAULT '' COMMENT 'DESCRIPCION DEL TICKET',
    ID_USUARIO INT COMMENT 'ID DEL USUARIO QUE LEVANTO EL TICKET',
    NUMERO_TICKET VARCHAR(20) COMMENT 'NUMERO DE TICKET',
    FECHA_CREACION DATETIME,
    CON_SEGUIMIENTO INT(1) DEFAULT 0 COMMENT 'SI EL TICKET HA TENIDO ALGUN SEGIMIENTO Y ESTE ESTA EN LA TABLA CALL_CENTER_SEGUIMIENTO, 0 SIN, 1 CON SEGUIMIENTO',
    PRIMARY KEY (ID_CALL_CENTER)
);

CREATE TABLE CALL_CENTER_SEGUIMIENTO(
    ID_CALL_CENTER_SEGUIMIENTO INT NOT NULL AUTO_INCREMENT,
    ID_CALL_CENTER INT COMMENT 'ID DE LA TABLA CALL_CENTER, QUE ES AL QUE PERTENECE ESTE SEGUIMIENTO',
    ID_USUARIO INT COMMENT 'ID DEL USUARIO QUE REALIZO EL SEGUIMIENTO',
    FECHA_CREACION DATETIME, 
    DESCRIPCION VARCHAR(500) DEFAULT '' COMMENT 'DESCRIPCION DEL SEGUIMIENTO', 
    PRIMARY KEY (ID_CALL_CENTER_SEGUIMIENTO)
);

CREATE TABLE CALL_CENTER_FOLIADO(
    ID_CALL_CENTER_FOLIADO INT NOT NULL AUTO_INCREMENT,
    ID_EMPRESA INT COMMENT 'ID DE LA MATRIZ AL QUE PERTENECE EL FOLIADO',
    ULTIMO_FOLIO BIGINT(20) COMMENT 'ULTIMO FOLIO UTILIZADO',
    ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 ACTIVO, 2 INACTIVO',
    PRIMARY KEY (ID_CALL_CENTER_FOLIADO)
);

INSERT INTO ROLES (ID_ROLES,NOMBRE,DESCRIPCION,OCULTO,ID_EMPRESA,MOSTRAR_PRETORIANO) VALUES (37,'CALL CENTER','Rol de usuario para el modulo de Call Center',true,-1,1);

INSERT INTO preto_modulo(`ID_PRETO_MODULO`,`ID_ESTATUS`,`NOMBRE_MODULO`,`IDENTIFICADOR`) VALUES (90 ,'1','MODULO_CALL_CENTER','MCALL_CENTER1');

-- Leonardo 02-03-2016 
-- Tablas y modulo para equipo comodato
CREATE TABLE COMODATO (
    ID_COMODATO INT NOT NULL AUTO_INCREMENT,
    ID_EMPRESA INT,
    FECHA_CREACION DATETIME COMMENT 'FECHA Y HORA CUANDO SE CREA EL REGISTRO',
    NOMBRE VARCHAR(150) COMMENT 'NOMBRE DEL EQUIPO',
    DESCRIPCION TEXT,
    NUMERO_SERIE VARCHAR(80),
    MARCA VARCHAR(100),
    MODELO VARCHAR(100),
    TIPO VARCHAR(100),
    CAPACIDAD VARCHAR(100),
    ESTADO INT DEFAULT 0 COMMENT '1 NUEVO, 2 RE-USO',    
    ESTATUS INT DEFAULT 2 COMMENT '1 COMODATO-ASIGNADO A UN CLIENTE, 2 DISPONIBLE-OPCION POR DEFAULT, 3 INACTIVO-ESTATUS CUANDO SE DA DE BAJA, 4 DESCOMPUESTO-DESCOMPUESTO O EN MANTENIMIENTO',
    ID_ALMACEN INT DEFAULT 0 COMMENT 'ID_ALMACEN EN LA CUAL ESTA RESGUARDADO, 0 SI NO ESTA EN ALGUN ALMACEN Y HAY DATOS DE RESGUARDO',
    ID_CLIENTE INT DEFAULT 0 COMMENT 'ID_CLIENTE AL CUAL ESTA ASIGNADO EL EQUIPO',
    FECHA_ASIGNACION_CLIENTE DATETIME COMMENT 'FECHA Y HORA CUANDO SE ASIGNA A CLIENTE',
    NOMBRE_RECIBE VARCHAR(200) COMMENT 'NOMBRE DE QUIEN RECIBE EL EQUIPO',
    DIRECCION_RESGUARDO TEXT,
    ID_USUARIO_VENDEDOR INT DEFAULT 0 COMMENT 'ID DE USUARIO VENDEDOR',
    CONTRATO_NOMBRE_ARCHIVO VARCHAR(300) COMMENT 'NOMBRE DE ARCHIVO EN FORMATO PDF O IMAGEN QUE CONTIENE EL CONTRATO FIRMADO',
    PRIMARY KEY (ID_COMODATO)
);
-- TABLA QUE CONTIENE LA RELACION DEL COMODATO Y ALGUN/UNOS PRODUCTOS QUE CONTIENE EL COMODATO
CREATE TABLE COMODATO_PRODUCTO(
    ID_COMODATO_PRODUCTO INT NOT NULL AUTO_INCREMENT,
    ID_COMODATO INT COMMENT 'ID_COMODATO DE LA LLAVE PRIMARIA DE LA TABLA COMODATO',
    ID_CONCEPTO INT,
    PRIMARY KEY (ID_COMODATO_PRODUCTO)
);

CREATE TABLE COMODATO_MANTENIMIENTO(
    ID_COMODATO_MANTENIMIENTO INT NOT NULL AUTO_INCREMENT,
    ID_COMODATO INT COMMENT 'ID_COMODATO DE LA LLAVE PRIMARIA DE LA TABLA COMODATO',
    ID_CLIENTE INT COMMENT 'ID_CLIENTE AL CUAL SE LE HIZO EL MANTENIMIENTO',
    ID_EMPRESA INT,
    TECNICO VARCHAR(150) COMMENT 'NOMBRE DEL TECNICO',
    DESCRIPCION TEXT COMMENT 'DESCRIPCION DEL MANTENIMIENTO',
    ESTATUS INT(1) COMMENT '1 MANTENIMIENTO EXITOSO, 2 DESCOMPUESTO, 3 PENDIENTE',
    NOMBRE_ATENDIO VARCHAR(150) COMMENT 'NOMBRE DE LA PERSONA QUIEN ATENDIO',
    FECHA_REALIZACION_MANTENIMIENTO DATE COMMENT 'FECHA EN LA QUE SE HACE EL MANTENIMIENTO',
    FECHA_PROX_MANTENIMIENTO DATE COMMENT 'FECHA DEL PROXIMO MANTENIMIENTO',
    COSTO DOUBLE,
    PRIMARY KEY (ID_COMODATO_MANTENIMIENTO)    
);

INSERT INTO preto_modulo(`ID_PRETO_MODULO`,`ID_ESTATUS`,`NOMBRE_MODULO`,`IDENTIFICADOR`) VALUES (91 ,'1','MODULO_COMODATO','MCOMODATO1');

-- Cesar Martinez 25/02/2016
-- Permiso de Auto servicio de inventario para Empleado Movil y Almacenes excluidos para moviles
ALTER TABLE empleado 
    ADD COLUMN `PERMISO_AUTO_SERV_INVENTARIO` INT DEFAULT '0' NULL COMMENT 'PERMISO PARA EL EMPLEADO MOVIL DE USAR AUTO SERVICIO DE INVENTARIO. 0: SIN PERMISO, 1: CON PERMISO';

ALTER TABLE almacen 
    ADD COLUMN `EXCLUIR_MOVILES` INT DEFAULT '0' NULL COMMENT 'INDICA SI EL ALMACEN Y TODOS LOS PRODUCTOS EN EL NO SE USARAN PARA APLICACION MOVIL. USO PARA P. EJ. PARA MATERIA PRIMA';

-- Cesar Martinez 08/03/2016
ALTER TABLE concepto 
    ADD COLUMN `MATERIA_PRIMA` INT DEFAULT '0' NULL COMMENT 'INDICA SI EL PRODUCTO SE MANEJARA COMO MATERIA PRIMA, ES DECIR, NO SE UTILIZA PARA HACER PEDIDOS O FACTURAS EN MOVILES NI CONSOLA. 1= Si, 0=no';

















--Cesar Martinez 09/03/2016
-- Modulo SMS
ALTER TABLE empresa 
    ADD COLUMN `CREDITOS_SMS` INT DEFAULT '0' NULL COMMENT 'Cantidad de Creditos para modulo de Envio Masivo SMS disponibles' AFTER `TK_MOVIL_MOSTRAR_FOLIO`, 
    ADD COLUMN `ID_SMS_DISPOSITIVO_MOVIL` INT DEFAULT '0' NULL COMMENT 'En caso de tener un dispositivo movil para envio de sms unico asignado' AFTER `CREDITOS_SMS`;

ALTER TABLE empresa_permiso_aplicacion 
    ADD COLUMN `ACCESO_MODULO_SMS` INT(1) DEFAULT '0' NULL COMMENT 'PERMISO PARA VER Y UTILIZAR EL MODULO DE ENVIO MASIVO SMS. 0 SIN PERMISO, 1 CON PERMISO' AFTER `MOSTRAR_GUIA`;

CREATE TABLE sms_plantilla( 
        `id_sms_plantilla` INT NOT NULL AUTO_INCREMENT COMMENT 'ID unico autoincrementable de tabla', 
        `alias_plantilla` VARCHAR(50) COMMENT 'Alias o nombre para distinguir a esta plantilla de forma específica, dato opcional.',
	`id_empresa` INT COMMENT 'Opcional. Empresa a la que pertenece la plantilla, en caso de tener valor menor o igual a 0 indica posible plantilla de sistema',
	`id_estatus` INT NOT NULL DEFAULT '1' COMMENT 'Estatus de la plantilla. 1 activo, 2 inactivo.',
	`asunto` VARCHAR(50) NOT NULL COMMENT 'Asunto o titulo de la plantilla',
	`contenido` VARCHAR(800) NOT NULL COMMENT 'Cuerpo o contenido del mensaje total a enviar.',
	`is_fijo_sistema` INT NOT NULL DEFAULT '0' COMMENT 'Indica si la plantilla es una fija del sistema.',
	`id_usuario_preto` INT COMMENT 'Opcional. en caso de crearse la plantilla en el sistema pretoriano llevara el ID del usuario que captura el registro.',
	`id_usuario_ventas` INT COMMENT 'Opcional. en caso de crearse la plantilla en el sistema de VENTAS llevara el ID del usuario que captura el registro de dicho sistema.',
	`fecha_hr_creado` DATETIME NOT NULL COMMENT 'Fecha y Hr en que se capturo la plantilla inicialmente', 
    PRIMARY KEY (`id_sms_plantilla`)
);

CREATE TABLE sms_envio_lote( 
        `id_sms_envio_lote` INT NOT NULL AUTO_INCREMENT COMMENT 'ID unico autoincrementable de tabla',
	`id_empresa` INT COMMENT 'ID de empresa al que pertenece el lote, puede ir sin valor en caso de crearse desde consola de Ventas',
	`id_estatus` INT NOT NULL DEFAULT '1' COMMENT 'Estatus del registro. 1 activo, 2 inactivo',
	`id_sms_plantilla` INT COMMENT 'ID de plantilla utilizada para este lote. Opcional, puede ser texto libre y no basado en plantilla.',
	`fecha_hr_captura` DATETIME NOT NULL COMMENT 'Fecha y hr de captura, creacion del lote',
	`fecha_hr_programa_envio` DATETIME COMMENT 'Fecha y hr programada para iniciar el envío de este lote.',
	`id_sms_dispositivo_movil` INT NOT NULL DEFAULT '0' COMMENT 'Si el valor es menor o igual a 0, indica que se puede enviar por cualquier dispositivo. Si tiene valor, corresponde al ID del dispositivo SMS a usar',
	`cantidad_destinatarios` INT NOT NULL DEFAULT '1' COMMENT 'Cantidad total de destinatarios que recibiran el mensaje',
	`cantidad_creditos_sms` INT DEFAULT '1' COMMENT 'Cantidad total de creditos sms ocupados para este lote (destinatarios x partes_sms)',
	`envio_inmediato` INT(1) NOT NULL DEFAULT '0' COMMENT 'Bandera para indicar si el lote tiene prioridad y se solicito envío inmediato.',
	`is_sms_sistema` INT(1) NOT NULL DEFAULT '0' COMMENT 'Indica si el lote es un mensaje auto generado por el sistema para reportar ventas, abonos, facturacion, etc.',
	`id_usuario_pretoriano` INT COMMENT 'Si fue creado desde sistema Pretoriano, indica el ID del usuario de dicho sistema',
	`id_usuario_ventas` INT COMMENT 'Si fue creado desde sistema Ventas, indica el ID del usuario de dicho sistema', 
    PRIMARY KEY (`id_sms_envio_lote`)
);

CREATE TABLE sms_envio_detalle( 
        `sms_envio_detalle` INT NOT NULL AUTO_INCREMENT COMMENT 'ID unico autoincrementable de tabla',
	`id_sms_envio_lote` INT COMMENT 'ID relacionado de lote al que pertenece este mensaje',
	`fecha_hr_creacion` DATETIME NOT NULL COMMENT 'Fecha y hora de creacion del mensaje',
	`fecha_hr_envio` DATETIME COMMENT 'Fecha y hora en que se envio el mensaje de acuerdo a información del movil',
	`enviado` INT(1) NOT NULL DEFAULT '0' COMMENT 'Bandera para indicar si el mensaje ya fue enviado exitosamente o no. 0 por enviar, 1 enviado exitosamente',
	`intentos_fallidos` INT NOT NULL DEFAULT '0' COMMENT 'Numero de intentos de envio fallidos.',
	`asunto` VARCHAR(50) COMMENT 'Asunto del mensaje',
	`mensaje` VARCHAR(1000) COMMENT 'Cuerpo o contenido del SMS completo',
	`num_partes_sms` INT NOT NULL DEFAULT '1' COMMENT 'Numero de partes en las que se divide el mensaje completo. El maximo por SMS son 160 caracteres.',
	`numero_celular` VARCHAR(15) NOT NULL COMMENT 'Numero de celular destinatario',
	`dest_id_cliente` INT COMMENT 'ID Cliente en caso de que el destinatario sea un Cliente',
	`dest_id_prospecto` INT COMMENT 'ID Prospecto en caso de que el destinatario sea un Prospecto registrado',
	`dest_id_empleado` INT COMMENT 'ID Empleado en caso de que el destinatario sea un Empleado de Pretoriano registrado',
	`dest_id_empresa` INT COMMENT 'ID Empresa en caso de que el destinatario sea una Empresa específica, desde la consola de Ventas',
	`dest_id_sms_agenda_dest` INT COMMENT 'ID de Destinatario en caso de ser uno registrado en tabla SMS_AGENDA_DESTINATARIO', 
    PRIMARY KEY (`sms_envio_detalle`)
);

CREATE TABLE sms_agenda_grupo( 
        `id_sms_agenda_grupo` INT NOT NULL AUTO_INCREMENT COMMENT 'ID unico autoincrementable de tabla',
	`nombre_grupo` VARCHAR(50) NOT NULL COMMENT 'Nombre del grupo',
	`descripcion_grupo` VARCHAR(250) COMMENT 'Descripcion del grupo, detalles o informacion adicional',
	`id_empresa` INT COMMENT 'ID de empresa a la que pertenece el grupo. Opcional, si se crea en consola de Ventas no lleva este registro',
	`id_estatus` INT NOT NULL DEFAULT '1' COMMENT 'Estatus del registro. 1 activo, 2 inactivo', 
    PRIMARY KEY (`id_sms_agenda_grupo`)
);

CREATE TABLE sms_agenda_destinatario( 
        `id_sms_agenda_dest` INT NOT NULL AUTO_INCREMENT COMMENT 'ID unico autoincrementable de tabla',
	`numero_celular` VARCHAR(15) NOT NULL COMMENT 'Numero de celular del destinatario',
	`nombre` VARCHAR(100) COMMENT 'Nombre del contacto destinatario',
	`campo_extra_1` VARCHAR(100) COMMENT 'Campo para informacion extra 1',
	`campo_extra_2` VARCHAR(100) COMMENT 'Campo para informacion extra 2',
	`campo_extra_3` VARCHAR(100) COMMENT 'Campo para informacion extra 3',
	`campo_extra_4` VARCHAR(100) COMMENT 'Campo para informacion extra 4',
	`id_sms_agenda_grupo` INT COMMENT 'ID del grupo al que pertenece este contacto. Opcional, puede ir vacio',
	`id_empresa` INT COMMENT 'ID de empresa a la que pertenece este registro de Contacto. Opcional, si no tiene valor indica que pertence al sistema en general para Ventas',
	`id_estatus` INT NOT NULL COMMENT 'Estatus del registro. 1 activo, 2 inactivo', 
    PRIMARY KEY (`id_sms_agenda_dest`)
);

CREATE TABLE sms_envio_error( 
        `id_sms_envio_error` INT NOT NULL AUTO_INCREMENT COMMENT 'ID unico autoincrementable de tabla',
	`id_sms_envio_detalle` INT NOT NULL COMMENT 'ID del sms_envio_detalle al que se relaciona este registro de error',
	`desc_error` VARCHAR(500) NOT NULL COMMENT 'Descripcion del error',
	`fecha_hr_error` DATETIME NOT NULL COMMENT 'Fecha y hora en que se registro el error en el movil',
	`id_sms_dispositivo` INT COMMENT 'ID del dispositivo de envio SMS, que registro el error. Opcional, si no tiene valor indica un error generado en consola al asignar y no en el movil al enviar.',
	`id_empresa` INT COMMENT 'ID de empresa a la que pertenece el registro. Opcional, en caso de ser un mensaje de consola de ventas',
	`id_estatus` INT NOT NULL DEFAULT '1' COMMENT 'Estatus del registro. 1 activo, 2 inactivo', 
    PRIMARY KEY (`id_sms_envio_error`)
);

CREATE TABLE sms_dispositivo_movil( 
        `id_sms_dispositivo_movil` INT NOT NULL AUTO_INCREMENT COMMENT 'ID unico autoincrementable de tabla',
	`id_estatus` INT NOT NULL DEFAULT '1' COMMENT 'Estatus del registro',
	`alias` VARCHAR(50) NOT NULL COMMENT 'Alias del dispositivo movil para identificarlo mas facil por el usuario',
	`numero_celular` VARCHAR(15) NOT NULL COMMENT 'Numero telefonico de celular',
	`imei` VARCHAR(15) COMMENT 'IMEI unico del dispositivo',
	`marca` VARCHAR(100) COMMENT 'Marca del dispositivo',
	`modelo` VARCHAR(100) COMMENT 'Modelo especifico del dispositivo',
	`pct_pila` DOUBLE NOT NULL DEFAULT '-1' COMMENT 'Ultima informacion del porcentaje de pila restante en el dispositivo.',
	`fecha_hr_ultima_com` DATETIME COMMENT 'Fecha y hora de la ultima comunicacion con el dispositivo movil para SMS', 
    PRIMARY KEY (`id_sms_dispositivo_movil`)
);

CREATE TABLE sms_empresa_config( 
        `id_sms_empresa_config` INT NOT NULL AUTO_INCREMENT COMMENT 'ID unico autoincrementable de tabla',
	`id_empresa` INT NOT NULL COMMENT 'ID de empresa a la que pertenece esta configuración',
	`permiso_sms_empleados` INT(1) NOT NULL DEFAULT '0' COMMENT 'Permiso para comunicación con empleados de la misma manera que se hace con mensajes moviles',
	`mensaje_venta` INT(1) NOT NULL DEFAULT '0' COMMENT 'Indica si se enviara un mensaje al cliente por cada venta realizada',
	`mensaje_venta_fijo` INT(1) NOT NULL DEFAULT '1' COMMENT 'Indica si el mensaje a enviar por venta, es el fijo del sistema o no. 0 msj libre, 1 msj fijo, 2 mezcla msf fijo mas libre',
	`mensaje_venta_libre` VARCHAR(500) COMMENT 'Mensaje libre redactado por cliente para ventas',
	`mensaje_abono` INT(1) NOT NULL DEFAULT '0' COMMENT 'Indica si se enviara un mensaje al cliente por cada abono realizado',
	`mensaje_abono_fijo` INT(1) NOT NULL DEFAULT '1' COMMENT 'Indica si el mensaje a enviar por abono, es el fijo del sistema o no. 0 msj libre, 1 msj fijo, 2 mezcla msf fijo mas libre',
	`mensaje_abono_libre` VARCHAR(500) COMMENT 'Mensaje libre redactado por cliente para abonos',
	`mensaje_factura` INT(1) NOT NULL DEFAULT '0' COMMENT 'Indica si se enviara un mensaje al cliente por cada factura realizada',
	`mensaje_factura_fijo` INT(1) NOT NULL DEFAULT '1' COMMENT 'Indica si el mensaje a enviar por factura, es el fijo del sistema o no. 0 msj libre, 1 msj fijo, 2 mezcla msf fijo mas libre',
	`mensaje_factura_libre` VARCHAR(500) COMMENT 'Mensaje libre redactado por cliente para facturas',
	`mensaje_cancela_fac` INT(1) NOT NULL DEFAULT '0' COMMENT 'Indica si se enviara un mensaje al cliente por cada cancelacion de factura realizada',
	`mensaje_cancela_fac_fijo` INT(1) NOT NULL DEFAULT '1' COMMENT 'Indica si el mensaje a enviar por cancelar factura, es el fijo del sistema o no. 0 msj libre, 1 msj fijo, 2 mezcla msf fijo mas libre',
	`mensaje_cancela_fac_libre` VARCHAR(500) COMMENT 'Mensaje libre redactado por cliente para cancelacion de facturas',
	`mensaje_callcenter` INT(1) NOT NULL DEFAULT '0' COMMENT 'Indica si se enviara un mensaje al cliente por cada registro de callcenter realizada',
	`mensaje_callcenter_fijo` INT(1) NOT NULL DEFAULT '1' COMMENT 'Indica si el mensaje a enviar por callcenter, es el fijo del sistema o no. 0 msj libre, 1 msj fijo, 2 mezcla msf fijo mas libre',
	`mensaje_callcenter_libre` VARCHAR(500) COMMENT 'Mensaje libre redactado por cliente para creacion de registro de callcenter', 
    PRIMARY KEY (`id_sms_empresa_config`)
);

CREATE TABLE sms_paquete_precio( 
        `id_sms_paquete_precio` INT NOT NULL AUTO_INCREMENT COMMENT 'ID unico autoincrementable de tabla',
	`nombre_paquete` VARCHAR(100) NOT NULL COMMENT 'Nombre del paquete',
	`descripcion_paquete` VARCHAR(500) COMMENT 'Descripcion extensa del paquete',
	`is_rango` INT(1) NOT NULL DEFAULT '1' COMMENT 'Bandera para indicar si el paquete es un rango de creditos o es un numero exacto de ellos. 0 cantidad libre, 1 rango de creditos',
	`rango_min` INT COMMENT 'En caso de rango, Limite menor de creditos',
	`rango_max` INT COMMENT 'en caso de rango, limite mayor de creditos',
	`rango_precio_unitario` DOUBLE DEFAULT '0' COMMENT 'En caso de rango, precio unitario por credito',
	`paquete_cantidad` INT DEFAULT '0' COMMENT 'En caso de paquete específico, cantidad de creditos incluidos',
	`paquete_precio_total` DOUBLE DEFAULT '0' COMMENT 'En caso de paquete libre, el precio total de dicho paquete de creditos',
	`id_estatus` INT NOT NULL DEFAULT '1' COMMENT 'Estatus del registro. 1 activo, 2 inactivo', 
    PRIMARY KEY (`id_sms_paquete_precio`)
);

CREATE TABLE sms_compra_bitacora( 
        `id_sms_compra_bitacora` INT NOT NULL AUTO_INCREMENT COMMENT 'ID unico autoincrementable de tabla',
	`is_auto_servicio` INT(1) NOT NULL DEFAULT '1' COMMENT 'Bandera para indicar si fue una compra realizada por el cliente o capturada por un vendedor. 0 hecha en consola de ventas, 1 compra registrada por el mismo cliente',
	`id_empresa` INT NOT NULL COMMENT 'ID de empresa que adquirio o se le asignaron los creditos sms',
	`fecha_hr` DATETIME NOT NULL COMMENT 'Fecha y hr del registro',
	`id_sms_paquete_precio` INT COMMENT 'ID del paquete de SMS comprado. Opcional, puede ser una venta libre',
	`cantidad_agregada` INT DEFAULT '0' COMMENT 'Cantidad de creditos SMS agregados a la cuenta del cliente',
	`cantidad_restada` INT DEFAULT '0' COMMENT 'Cantidad de creditos SMS restados de la cuenta del cliente',
	`observaciones` VARCHAR(500) COMMENT 'Observaciones o notas adicionales del registro',
	`id_usuario_preto` INT COMMENT 'En caso de ser una compra por parte del mismo cliente, el ID del usuario del sistema pretoriano que genero la accion',
	`id_usuario_ventas` INT COMMENT 'En caso de ser una venta desde consola Ventas, el ID del usuario que capturo en dicho sistema',
	`dato_pago_1` VARCHAR(100) COMMENT 'Campo para datos adicionales del Pago',
	`dato_pago_2` VARCHAR(100) COMMENT 'Campo para datos adicionales del Pago',
	`dato_pago_3` VARCHAR(100) COMMENT 'Campo para datos adicionales del Pago',
	`dato_pago_4` VARCHAR(100) COMMENT 'Campo para datos adicionales del Pago', 
    PRIMARY KEY (`id_sms_compra_bitacora`)
);

INSERT INTO preto_modulo(`ID_PRETO_MODULO`,`ID_ESTATUS`,`NOMBRE_MODULO`,`IDENTIFICADOR`) VALUES (92 ,'1','MODULO_SMS_PLANTILLAS','MSMS_PLANTILLAS');
INSERT INTO preto_modulo(`ID_PRETO_MODULO`,`ID_ESTATUS`,`NOMBRE_MODULO`,`IDENTIFICADOR`) VALUES (93 ,'1','MODULO_SMS_AGENDA','MSMS_AGENDA');

--Roberto 14-03-16
--Se agrega campo permiso_no_cobro_parcial a clientes, para ventas en efectivo se cobre el total y no pueda cambiarse
ALTER TABLE empleado 
ADD COLUMN PERMISO_NO_COBRO_PARCIAL INT DEFAULT 0 COMMENT '0 No(default como hasta ahora), 1 Si (solo puede cobrar el completo)'; --0 No(default como hasta ahora), 1 Si (solo puede cobrar el completo)

-- Cesar 15-03-16
-- acceso de modulo SMS Envio
INSERT INTO preto_modulo(`ID_PRETO_MODULO`,`ID_ESTATUS`,`NOMBRE_MODULO`,`IDENTIFICADOR`) VALUES (94 ,'1','MODULO_SMS_ENVIO','MSMS_ENVIO');

-- Cesar 28-03-16
-- Modificaciones minimas para tablas de modulo SMS
ALTER TABLE sms_envio_lote 
    ADD COLUMN `asunto` VARCHAR(50) NULL COMMENT 'Asunto del mensaje', 
    ADD COLUMN `mensaje` VARCHAR(1000) NULL COMMENT 'Mensaje general, puede variar del detalle debido a que en detalle se podria usar nombre de destinatario adicional, etc.';

ALTER TABLE sms_envio_detalle ADD COLUMN `heredar_mensaje_lote` INT DEFAULT '0' NULL COMMENT 'Indica si en lugar de guardar todo el mensaje en este registro, se hereda exactamente igual que de su lote padre. 0 = NO, 1 = SI, Heredar' AFTER `mensaje`;

ALTER TABLE sms_dispositivo_movil 
    ADD COLUMN `fecha_hr_ultimo_envio` DATETIME NULL COMMENT 'Fecha y hora del ultimo envío realizado por este dispositivo SMS', 
    ADD COLUMN `is_ocupado` INT DEFAULT '0' NULL COMMENT 'Bandera para indicar si el dispositivo esta actualmente ocupado enviando un lote. 0 = NO, 1= SI', 
    ADD COLUMN `id_sms_envio_lote_actual` INT DEFAULT '0' NULL COMMENT 'ID de Lote de Envio SMS que esta procesando actualmente el dispositivo. 0 en caso de no tener.';

-- Cesar 29-03-16
-- acceso de modulo SMS Configuracion
INSERT INTO preto_modulo(`ID_PRETO_MODULO`,`ID_ESTATUS`,`NOMBRE_MODULO`,`IDENTIFICADOR`) VALUES (95 ,'1','MODULO_SMS_CONFIG','MSMS_CONFIG');

-- modificacion de tabla de detalles sms
ALTER TABLE sms_envio_detalle 
    ADD COLUMN `id_estatus` INT DEFAULT '1' NULL COMMENT 'Estatus del registro. 1=activo, 2=inactivo' AFTER `dest_id_sms_agenda_dest`, 
    ADD COLUMN `id_empresa` INT NULL COMMENT 'ID de empresa a la que pertenece registro. Vacio o negativo en caso de pertenecer a consola ventas.' AFTER `id_estatus`,
    CHANGE `enviado` `enviado` INT(1) DEFAULT '0' NOT NULL COMMENT 'Bandera para indicar si el mensaje ya fue enviado exitosamente o no. 0 por enviar, 1 enviado exitosamente. 0=no enviado, 1=enviado, 2=procesando',
    CHANGE `sms_envio_detalle` `id_sms_envio_detalle` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'ID unico autoincrementable de tabla';

-- Leonardo 05-04-2016
-- Columnas nuevas para el control de cuando se sube el contrato y el permiso de que la empresa pueda acceder el modulo de comodato
ALTER TABLE COMODATO 
    ADD COLUMN FECHA_SUBIDA_CONTRATO DATETIME DEFAULT NULL;
ALTER TABLE EMPRESA_PERMISO_APLICACION
    ADD COLUMN ACCESO_MODULO_COMODATO INT(1) DEFAULT 0 COMMENT 'PERMISO PARA ACCEDER AL MODULO DE COMODATO, 0 SIN PERMISO, 1 CON PERMISO';

-- Cesar Martinez 05-04-2016
-- modificacion tabla dispositivo movil de SMS
ALTER TABLE sms_dispositivo_movil 
    ADD COLUMN `usuario` VARCHAR(50) NULL COMMENT 'Nombre de usuario SMS dispositivo movil' AFTER `id_sms_envio_lote_actual`, 
    ADD COLUMN `password` VARCHAR(100) NULL COMMENT 'Contrasenia de usuario SMS dispositivo movil' AFTER `usuario`;

ALTER TABLE sms_dispositivo_movil ADD UNIQUE `disp_movil_usuario_uk` (`usuario`);

-- Nuevo parametro para maximo de envio de SMS
INSERT INTO parametros(`ID_PARAMETRO`,`NOMBRE`,`DESCRIPCION`) VALUES ( '74','app.sms.maxSmsPorEnvio','40');
INSERT INTO parametros(`ID_PARAMETRO`,`NOMBRE`,`DESCRIPCION`) VALUES ( '75','app.sms.minutosMaximoOcupado','10');
INSERT INTO parametros(`ID_PARAMETRO`,`NOMBRE`,`DESCRIPCION`) VALUES ( '76','app.sms.minutosMaximoDesocupado','4');
INSERT INTO parametros(`ID_PARAMETRO`,`NOMBRE`,`DESCRIPCION`) VALUES ( '77','app.sms.maxIntentosFallidos','5');
INSERT INTO parametros(`ID_PARAMETRO`,`NOMBRE`,`DESCRIPCION`) VALUES ( '78','app.sms.destFijosMail','gpuga@movilpyme.com,cmartinez@movilpyme.com');

--Roberto Trejo 05/04/16
-- Permiso para mostrar u ocultar el boton de proveedores en el movil
ALTER TABLE empleado 
ADD COLUMN PERMISO_VER_PROVEEDORES INT DEFAULT 0 COMMENT '0 No(ocultar), 1 Si (mostrar)'; --0 No(default como hasta ahora), 1 Si (solo puede cobrar el completo)

-- Cesar Martinez 07-04-2016
-- Adiciones a inventario inicial
ALTER TABLE inventario_inicial_vendedor
    ADD COLUMN `FECHA_HR_ULT_ADICION` DATETIME NULL COMMENT 'Fecha y Hora de ultima adicion a Este inventario inicial' AFTER `FECHA_REGISTRO`, 
    ADD COLUMN `OBSERVACION_ULT_ADICION` VARCHAR(250) NULL COMMENT 'Observacion de ultima adicion a inventario inicial' AFTER `FECHA_HR_ULT_ADICION`;

-- Cesar Martinez 11-04-2016
-- acceso para pantalla Compra de Creditos SMS
INSERT INTO preto_modulo(`ID_PRETO_MODULO`,`ID_ESTATUS`,`NOMBRE_MODULO`,`IDENTIFICADOR`) VALUES (96 ,'1','MODULO_SMS_COMPRA','MSMS_COMPRA');

-- paquetes basicos de compra SMS
INSERT INTO `sms_paquete_precio`(`nombre_paquete`,`descripcion_paquete`,`is_rango`,`rango_min`,`rango_max`,`rango_precio_unitario`,`paquete_cantidad`,`paquete_precio_total`,`id_estatus`) 
	VALUES ( 'A','1 - 1000','1','1','1000','0.51','0','0','1');
INSERT INTO `sms_paquete_precio`(`nombre_paquete`,`descripcion_paquete`,`is_rango`,`rango_min`,`rango_max`,`rango_precio_unitario`,`paquete_cantidad`,`paquete_precio_total`,`id_estatus`) 
	VALUES ( 'B','1,001 - 10,000','1','1001','10000','0.49','0','0','1');
INSERT INTO `sms_paquete_precio`(`nombre_paquete`,`descripcion_paquete`,`is_rango`,`rango_min`,`rango_max`,`rango_precio_unitario`,`paquete_cantidad`,`paquete_precio_total`,`id_estatus`) 
	VALUES ( 'C','10,001 - 30,000','1','10001','30000','0.46','0','0','1');
INSERT INTO `sms_paquete_precio`(`nombre_paquete`,`descripcion_paquete`,`is_rango`,`rango_min`,`rango_max`,`rango_precio_unitario`,`paquete_cantidad`,`paquete_precio_total`,`id_estatus`) 
	VALUES ( 'D','30,001 - 100,000','1','30001','100000','0.43','0','0','1');
INSERT INTO `sms_paquete_precio`(`nombre_paquete`,`descripcion_paquete`,`is_rango`,`rango_min`,`rango_max`,`rango_precio_unitario`,`paquete_cantidad`,`paquete_precio_total`,`id_estatus`) 
	VALUES ( 'E','100,001 - en adelante','1','100001','0','0.40','0','0','1');

ALTER TABLE sms_compra_bitacora
    ADD COLUMN `id_banco_operacion` INT NULL COMMENT 'ID de campo relacionado en tabla banco_operacion';

-- Cesar Martinez 19-04-2016
-- Configuracion adicional para Reportes configurables.
ALTER TABLE reporte_configurable 
    ADD COLUMN `MAX_TIEMPO_ATRAS` VARCHAR(10) DEFAULT 'D-1' NULL COMMENT 'Tiempo maximo de consulta en tiempo hacia atras. Formato: D-N, S-N o M-N. P. Ej: D-1 representa 1 dia antes. S-1 una semana antes';

--Nueva Zona Horaria
INSERT INTO ZONA_HORARIA_CATALOGO(ZONA_HORARIA) VALUES ('America/Hermosillo');

-- Cesar Martinez 09-05-2016
-- Comentario para estatus en tablas
ALTER TABLE `sms_dispositivo_movil` CHANGE `id_estatus` `id_estatus` INT(11) DEFAULT '1' NOT NULL COMMENT 'Estatus del registro. 1 activo, 2 inactivo, 3 desconectado';

-- Cesar Martinez 11-05-2016
-- Nuevos campos para contacto mediante SMS a empresas y empleados
ALTER TABLE `empresa` 
    ADD COLUMN `CONTACTO_CELULAR` VARCHAR(15) NULL COMMENT 'Celular de contacto para notificaciones SMS o contacto de un asesor.';

ALTER TABLE `empleado`
    ADD COLUMN `CONTACTO_CELULAR` VARCHAR(15) NULL COMMENT 'Celular de contacto para notificaciones SMS o contacto de un asesor.';

-- Cesar Martinez 12-05-2016
-- Configuraciones generales para modulo SMS (consola de ventas)
INSERT INTO `parametros`(`ID_PARAMETRO`,`NOMBRE`,`DESCRIPCION`) VALUES ( '79','app.sms.notificarEnCompra','1');
INSERT INTO `parametros`(`ID_PARAMETRO`,`NOMBRE`,`DESCRIPCION`) VALUES ( '80','app.sms.notificarCreditosAgotados','1');

-- Leonardo Montes de Oca, 11-05-2016
-- Tablas para nuevo modulo de las reglas de cobranza
CREATE TABLE COBRANZA_REGLA(
    ID_COBRANZA_REGLA INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ID_ESTATUS INT(1) DEFAULT 1 COMMENT '1 ACTIVA, 2 ELIMINADA', 
    ID_EMPRESA INT,
    NOMBRE  VARCHAR(50) COMMENT 'NOMBRE DE LA REGLA',
    DESCRIPCION VARCHAR(200) COMMENT 'DESCRIPCION DE LA REGLA',
    ESTADO INT(1) DEFAULT 1 COMMENT '1 ACTIVA, 2 INACTIVA, 3 PAUSADA, 4 ALERTA: Se mostrara una alerta cuando el cliente tenga configurada una regla de envio de factura o sms y no cuente con créditos suficientes',
    TIPO_CARACTERISTICA INT(1) COMMENT '1 REGLA SE SEMAFORO, 2 REGLA DE FACTURA, 3 REGLA DE NOTA DE VENTA, 4 REGLA DE NOTIFICACION SMS',
    SEMAFORO_VERDE_DIAS INT(8) DEFAULT 0 COMMENT 'SI ES REGLA DE TIPO SEMAFORO: AL CLIENTE LE RESTAN Xs DIAS PARA REALIZAR SU PAGO',
    SEMAFORO_AMARILLO_DIAS INT(8) DEFAULT 0 COMMENT 'SI ES REGLA DE TIPO SEMAFORO: AL CLIENTE LE RESTAN Xs DIAS PARA REALIZAR SU PAGO',
    SEMAFORO_ROJO_DIAS INT(8) DEFAULT 0 COMMENT 'SI ES REGLA DE TIPO SEMAFORO: EL CLIENTE TIENE Xs DIAS DE ATRAZO EN SU PAGO',
    ID_PEDIDO_BASE INT DEFAULT 0 COMMENT 'SI ES DE TIPO FACTURA; ID DEL PEDIDO QUE SE USA COMO BASE PARA HACER LAS FACTURAS',
    ID_USUARIO_VENDEDOR INT DEFAULT 0 COMMENT 'SI ES DE TIPO FACTURA O NOTA DE VENTA; ID DEL USUARIO VENDEDOR ASIGNADO AL CUAL SE LE ASIGNARA EL PEDIDO/NOTA DE VENTA',                   
    FECHA_REGISTRO DATETIME COMMENT 'FECHA Y HORA DE CREACION'
);

-- TABLA DE CONTROL PARA SABER CADA CUANDO Y/O QUE DIAS SE VA A ENVIAR/GENERAR LA REGLA CUANDO ESTA ES DE TIPO FACTURA O NOTA DE VENTA
CREATE TABLE COBRANZA_REGLA_DIAS(
    ID_COBRANZA_REGLA_DIAS INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ID_COBRANZA_REGLA INT NOT NULL COMMENT 'ID DE LA TABLA COBRANZA_REGLA A LA QUE PERTENECE LA RELACION DE DIA DE ENVIO',
    TIPO INT(1) DEFAULT 1 COMMENT '1 DIA ESPECIFICO (SOLO SE APLICARA EL DIA MARCADO), 2 DIA ESPECIFICO CON PERIODICIDAD (SE APLICARA EL DIA MARCADO Y UN INTERVALO DE TIEMPO)',
    FECHA_APLICAR_REGLA DATE DEFAULT NULL COMMENT 'FECHA BASE EN LA QUE SE APLICA LA REGLA Y/O SE TOMA COMO REFERENCIA SI ESTA ACTIVO GENERACION DIAS/SEMANA/MENSUAL',
    ACTIVAR_GENERACION_SEMANAL_MESUAL INT(1) DEFAULT 0 COMMENT '0 SI NO ESTA ACTIVADO EL PERIODO DE ENVIO, SEMANA O MES, 1 SI SERA APLICADA DIARIAMENTE, 2 SI SERA APLICADA SEMANA A SEMANA, 3 SI SERA APLICADA MES A MES; EN BASE A FECHA_APLICAR_REGLA',    
    DIAS INT(5) DEFAULT 0 COMMENT 'CADA CUANTOS DIAS APLICAR LA REGLA, EN BASE A FECHA_APLICAR_REGLA ',
    FECHA_REGISTRO DATETIME COMMENT 'FECHA EN LA QUE SE CREA EL REGISTRO'    
);

-- RELACION ENTRE LA REGLA Y EL CLIENTE ASIGNADO
CREATE TABLE COBRANZA_REGLA_CLIENTE(
    ID_RELACION INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ID_COBRANZA_REGLA INT COMMENT 'ID DE LA TABLA COBRANZA_REGLA QUE SE RELACIONA',
    ID_CLIENTE INT COMMENT 'ID DEL CLIENTE QUE SE RELACIONA',
    REGLA_GENERALIZADA INT(1) DEFAULT 0 COMMENT '0 SI LA REGLA SOLO APLICA AL CLIENTE EN EL CAMPO IC_CLIENTE, 1 SI LA REGLA ES PARA TODOS LOS CLIENTES Y ID_CLIENTE SERA = 0',
    FECHA_REGISTRO DATETIME COMMENT 'FECHA Y HORA DE CREACION'
);

-- RELACION ENTRE LA REGLA Y LAS NOTIFICACIONES POR MENSAJE SMS
CREATE TABLE COBRANZA_REGLA_NOTIFICA_SMS(
    ID_COBRANZA_REGLA_NOTIFICA_SMS INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ID_COBRANZA_REGLA INT NOT NULL COMMENT 'ID DE LA TABLA COBRANZA_REGLA A LA QUE PERTENECE LA RELACION DE MENSAJES SMS',
    MENSAJE_DE_TEXTO VARCHAR(400),
    TELEFONOS_DESTINO VARCHAR(400) DEFAULT '' COMMENT 'TELEFONOS A LOS QUE SE ENVIARA EL MENSAJE SEPARADOS POR COMA , ',
    TIPO_REGLA INT(1) COMMENT '1 PRE-COBRANZA: ENVIAR MENSAJE CUANDO AL CLIENTE LE RESTAN Xs DIAS PARA REALIZAS SU PAGO, 2 COBRANZA: ENVIAR CUANDO AL CLIENTE TENGA UN ATRASO DE Xs DIAS',
    DIAS_PRECOBRANZA_COBRANZA INT DEFAULT 0 COMMENT 'DEPENDIENDO EL TIPO_REGLA: RESTAN Xs DIAS PARA REALIZAS SU PAGO O UN ATRASO DE Xs DIAS',
    PERIODICIDAD_HORAS DOUBLE COMMENT 'SI ES DE TIPO_REGLA = COBRANZA; ENTONCES TENDRA PERIODICIDAD EN HORAS'
);

INSERT INTO preto_modulo(`ID_PRETO_MODULO`,`ID_ESTATUS`,`NOMBRE_MODULO`,`IDENTIFICADOR`) VALUES ( 97,'1','MODULO_FANANZAS_ACCIONES_COBRANZA','MFINANZA_ACCIONCOBRANZA');

-- Cesar Martinez 13-05-2016
-- Identificador de Dispositivo SMS que envio exitosamente un mensaje
ALTER TABLE `sms_envio_detalle` ADD COLUMN `id_sms_dispositivo_ejecuto` INT DEFAULT '0' NULL COMMENT 'ID de Sms Dispositivo movil que realizo el envio exitoso de este detalle';

-- Leonardo Montes de Oca, 16-05-2016
-- Nuevo identificador de estatus pedido, esto para saber si se trata de un pedido base de una regla de cobranza
INSERT INTO sgfens_estatus_pedido VALUES (10, 'REGLA COBRANZA', 'Base para una regla de cobranza');

-- Leonardo Montes de Oca, 24-05-2016
-- Atributo para identificar de que tipo es el mensaje o que modulo lo genero:
ALTER TABLE sms_envio_lote ADD COLUMN ID_TIPO INT(2) DEFAULT 1 COMMENT '1 GENERAL, 2 REGLA DE COBRANZA';

-- Leonardo Montes de Oca1 26-05-2016
-- Se añadio a la vista la columna de fecha tentativa de pago, esto para las alertas de cobranza
--Vista pedidos con adeudos dashboard
DROP VIEW VISTA_PEDIDOS_CON_ADEUDOS;
CREATE VIEW VISTA_PEDIDOS_CON_ADEUDOS 
AS
SELECT DISTINCT sgfens_pedido.ID_EMPRESA,sgfens_pedido.ID_PEDIDO,sgfens_pedido.ID_ESTATUS_PEDIDO,sgfens_pedido.ID_CLIENTE,sgfens_pedido.ID_USUARIO_VENDEDOR,sgfens_pedido.FECHA_PEDIDO, sgfens_pedido.FECHA_TENTATIVA_PAGO, CASE WHEN sgfens_cobranza_abono.FECHA_ABONO IS NULL THEN sgfens_pedido.FECHA_PEDIDO ELSE sgfens_cobranza_abono.FECHA_ABONO  END AS FECHA_ULTIMO_ABONO
FROM sgfens_pedido LEFT JOIN sgfens_cobranza_abono ON sgfens_pedido.ID_PEDIDO = sgfens_cobranza_abono.ID_PEDIDO
WHERE (sgfens_pedido.ID_ESTATUS_PEDIDO <> 3 AND sgfens_pedido.ID_ESTATUS_PEDIDO <> 10) AND (sgfens_pedido.TOTAL - (sgfens_pedido.SALDO_PAGADO + sgfens_pedido.ADELANTO)) > 0 

-- Cesar Martinez 20-05-2016
-- Velocidad de dispositivo al momento de registrar ubicacion
ALTER TABLE `empleado_bitacora_posicion` 
    ADD COLUMN `velocidad_m_x_seg` DOUBLE DEFAULT '-1' NULL COMMENT 'Velocidad si esta disponible, expresada en metros sobre segundo' AFTER `fecha`,
    ADD COLUMN `direccion_avance` DOUBLE DEFAULT '-1' NULL COMMENT 'Orientación en la que se desplaza el dispositivo movil en grados 0 a 360. No corresponde a la orientacion del dispositivo en si mismo.' AFTER `velocidad_m_x_seg`;

-- Cesar Martinez 24-05-2016
-- Intervalo en segundos de cada cuando el dispositivo del empleado movil debe enviar datos de ubicacion
ALTER TABLE `empleado` ADD COLUMN `INTERVALO_UBICACION_SEG` INT DEFAULT '600' NULL COMMENT 'Intervalo en segundos en la que el empleado movil reportara su ubicacion. Por default 10 minutos.';

-- Leonardo Montes de Oca, 26-05-2016
-- Atrubitos para saber que el pedido y la factura se realizaron por una regla de cobranza y se creo de manera automatica
ALTER TABLE SGFENS_PEDIDO ADD COLUMN CREADO_TIPO INT(2) DEFAULT 0 COMMENT '0 CREADO EN CONSOLA O MOVIL, 1 CREADO POR REGLA DE COBRANZA';
ALTER TABLE COMPROBANTE_FISCAL ADD COLUMN CREADO_TIPO INT(2) DEFAULT 0 COMMENT '0 CREADO EN CONSOLA O MOVIL, 1 CREADO POR REGLA DE COBRANZA';

-- Leonardo Montes de Oca, 30-05-2016
-- Vista para empalmar pedidos y cobraza

--SELECT SP.ID_PEDIDO, SP.FOLIO_PEDIDO, SP.ID_CLIENTE, SP.SUBTOTAL, SP.TOTAL, SP.FECHA_ENTREGA, SP.FECHA_PEDIDO, SP.FECHA_TENTATIVA_PAGO, SP.SALDO_PAGADO, SP.ADELANTO,
--SC.ID_COBRANZA_ABONO, SC.ID_PEDIDO, SC.ID_CLIENTE, SC.FECHA_ABONO,
----CASE WHEN SC.FECHA_ABONO IS NULL THEN SP.FECHA_PEDIDO ELSE SC.FECHA_ABONO END AS FECHA_ABONO_LEE, 
--SC.MONTO_ABONO, SC.ID_COBRANZA_METODO_PAGO
--FROM sgfens_pedido SP LEFT JOIN sgfens_cobranza_abono SC ON SP.ID_PEDIDO = SC.ID_PEDIDO
--UNION ALL
--SELECT SP.ID_PEDIDO, SP.FOLIO_PEDIDO, SP.ID_CLIENTE, SP.SUBTOTAL, SP.TOTAL, SP.FECHA_ENTREGA, SP.FECHA_PEDIDO, SP.FECHA_TENTATIVA_PAGO, SP.SALDO_PAGADO, SP.ADELANTO,
--SC.ID_COBRANZA_ABONO, SC.ID_PEDIDO, SC.ID_CLIENTE, SC.FECHA_ABONO,
----CASE WHEN SC.FECHA_ABONO IS NULL THEN SP.FECHA_PEDIDO ELSE SC.FECHA_ABONO END AS FECHA_ABONO_LEE, 
--SC.MONTO_ABONO, SC.ID_COBRANZA_METODO_PAGO
--FROM sgfens_pedido SP RIGHT JOIN sgfens_cobranza_abono SC ON SP.ID_PEDIDO = SC.ID_PEDIDO

CREATE VIEW VISTA_PEDIDOS_AND_COBRANZA
AS
SELECT 'pedido' AS tipo, ID_PEDIDO AS 'id', ID_PEDIDO AS 'id_pedido', FECHA_PEDIDO AS 'fecha', TOTAL AS 'total', ID_CLIENTE AS 'id_cliente', 0 AS id_metodo_pago FROM sgfens_pedido 
WHERE ID_ESTATUS_PEDIDO != 3 AND ID_ESTATUS_PEDIDO != 10
UNION
SELECT 'cobro' AS tipo, ID_COBRANZA_ABONO AS 'id', ID_PEDIDO AS 'id_pedido', FECHA_ABONO AS 'fecha', MONTO_ABONO AS 'total', ID_CLIENTE AS 'id_cliente', ID_COBRANZA_METODO_PAGO AS id_metodo_pago FROM sgfens_cobranza_abono
WHERE ID_PEDIDO IN (SELECT ID_PEDIDO FROM sgfens_pedido WHERE ID_ESTATUS_PEDIDO != 3 AND ID_ESTATUS_PEDIDO != 10) AND ID_ESTATUS = 1 
ORDER BY fecha asc;

-- Cesar Martinez 02/06/2016
-- Modificacion para cumplir con nuevo catalogo de metodos de pago del SAT
ALTER TABLE `tipo_pago` 
    ADD COLUMN `CLAVE_METODO_SAT` VARCHAR(3) DEFAULT '99' NOT NULL COMMENT 'Clave de metodo de Pago SAT. Por defecto 99 - Otros';

-- Cesar Martinez 03-06-2016
-- Modificación a tabla de metodos de pago para pedidos y moviles, para cumplir con nuevo catalogo de metodos de pago del SAT
INSERT INTO `sgfens_cobranza_metodo_pago`(`ID_COBRANZA_METODO_PAGO`,`NOMBRE_METODO_PAGO`,`DESCRIPCION_METODO_PAGO`,`SINCRONIZACION_MICROSIP`,`TIPO_PAGO`) VALUES ( '7','Otro','Otro, no definido en la lista de metodos de pago','0','ENTRADA');
INSERT INTO `sgfens_cobranza_metodo_pago`(`ID_COBRANZA_METODO_PAGO`,`NOMBRE_METODO_PAGO`,`DESCRIPCION_METODO_PAGO`,`SINCRONIZACION_MICROSIP`,`TIPO_PAGO`) VALUES ( '8','Cheque','Pago con cheque','0','ENTRADA');
INSERT INTO `sgfens_cobranza_metodo_pago`(`ID_COBRANZA_METODO_PAGO`,`NOMBRE_METODO_PAGO`,`DESCRIPCION_METODO_PAGO`,`SINCRONIZACION_MICROSIP`,`TIPO_PAGO`) VALUES ( '9','Vales','Pago con vales','0','ENTRADA');

ALTER TABLE sgfens_cobranza_metodo_pago
    ADD COLUMN `CLAVE_METODO_SAT` VARCHAR(3) DEFAULT '99' NOT NULL COMMENT 'Clave de metodo de Pago SAT. Por defecto 99 - Otros';

UPDATE `sgfens_cobranza_metodo_pago` SET `ID_COBRANZA_METODO_PAGO`='1',`NOMBRE_METODO_PAGO`='Tarjeta Crédito/Débito',`DESCRIPCION_METODO_PAGO`='Tarjeta de Crédito o Débito, se hace uso de Operación Bancaria',`SINCRONIZACION_MICROSIP`='0',`TIPO_PAGO`='ENTRADA',`CLAVE_METODO_SAT`='04' WHERE `ID_COBRANZA_METODO_PAGO`='1';
UPDATE `sgfens_cobranza_metodo_pago` SET `ID_COBRANZA_METODO_PAGO`='2',`NOMBRE_METODO_PAGO`='Efectivo',`DESCRIPCION_METODO_PAGO`='Pago en Efectivo',`SINCRONIZACION_MICROSIP`='0',`TIPO_PAGO`='ENTRADA',`CLAVE_METODO_SAT`='01' WHERE `ID_COBRANZA_METODO_PAGO`='2';
UPDATE `sgfens_cobranza_metodo_pago` SET `ID_COBRANZA_METODO_PAGO`='3',`NOMBRE_METODO_PAGO`='Documento (Cheque/Vale)',`DESCRIPCION_METODO_PAGO`='Pago con documento, Cheque o Vale',`SINCRONIZACION_MICROSIP`='0',`TIPO_PAGO`='ENTRADA',`CLAVE_METODO_SAT`='02' WHERE `ID_COBRANZA_METODO_PAGO`='3';
UPDATE `sgfens_cobranza_metodo_pago` SET `ID_COBRANZA_METODO_PAGO`='5',`NOMBRE_METODO_PAGO`='Transferencia Interbancaria',`DESCRIPCION_METODO_PAGO`='Pago interbancario',`SINCRONIZACION_MICROSIP`='0',`TIPO_PAGO`='ENTRADA',`CLAVE_METODO_SAT`='03' WHERE `ID_COBRANZA_METODO_PAGO`='5';
UPDATE `sgfens_cobranza_metodo_pago` SET `ID_COBRANZA_METODO_PAGO`='6',`NOMBRE_METODO_PAGO`='Bonificación',`DESCRIPCION_METODO_PAGO`='Bonificación a saldo cliente por cambios y devoluciones',`SINCRONIZACION_MICROSIP`='0',`TIPO_PAGO`='ENTRADA',`CLAVE_METODO_SAT`='17' WHERE `ID_COBRANZA_METODO_PAGO`='6';
UPDATE `sgfens_cobranza_metodo_pago` SET `ID_COBRANZA_METODO_PAGO`='8',`NOMBRE_METODO_PAGO`='Cheque',`DESCRIPCION_METODO_PAGO`='Pago con cheque',`SINCRONIZACION_MICROSIP`='0',`TIPO_PAGO`='ENTRADA',`CLAVE_METODO_SAT`='02' WHERE `ID_COBRANZA_METODO_PAGO`='8';
UPDATE `sgfens_cobranza_metodo_pago` SET `ID_COBRANZA_METODO_PAGO`='9',`NOMBRE_METODO_PAGO`='Vales',`DESCRIPCION_METODO_PAGO`='Pago con vales',`SINCRONIZACION_MICROSIP`='0',`TIPO_PAGO`='ENTRADA',`CLAVE_METODO_SAT`='08' WHERE `ID_COBRANZA_METODO_PAGO`='9';
UPDATE `sgfens_cobranza_metodo_pago` SET `ID_COBRANZA_METODO_PAGO`='10',`NOMBRE_METODO_PAGO`='Devolución Efectivo',`DESCRIPCION_METODO_PAGO`='Devolución de efectivo al cliente , este pago es una salida de dinero',`SINCRONIZACION_MICROSIP`='0',`TIPO_PAGO`='SALIDA',`CLAVE_METODO_SAT`='16' WHERE `ID_COBRANZA_METODO_PAGO`='10';